{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"INDENT",
				"INDENT_LEN"
			],
			[
				"quot",
				"quotmarkSingle"
			],
			[
				"quotm",
				"quotmarkDouble"
			],
			[
				"getGro",
				"getGroupNodes"
			]
		]
	},
	"buffers":
	[
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 684,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/empty.js",
			"settings":
			{
				"buffer_size": 163,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/relax/FAIL-noyield.js",
			"settings":
			{
				"buffer_size": 474,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Gruntfile.js",
			"settings":
			{
				"buffer_size": 2751,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/permissive/permissive-errors.js",
			"settings":
			{
				"buffer_size": 5937,
				"line_ending": "Windows",
				"name": "permissive-errors.js"
			}
		},
		{
			"file": "lib/permissive-inline-jshint-opts.js",
			"settings":
			{
				"buffer_size": 796,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/pref-inline-jshint-opts.js",
			"settings":
			{
				"buffer_size": 543,
				"line_ending": "Windows"
			}
		},
		{
			"file": "bin/jshint-inline.pl",
			"settings":
			{
				"buffer_size": 2153,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/pref-generated.txt",
			"settings":
			{
				"buffer_size": 1002,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 993 files for \"new\" (regex)\n\nD:\\d\\s\\github\\jshint-test\\pj-jshint-test.sublime-workspace:\n  124  		\"/D/d/s/github/jshint-test/lib/relax/noyield.js\",\n  125  		\"/D/d/s/github/jshint-test/lib/relax/validthis.js\",\n  126: 		\"/D/d/s/github/jshint-test/lib/relax/supernew.js\",\n  127  		\"/D/d/s/github/jshint-test/lib/relax/sub.js\",\n  128  		\"/D/d/s/github/jshint-test/lib/relax/shadow.js\",\n  ...\n  172  		\"/D/d/s/js-play/jshint/lib/enforce/undef.js\",\n  173  		\"/D/d/s/js-play/jshint/lib/enforce/FAIL_undef_function_scope.js\",\n  174: 		\"/D/d/s/js-play/jshint/lib/enforce/nonew.js\",\n  175  		\"/D/d/s/js-play/jshint/lib/enforce/quotmark_single.js\",\n  176  		\"/D/d/s/js-play/jshint/lib/enforce/quotmark_double.js\",\n  ...\n  190  		\"/D/d/s/js-play/jshint/lib/enforce/unused.js\",\n  191  		\"/D/d/s/js-play/jshint/lib/enforce/TODO_es3.js\",\n  192: 		\"/D/d/s/js-play/jshint/lib/enforce/newcap.js\",\n  193  		\"/D/d/s/js-play/jshint/lib/enforce/latedef_nofurc.js\",\n  194  		\"/D/d/s/js-play/jshint/lib/enforce/latedef.js\",\n  ...\n  260  			\"undef\",\n  261  			\"not_at_all\",\n  262: 			\"nonew\",\n  263  			\"freeze\",\n  264  			\"forin\",\n  ...\n  364  			\"noyield\",\n  365  			\"validthis\",\n  366: 			\"supernew\",\n  367  			\"sub\",\n  368  			\"shadow\",\n\nD:\\d\\s\\github\\jshint-test\\dist\\enforce.js:\n  390  \n  391  (function () {\n  392: 	/*jshint newcap: true */\n  393: 	function newcap() {\n  394  		var someobject = function () { return this; },\n  395  			SomeObj = function () { return this; };\n  396  		return [\n  397: 			new someobject(),\n  398: 			new SomeObj()\n  399  		];\n  400  	}\n  401: 	newcap();\n  402  })();\n  403  \n  ...\n  436  \n  437  (function () {\n  438: 	function nonew() {\n  439: 		/*jshint nonew: true */\n  440  		var SomeObj = function () { return this; };\n  441: 		// no new for side effects\n  442: 		new SomeObj();\n  443: 		// don't just call function without new\n  444  		SomeObj();\n  445  		// ok assign to a var\n  446: 		var s = new SomeObj();\n  447  		return s;\n  448  	}\n  449: 	nonew();\n  450  })();\n  451  \n\nD:\\d\\s\\github\\jshint-test\\dist\\relax.js:\n  485  \n  486  (function () {\n  487: 	function supernew() {\n  488: 		/*jshint supernew: false */\n  489  		// sometimes done for singletons\n  490: 		return new function () { // not relaxed\n  491  			this.exists = true; return this;\n  492  		}; // not relaxed\n  493  	}\n  494: 	function supernewTrue() {\n  495: 		/*jshint supernew: true */\n  496  		// sometimes done for singletons\n  497: 		return new function () { // relaxed\n  498  			this.exists = true; return this;\n  499  		}; // relaxed\n  500  	}\n  501: 	supernew();\n  502: 	supernewTrue();\n  503  })();\n  504  \n\nD:\\d\\s\\github\\jshint-test\\lib\\_inline-jshint-opts.js:\n   14  	indent: 4,\n   15  	latedef: true,\n   16: 	newcap: true,\n   17  	noarg: true,\n   18  	noempty: true,\n   19: 	nonew: true,\n   20  	plusplus: true,\n   21  	quotmark: true,\n   ..\n   41  // immed immediately executing functions parenthesised\n   42  // freeze no prototype changes to native objects\n   43: // newcap constructor functions must be capitalised\n   44: // nonew disallow calling constructors without new\n   45  \n   46  // Relaxing Options\n   ..\n   69  	shadow: false,\n   70  	sub: false,\n   71: 	supernew: false,\n   72  \n   73  	maxerr: 5000\n\nD:\\d\\s\\github\\jshint-test\\lib\\jshintopts.txt:\n    7          immed: true,\n    8          latedef: true,\n    9:         newcap: true,\n   10          noarg: true,\n   11          sub: true,\n\nD:\\d\\s\\github\\jshint-test\\lib\\permissive-inline-jshint-opts.js:\n    8  	immed: false,\n    9  	latedef: false,\n   10: 	newcap: false,\n   11  	noarg: false,\n   12  	noempty: false,\n   13: 	nonew: false,\n   14  	plusplus: false,\n   15  	quotmark: false,\n\nD:\\d\\s\\github\\jshint-test\\lib\\pref-generated.txt:\n    2  	indent: 3, maxparams: 4, maxdepth: 3, maxstatements: 11, \n    3  	maxcomplexity: 5, maxlen: 100, bitwise: true, curly: true, eqeqeq: true, \n    4: 	forin: true, freeze: true, immed: true, latedef: true, newcap: true, \n    5: 	noarg: true, noempty: true, nonew: true, plusplus: true, quotmark: true, \n    6  	undef: true, unused: strict, strict: true, trailing: true, maxerr: 5000\n    7  */\n    .\n   20          'immed': true,\n   21          'latedef': true,\n   22:         'newcap': true,\n   23          'noarg': true,\n   24          'noempty': true,\n   25:         'nonew': true,\n   26          'plusplus': true,\n   27          'quotmark': true,\n\nD:\\d\\s\\github\\jshint-test\\lib\\pref-inline-jshint-opts.js:\n   14  	immed: true,\n   15  	latedef: true,\n   16: 	newcap: true,\n   17  	noarg: true,\n   18  	noempty: true,\n   19: 	nonew: true,\n   20  	plusplus: true,\n   21  	quotmark: true,\n\nD:\\d\\s\\github\\jshint-test\\lib\\enforce\\newcap.js:\n    1  \n    2  (function () {\n    3: 	/*jshint newcap: true */\n    4: 	function newcap() {\n    5  		var someobject = function () { return this; },\n    6  			SomeObj = function () { return this; };\n    7  		return [\n    8: 			new someobject(),\n    9: 			new SomeObj()\n   10  		];\n   11  	}\n   12: 	newcap();\n   13  })();\n   14  \n\nD:\\d\\s\\github\\jshint-test\\lib\\enforce\\nonew.js:\n    1  \n    2  (function () {\n    3: 	function nonew() {\n    4: 		/*jshint nonew: true */\n    5  		var SomeObj = function () { return this; };\n    6: 		// no new for side effects\n    7: 		new SomeObj();\n    8: 		// don't just call function without new\n    9  		SomeObj();\n   10  		// ok assign to a var\n   11: 		var s = new SomeObj();\n   12  		return s;\n   13  	}\n   14: 	nonew();\n   15  })();\n   16  \n\nD:\\d\\s\\github\\jshint-test\\lib\\permissive\\permissive-errors.js:\n    8  	immed: false,\n    9  	latedef: false,\n   10: 	newcap: false,\n   11  	noarg: false,\n   12  	noempty: false,\n   13: 	nonew: false,\n   14  	plusplus: false,\n   15  	quotmark: false,\n   ..\n   48  \n   49  function boot() {\n   50:   var session = new Session;\n   51:   var app = new AppView({\n   52:     exercises: new Exercise.Collection,\n   53:     router: new AppRouter\n   54    });\n   55    app.router.on(\"all\",console.log.bind(console));\n   ..\n   99  var AppView = Backbone.View.extend({\n  100    initialize: function(opts) {\n  101:     this.preferences = new Preferences;\n  102      this.preferences.fetch();\n  103      this.router = opts.router;\n  ...\n  113      this.$el.html(\"<nav></nav><div class=stage></div>\");\n  114      this.$stage = this.$(\".stage\");\n  115:     var nav = new NavView({\n  116        el: this.$(\"nav\")[0]\n  117      });\n  ...\n  125    },\n  126    home: function() {\n  127:     var view = new HomeView({\n  128        model: this.preferences\n  129      });\n  ...\n  132    },\n  133    add: function(id) {\n  134:     var view = new ExerciseAddView({\n  135        collection: this.exercises\n  136      })\n  ...\n  138    },\n  139    overview: function() {\n  140:     var view = new ExerciseListOverview({\n  141        collection: this.exercises\n  142      });\n  ...\n  224  var ExerciseListOverview = Backbone.View.extend({\n  225    initialize: function() {\n  226:     this.listView = new ExerciseListView({\n  227        collection: this.collection\n  228      })\n  ...\n  238      this.el.innerHTML =\n  239        \"<a href='#'>Home</a> \" +\n  240:       \"<a href='#exercises/new'>Add</a> \" +\n  241        \"<a href='#exercises'>All exercises</a>\";\n  242    }\n  ...\n  247    routes: {\n  248      \"\": \"home\",\n  249:     \"exercises/new\": \"exerciseAdd\",\n  250      \"exercises\": \"exerciseOverview\"\n  251    }\n\nD:\\d\\s\\github\\jshint-test\\lib\\relax\\supernew.js:\n    1  \n    2  (function () {\n    3: 	function supernew() {\n    4: 		/*jshint supernew: false */\n    5  		// sometimes done for singletons\n    6: 		return new function () { // not relaxed\n    7  			this.exists = true; return this;\n    8  		}; // not relaxed\n    9  	}\n   10: 	function supernewTrue() {\n   11: 		/*jshint supernew: true */\n   12  		// sometimes done for singletons\n   13: 		return new function () { // relaxed\n   14  			this.exists = true; return this;\n   15  		}; // relaxed\n   16  	}\n   17: 	supernew();\n   18: 	supernewTrue();\n   19  })();\n   20  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\internal-tasks\\bump.js:\n   36      if (this.errorCount > 0) {\n   37        grunt.log.error('Valid modes are: ' + valids.join(', ') + '.');\n   38:       throw new Error('Use valid modes (or unambiguous mode abbreviations).');\n   39      }\n   40      // Options.\n   ..\n   57        var origVersion = o.version;\n   58        // If syncVersions is enabled, only grab version from the first file,\n   59:       // guaranteeing new versions will always be in sync.\n   60        var firstVersion = Object.keys(versions)[0];\n   61        if (options.syncVersions && firstVersion) {\n   ..\n   98        });\n   99      }\n  100:     // We're only going to create one tag. And it's going to be the new\n  101      // version of the first bumped file. Because, sanity.\n  102:     var newVersion = versions[Object.keys(versions)[0]].version;\n  103      if (options.tag) {\n  104        if (options.tagPrerelease || modes.indexOf('prerelease') === -1) {\n  105          tag(\n  106:           processTemplate(options.tagName, {version: newVersion}),\n  107:           processTemplate(options.tagMessage, {version: newVersion})\n  108          );\n  109        } else {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\internal-tasks\\subgrunt.js:\n   23          if (error) {\n   24            grunt.log.error().error(result.stdout).writeln();\n   25:           next(new Error('Error running sub-gruntfile \"' + gruntfile + '\".'));\n   26          } else {\n   27            grunt.log.ok().verbose.ok(result.stdout);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt.js:\n   41  \n   42  // Expose specific grunt lib methods on grunt.\n   43: function gExpose(obj, methodName, newMethodName) {\n   44:   grunt[newMethodName || methodName] = obj[methodName].bind(obj);\n   45  }\n   46  gExpose(task, 'registerTask');\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt\\cli.js:\n   29        } else if (cli.optlist[key].type === Array) {\n   30          // If this option's type is Array, append it to any existing array\n   31:         // (or create a new array).\n   32          [].push.apply(cli.options[key], options[key]);\n   33        }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt\\event.js:\n   14  \n   15  // Awesome.\n   16: module.exports = new EventEmitter2({wildcard: true});\n   17  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt\\file.js:\n  166        fileByDest[dest].src.push(src);\n  167      } else {\n  168:       // Otherwise create a new src-dest file mapping object.\n  169        files.push({\n  170          src: [src],\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt\\log.js:\n  272        continue;\n  273  \n  274:     // Matched a non-newline character?\n  275      } else if (matches[2]) {\n  276        // If this is the first character and a previous color code was set, push\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt\\task.js:\n  229        return task.runAllTargets(name, this.args);\n  230      } else if (!isValidMultiTaskTarget(target)) {\n  231:       throw new Error('Invalid target \"' + target + '\" specified.');\n  232      }\n  233      // Fail if any required config properties have been omitted.\n  ...\n  277  \n  278  // Override built-in renameTask to use the registry.\n  279: task.renameTask = function(oldname, newname) {\n  280    // Add and remove task.\n  281    registry.untasks.push(oldname);\n  282:   registry.tasks.push(newname);\n  283    // Actually rename task.\n  284    return parent.renameTask.apply(task, arguments);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt\\template.js:\n   20  // Format today's date.\n   21  template.today = function(format) {\n   22:   return template.date(new Date(), format);\n   23  };\n   24  \n   ..\n   37    // Used by Lo-Dash.\n   38    delimiters.lodash = {\n   39:     evaluate: new RegExp(a + b, 'g'),\n   40:     interpolate: new RegExp(a + '=' + b, 'g'),\n   41:     escape: new RegExp(a + '-' + b, 'g')\n   42    };\n   43  };\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\grunt\\util.js:\n   51  };\n   52  \n   53: // Create a new Error object, with an origError property that will be dumped\n   54  // if grunt was run with the --debug=9 option.\n   55  util.error = function(err, origError) {\n   56:   if (!nodeUtil.isError(err)) { err = new Error(err); }\n   57    if (origError) { err.origError = origError; }\n   58    return err;\n   ..\n   85  // Return the string `str` repeated `n` times.\n   86  util.repeat = function(n, str) {\n   87:   return new Array(n + 1).join(str || ' ');\n   88  };\n   89  \n   ..\n  123    // done function.\n  124    var callDone = function(code, stdout, stderr) {\n  125:     // Remove trailing whitespace (newline)\n  126      stdout = _.rtrim(stdout);\n  127      stderr = _.rtrim(stderr);\n  ...\n  144      };\n  145      // On error (and no fallback) pass an error object, otherwise pass null.\n  146:     done(code === 0 || 'fallback' in opts ? null : new Error(stderr), result, code);\n  147    };\n  148  \n  ...\n  170  \n  171    var child = spawn(cmd, args, opts.opts);\n  172:   var stdout = new Buffer('');\n  173:   var stderr = new Buffer('');\n  174    if (child.stdout) {\n  175      child.stdout.on('data', function(buf) {\n  176:       stdout = Buffer.concat([stdout, new Buffer(buf)]);\n  177      });\n  178    }\n  179    if (child.stderr) {\n  180      child.stderr.on('data', function(buf) {\n  181:       stderr = Buffer.concat([stderr, new Buffer(buf)]);\n  182      });\n  183    }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\lib\\util\\task.js:\n   35    exports.Task = Task;\n   36  \n   37:   // Create a new Task instance.\n   38    exports.create = function() {\n   39:     return new Task();\n   40    };\n   41  \n   ..\n   52    };\n   53  \n   54:   // Register a new task.\n   55    Task.prototype.registerTask = function(name, info, fn) {\n   56      // If optional \"info\" string is omitted, shuffle arguments a bit.\n   ..\n   89    // behavior of a task, while retaining the old name. This is a billion times\n   90    // easier to implement than some kind of in-task \"super\" functionality.\n   91:   Task.prototype.renameTask = function(oldname, newname) {\n   92      // Rename task.\n   93:     this._tasks[newname] = this._tasks[oldname];\n   94      // Update name property of task.\n   95:     this._tasks[newname].name = newname;\n   96      // Remove old name.\n   97      delete this._tasks[oldname];\n   ..\n  169      var fails = things.filter(function(thing) { return !thing.task; });\n  170      if (fails.length > 0) {\n  171:       this._throwIfRunning(new Error('Task \"' + fails[0].nameArgs + '\" not found.'));\n  172        return this;\n  173      }\n  ...\n  195        if (success === false) {\n  196          // Since false was passed, the task failed generically.\n  197:         err = new Error('Task \"' + context.nameArgs + '\" failed.');\n  198        } else if (success instanceof Error || {}.toString.call(success) === '[object Error]') {\n  199          // An error object was passed, so the task failed specifically.\n  ...\n  308        var success = this._success[name];\n  309        if (!success) {\n  310:         throw new Error('Required task \"' + name +\n  311            '\" ' + (success === false ? 'failed' : 'must be run first') + '.');\n  312        }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\async\\package.json:\n   25      \"nodelint\": \">0.0.0\"\n   26    },\n   27:   \"readme\": \"# Async.js\\n\\nAsync is a utility module which provides straight-forward, powerful functions\\nfor working with asynchronous JavaScript. Although originally designed for\\nuse with [node.js](http://nodejs.org), it can also be used directly in the\\nbrowser.\\n\\nAsync provides around 20 functions that include the usual 'functional'\\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\\nfor asynchronous control flow (parallel, series, waterfall…). All these\\nfunctions assume you follow the node.js convention of providing a single\\ncallback as the last argument of your async function.\\n\\n\\n## Quick Examples\\n\\n    async.map(['file1','file2','file3'], fs.stat, function(err, results){\\n        // results is now an array of stats for each file\\n    });\\n\\n    async.filter(['file1','file2','file3'], path.exists, function(results){\\n        // results now equals an array of the existing files\\n    });\\n\\n    async.parallel([\\n        function(){ ... },\\n        function(){ ... }\\n    ], callback);\\n\\n    async.series([\\n        function(){ ... },\\n        function(){ ... }\\n    ]);\\n\\nThere are many more functions available so take a look at the docs below for a\\nfull list. This module aims to be comprehensive, so if you feel anything is\\nmissing please create a GitHub issue for it.\\n\\n\\n## Download\\n\\nReleases are available for download from\\n[GitHub](http://github.com/caolan/async/downloads).\\nAlternatively, you can install using Node Package Manager (npm):\\n\\n    npm install async\\n\\n\\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\\n\\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\\n\\n\\n## In the Browser\\n\\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\\n\\n    <script type=\\\"text/javascript\\\" src=\\\"async.js\\\"></script>\\n    <script type=\\\"text/javascript\\\">\\n\\n        async.map(data, asyncProcess, function(err, results){\\n            alert(results);\\n        });\\n\\n    </script>\\n\\n\\n## Documentation\\n\\n### Collections\\n\\n* [forEach](#forEach)\\n* [map](#map)\\n* [filter](#filter)\\n* [reject](#reject)\\n* [reduce](#reduce)\\n* [detect](#detect)\\n* [sortBy](#sortBy)\\n* [some](#some)\\n* [every](#every)\\n* [concat](#concat)\\n\\n### Control Flow\\n\\n* [series](#series)\\n* [parallel](#parallel)\\n* [whilst](#whilst)\\n* [until](#until)\\n* [waterfall](#waterfall)\\n* [queue](#queue)\\n* [auto](#auto)\\n* [iterator](#iterator)\\n* [apply](#apply)\\n* [nextTick](#nextTick)\\n\\n### Utils\\n\\n* [memoize](#memoize)\\n* [unmemoize](#unmemoize)\\n* [log](#log)\\n* [dir](#dir)\\n* [noConflict](#noConflict)\\n\\n\\n## Collections\\n\\n<a name=\\\"forEach\\\" />\\n### forEach(arr, iterator, callback)\\n\\nApplies an iterator function to each item in an array, in parallel.\\nThe iterator is called with an item from the list and a callback for when it\\nhas finished. If the iterator passes an error to this callback, the main\\ncallback for the forEach function is immediately called with the error.\\n\\nNote, that since this function applies the iterator to each item in parallel\\nthere is no guarantee that the iterator functions will complete in order.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed.\\n* callback(err) - A callback which is called after all the iterator functions\\n  have finished, or an error has occurred.\\n\\n__Example__\\n\\n    // assuming openFiles is an array of file names and saveFile is a function\\n    // to save the modified contents of that file:\\n\\n    async.forEach(openFiles, saveFile, function(err){\\n        // if any of the saves produced an error, err would equal that error\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"forEachSeries\\\" />\\n### forEachSeries(arr, iterator, callback)\\n\\nThe same as forEach only the iterator is applied to each item in the array in\\nseries. The next iterator is only called once the current one has completed\\nprocessing. This means the iterator functions will complete in order.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"forEachLimit\\\" />\\n### forEachLimit(arr, limit, iterator, callback)\\n\\nThe same as forEach only the iterator is applied to batches of items in the\\narray, in series. The next batch of iterators is only called once the current\\none has completed processing.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* limit - How many items should be in each batch.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed.\\n* callback(err) - A callback which is called after all the iterator functions\\n  have finished, or an error has occurred.\\n\\n__Example__\\n\\n    // Assume documents is an array of JSON objects and requestApi is a\\n    // function that interacts with a rate-limited REST api.\\n\\n    async.forEachLimit(documents, 20, requestApi, function(err){\\n        // if any of the saves produced an error, err would equal that error\\n    });\\n---------------------------------------\\n\\n<a name=\\\"map\\\" />\\n### map(arr, iterator, callback)\\n\\nProduces a new array of values by mapping each value in the given array through\\nthe iterator function. The iterator is called with an item from the array and a\\ncallback for when it has finished processing. The callback takes 2 arguments, \\nan error and the transformed item from the array. If the iterator passes an\\nerror to this callback, the main callback for the map function is immediately\\ncalled with the error.\\n\\nNote, that since this function applies the iterator to each item in parallel\\nthere is no guarantee that the iterator functions will complete in order, however\\nthe results array will be in the same order as the original array.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed\\n  with an error (which can be null) and a transformed item.\\n* callback(err, results) - A callback which is called after all the iterator\\n  functions have finished, or an error has occurred. Results is an array of the\\n  transformed items from the original array.\\n\\n__Example__\\n\\n    async.map(['file1','file2','file3'], fs.stat, function(err, results){\\n        // results is now an array of stats for each file\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"mapSeries\\\" />\\n### mapSeries(arr, iterator, callback)\\n\\nThe same as map only the iterator is applied to each item in the array in\\nseries. The next iterator is only called once the current one has completed\\nprocessing. The results array will be in the same order as the original.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"filter\\\" />\\n### filter(arr, iterator, callback)\\n\\n__Alias:__ select\\n\\nReturns a new array of all the values which pass an async truth test.\\n_The callback for each iterator call only accepts a single argument of true or\\nfalse, it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like path.exists. This operation is\\nperformed in parallel, but the results array will be in the same order as the\\noriginal.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed.\\n* callback(results) - A callback which is called after all the iterator\\n  functions have finished.\\n\\n__Example__\\n\\n    async.filter(['file1','file2','file3'], path.exists, function(results){\\n        // results now equals an array of the existing files\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"filterSeries\\\" />\\n### filterSeries(arr, iterator, callback)\\n\\n__alias:__ selectSeries\\n\\nThe same as filter only the iterator is applied to each item in the array in\\nseries. The next iterator is only called once the current one has completed\\nprocessing. The results array will be in the same order as the original.\\n\\n---------------------------------------\\n\\n<a name=\\\"reject\\\" />\\n### reject(arr, iterator, callback)\\n\\nThe opposite of filter. Removes values that pass an async truth test.\\n\\n---------------------------------------\\n\\n<a name=\\\"rejectSeries\\\" />\\n### rejectSeries(arr, iterator, callback)\\n\\nThe same as filter, only the iterator is applied to each item in the array\\nin series.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"reduce\\\" />\\n### reduce(arr, memo, iterator, callback)\\n\\n__aliases:__ inject, foldl\\n\\nReduces a list of values into a single value using an async iterator to return\\neach successive step. Memo is the initial state of the reduction. This\\nfunction only operates in series. For performance reasons, it may make sense to\\nsplit a call to this function into a parallel map, then use the normal\\nArray.prototype.reduce on the results. This function is for situations where\\neach step in the reduction needs to be async, if you can get the data before\\nreducing it then its probably a good idea to do so.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* memo - The initial state of the reduction.\\n* iterator(memo, item, callback) - A function applied to each item in the\\n  array to produce the next step in the reduction. The iterator is passed a\\n  callback which accepts an optional error as its first argument, and the state\\n  of the reduction as the second. If an error is passed to the callback, the\\n  reduction is stopped and the main callback is immediately called with the\\n  error.\\n* callback(err, result) - A callback which is called after all the iterator\\n  functions have finished. Result is the reduced value.\\n\\n__Example__\\n\\n    async.reduce([1,2,3], 0, function(memo, item, callback){\\n        // pointless async:\\n        process.nextTick(function(){\\n            callback(null, memo + item)\\n        });\\n    }, function(err, result){\\n        // result is now equal to the last value of memo, which is 6\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"reduceRight\\\" />\\n### reduceRight(arr, memo, iterator, callback)\\n\\n__Alias:__ foldr\\n\\nSame as reduce, only operates on the items in the array in reverse order.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"detect\\\" />\\n### detect(arr, iterator, callback)\\n\\nReturns the first value in a list that passes an async truth test. The\\niterator is applied in parallel, meaning the first iterator to return true will\\nfire the detect callback with that result. That means the result might not be\\nthe first item in the original array (in terms of order) that passes the test.\\n\\nIf order within the original array is important then look at detectSeries.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed.\\n* callback(result) - A callback which is called as soon as any iterator returns\\n  true, or after all the iterator functions have finished. Result will be\\n  the first item in the array that passes the truth test (iterator) or the\\n  value undefined if none passed.\\n\\n__Example__\\n\\n    async.detect(['file1','file2','file3'], path.exists, function(result){\\n        // result now equals the first file in the list that exists\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"detectSeries\\\" />\\n### detectSeries(arr, iterator, callback)\\n\\nThe same as detect, only the iterator is applied to each item in the array\\nin series. This means the result is always the first in the original array (in\\nterms of array order) that passes the truth test.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"sortBy\\\" />\\n### sortBy(arr, iterator, callback)\\n\\nSorts a list by the results of running each value through an async iterator.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed\\n  with an error (which can be null) and a value to use as the sort criteria.\\n* callback(err, results) - A callback which is called after all the iterator\\n  functions have finished, or an error has occurred. Results is the items from\\n  the original array sorted by the values returned by the iterator calls.\\n\\n__Example__\\n\\n    async.sortBy(['file1','file2','file3'], function(file, callback){\\n        fs.stat(file, function(err, stats){\\n            callback(err, stats.mtime);\\n        });\\n    }, function(err, results){\\n        // results is now the original array of files sorted by\\n        // modified date\\n    });\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"some\\\" />\\n### some(arr, iterator, callback)\\n\\n__Alias:__ any\\n\\nReturns true if at least one element in the array satisfies an async test.\\n_The callback for each iterator call only accepts a single argument of true or\\nfalse, it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like path.exists. Once any iterator\\ncall returns true, the main callback is immediately called.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed.\\n* callback(result) - A callback which is called as soon as any iterator returns\\n  true, or after all the iterator functions have finished. Result will be\\n  either true or false depending on the values of the async tests.\\n\\n__Example__\\n\\n    async.some(['file1','file2','file3'], path.exists, function(result){\\n        // if result is true then at least one of the files exists\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"every\\\" />\\n### every(arr, iterator, callback)\\n\\n__Alias:__ all\\n\\nReturns true if every element in the array satisfies an async test.\\n_The callback for each iterator call only accepts a single argument of true or\\nfalse, it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like path.exists.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed.\\n* callback(result) - A callback which is called after all the iterator\\n  functions have finished. Result will be either true or false depending on\\n  the values of the async tests.\\n\\n__Example__\\n\\n    async.every(['file1','file2','file3'], path.exists, function(result){\\n        // if result is true then every file exists\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"concat\\\" />\\n### concat(arr, iterator, callback)\\n\\nApplies an iterator to each item in a list, concatenating the results. Returns the\\nconcatenated list. The iterators are called in parallel, and the results are\\nconcatenated as they return. There is no guarantee that the results array will\\nbe returned in the original order of the arguments passed to the iterator function.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback which must be called once it has completed\\n  with an error (which can be null) and an array of results.\\n* callback(err, results) - A callback which is called after all the iterator\\n  functions have finished, or an error has occurred. Results is an array containing\\n  the concatenated results of the iterator function.\\n\\n__Example__\\n\\n    async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files){\\n        // files is now a list of filenames that exist in the 3 directories\\n    });\\n\\n---------------------------------------\\n\\n<a name=\\\"concatSeries\\\" />\\n### concatSeries(arr, iterator, callback)\\n\\nSame as async.concat, but executes in series instead of parallel.\\n\\n\\n## Control Flow\\n\\n<a name=\\\"series\\\" />\\n### series(tasks, [callback])\\n\\nRun an array of functions in series, each one running once the previous\\nfunction has completed. If any functions in the series pass an error to its\\ncallback, no more functions are run and the callback for the series is\\nimmediately called with the value of the error. Once the tasks have completed,\\nthe results are passed to the final callback as an array.\\n\\nIt is also possible to use an object instead of an array. Each property will be\\nrun as a function and the results will be passed to the final callback as an object\\ninstead of an array. This can be a more readable way of handling results from\\nasync.series.\\n\\n\\n__Arguments__\\n\\n* tasks - An array or object containing functions to run, each function is passed\\n  a callback it must call on completion.\\n* callback(err, results) - An optional callback to run once all the functions\\n  have completed. This function gets an array of all the arguments passed to\\n  the callbacks used in the array.\\n\\n__Example__\\n\\n    async.series([\\n        function(callback){\\n            // do some stuff ...\\n            callback(null, 'one');\\n        },\\n        function(callback){\\n            // do some more stuff ...\\n            callback(null, 'two');\\n        },\\n    ],\\n    // optional callback\\n    function(err, results){\\n        // results is now equal to ['one', 'two']\\n    });\\n\\n\\n    // an example using an object instead of an array\\n    async.series({\\n        one: function(callback){\\n            setTimeout(function(){\\n                callback(null, 1);\\n            }, 200);\\n        },\\n        two: function(callback){\\n            setTimeout(function(){\\n                callback(null, 2);\\n            }, 100);\\n        },\\n    },\\n    function(err, results) {\\n        // results is now equal to: {one: 1, two: 2}\\n    });\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"parallel\\\" />\\n### parallel(tasks, [callback])\\n\\nRun an array of functions in parallel, without waiting until the previous\\nfunction has completed. If any of the functions pass an error to its\\ncallback, the main callback is immediately called with the value of the error.\\nOnce the tasks have completed, the results are passed to the final callback as an\\narray.\\n\\nIt is also possible to use an object instead of an array. Each property will be\\nrun as a function and the results will be passed to the final callback as an object\\ninstead of an array. This can be a more readable way of handling results from\\nasync.parallel.\\n\\n\\n__Arguments__\\n\\n* tasks - An array or object containing functions to run, each function is passed a\\n  callback it must call on completion.\\n* callback(err, results) - An optional callback to run once all the functions\\n  have completed. This function gets an array of all the arguments passed to\\n  the callbacks used in the array.\\n\\n__Example__\\n\\n    async.parallel([\\n        function(callback){\\n            setTimeout(function(){\\n                callback(null, 'one');\\n            }, 200);\\n        },\\n        function(callback){\\n            setTimeout(function(){\\n                callback(null, 'two');\\n            }, 100);\\n        },\\n    ],\\n    // optional callback\\n    function(err, results){\\n        // the results array will equal ['one','two'] even though\\n        // the second function had a shorter timeout.\\n    });\\n\\n\\n    // an example using an object instead of an array\\n    async.parallel({\\n        one: function(callback){\\n            setTimeout(function(){\\n                callback(null, 1);\\n            }, 200);\\n        },\\n        two: function(callback){\\n            setTimeout(function(){\\n                callback(null, 2);\\n            }, 100);\\n        },\\n    },\\n    function(err, results) {\\n        // results is now equals to: {one: 1, two: 2}\\n    });\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"whilst\\\" />\\n### whilst(test, fn, callback)\\n\\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\\nor an error occurs.\\n\\n__Arguments__\\n\\n* test() - synchronous truth test to perform before each execution of fn.\\n* fn(callback) - A function to call each time the test passes. The function is\\n  passed a callback which must be called once it has completed with an optional\\n  error as the first argument.\\n* callback(err) - A callback which is called after the test fails and repeated\\n  execution of fn has stopped.\\n\\n__Example__\\n\\n    var count = 0;\\n\\n    async.whilst(\\n        function () { return count < 5; },\\n        function (callback) {\\n            count++;\\n            setTimeout(callback, 1000);\\n        },\\n        function (err) {\\n            // 5 seconds have passed\\n        }\\n    );\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"until\\\" />\\n### until(test, fn, callback)\\n\\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\\nor an error occurs.\\n\\nThe inverse of async.whilst.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"waterfall\\\" />\\n### waterfall(tasks, [callback])\\n\\nRuns an array of functions in series, each passing their results to the next in\\nthe array. However, if any of the functions pass an error to the callback, the\\nnext function is not executed and the main callback is immediately called with\\nthe error.\\n\\n__Arguments__\\n\\n* tasks - An array of functions to run, each function is passed a callback it\\n  must call on completion.\\n* callback(err, [results]) - An optional callback to run once all the functions\\n  have completed. This will be passed the results of the last task's callback.\\n\\n\\n\\n__Example__\\n\\n    async.waterfall([\\n        function(callback){\\n            callback(null, 'one', 'two');\\n        },\\n        function(arg1, arg2, callback){\\n            callback(null, 'three');\\n        },\\n        function(arg1, callback){\\n            // arg1 now equals 'three'\\n            callback(null, 'done');\\n        }\\n    ], function (err, result) {\\n       // result now equals 'done'    \\n    });\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"queue\\\" />\\n### queue(worker, concurrency)\\n\\nCreates a queue object with the specified concurrency. Tasks added to the\\nqueue will be processed in parallel (up to the concurrency limit). If all\\nworkers are in progress, the task is queued until one is available. Once\\na worker has completed a task, the task's callback is called.\\n\\n__Arguments__\\n\\n* worker(task, callback) - An asynchronous function for processing a queued\\n  task.\\n* concurrency - An integer for determining how many worker functions should be\\n  run in parallel.\\n\\n__Queue objects__\\n\\nThe queue object returned by this function has the following properties and\\nmethods:\\n\\n* length() - a function returning the number of items waiting to be processed.\\n* concurrency - an integer for determining how many worker functions should be\\n  run in parallel. This property can be changed after a queue is created to\\n  alter the concurrency on-the-fly.\\n* push(task, [callback]) - add a new task to the queue, the callback is called\\n  once the worker has finished processing the task.\\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\\n* empty - a callback that is called when the last item from the queue is given to a worker\\n* drain - a callback that is called when the last item from the queue has returned from the worker\\n\\n__Example__\\n\\n    // create a queue object with concurrency 2\\n\\n    var q = async.queue(function (task, callback) {\\n        console.log('hello ' + task.name);\\n        callback();\\n    }, 2);\\n\\n\\n    // assign a callback\\n    q.drain = function() {\\n        console.log('all items have been processed');\\n    }\\n\\n    // add some items to the queue\\n\\n    q.push({name: 'foo'}, function (err) {\\n        console.log('finished processing foo');\\n    });\\n    q.push({name: 'bar'}, function (err) {\\n        console.log('finished processing bar');\\n    });\\n\\n    // add some items to the queue (batch-wise)\\n\\n    q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function (err) {\\n        console.log('finished processing bar');\\n    });\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"auto\\\" />\\n### auto(tasks, [callback])\\n\\nDetermines the best order for running functions based on their requirements.\\nEach function can optionally depend on other functions being completed first,\\nand each function is run as soon as its requirements are satisfied. If any of\\nthe functions pass an error to their callback, that function will not complete\\n(so any other functions depending on it will not run) and the main callback\\nwill be called immediately with the error. Functions also receive an object\\ncontaining the results of functions which have completed so far.\\n\\n__Arguments__\\n\\n* tasks - An object literal containing named functions or an array of\\n  requirements, with the function itself the last item in the array. The key\\n  used for each function or array is used when specifying requirements. The\\n  syntax is easier to understand by looking at the example.\\n* callback(err, results) - An optional callback which is called when all the\\n  tasks have been completed. The callback will receive an error as an argument\\n  if any tasks pass an error to their callback. If all tasks complete\\n  successfully, it will receive an object containing their results.\\n\\n__Example__\\n\\n    async.auto({\\n        get_data: function(callback){\\n            // async code to get some data\\n        },\\n        make_folder: function(callback){\\n            // async code to create a directory to store a file in\\n            // this is run at the same time as getting the data\\n        },\\n        write_file: ['get_data', 'make_folder', function(callback){\\n            // once there is some data and the directory exists,\\n            // write the data to a file in the directory\\n            callback(null, filename);\\n        }],\\n        email_link: ['write_file', function(callback, results){\\n            // once the file is written let's email a link to it...\\n            // results.write_file contains the filename returned by write_file.\\n        }]\\n    });\\n\\nThis is a fairly trivial example, but to do this using the basic parallel and\\nseries functions would look like this:\\n\\n    async.parallel([\\n        function(callback){\\n            // async code to get some data\\n        },\\n        function(callback){\\n            // async code to create a directory to store a file in\\n            // this is run at the same time as getting the data\\n        }\\n    ],\\n    function(results){\\n        async.series([\\n            function(callback){\\n                // once there is some data and the directory exists,\\n                // write the data to a file in the directory\\n            },\\n            email_link: function(callback){\\n                // once the file is written let's email a link to it...\\n            }\\n        ]);\\n    });\\n\\nFor a complicated series of async tasks using the auto function makes adding\\nnew tasks much easier and makes the code more readable.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"iterator\\\" />\\n### iterator(tasks)\\n\\nCreates an iterator function which calls the next function in the array,\\nreturning a continuation to call the next one after that. Its also possible to\\n'peek' the next iterator by doing iterator.next().\\n\\nThis function is used internally by the async module but can be useful when\\nyou want to manually control the flow of functions in series.\\n\\n__Arguments__\\n\\n* tasks - An array of functions to run, each function is passed a callback it\\n  must call on completion.\\n\\n__Example__\\n\\n    var iterator = async.iterator([\\n        function(){ sys.p('one'); },\\n        function(){ sys.p('two'); },\\n        function(){ sys.p('three'); }\\n    ]);\\n\\n    node> var iterator2 = iterator();\\n    'one'\\n    node> var iterator3 = iterator2();\\n    'two'\\n    node> iterator3();\\n    'three'\\n    node> var nextfn = iterator2.next();\\n    node> nextfn();\\n    'three'\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"apply\\\" />\\n### apply(function, arguments..)\\n\\nCreates a continuation function with some arguments already applied, a useful\\nshorthand when combined with other control flow functions. Any arguments\\npassed to the returned function are added to the arguments originally passed\\nto apply.\\n\\n__Arguments__\\n\\n* function - The function you want to eventually apply all arguments to.\\n* arguments... - Any number of arguments to automatically apply when the\\n  continuation is called.\\n\\n__Example__\\n\\n    // using apply\\n\\n    async.parallel([\\n        async.apply(fs.writeFile, 'testfile1', 'test1'),\\n        async.apply(fs.writeFile, 'testfile2', 'test2'),\\n    ]);\\n\\n\\n    // the same process without using apply\\n\\n    async.parallel([\\n        function(callback){\\n            fs.writeFile('testfile1', 'test1', callback);\\n        },\\n        function(callback){\\n            fs.writeFile('testfile2', 'test2', callback);\\n        },\\n    ]);\\n\\nIt's possible to pass any number of additional arguments when calling the\\ncontinuation:\\n\\n    node> var fn = async.apply(sys.puts, 'one');\\n    node> fn('two', 'three');\\n    one\\n    two\\n    three\\n\\n---------------------------------------\\n\\n<a name=\\\"nextTick\\\" />\\n### nextTick(callback)\\n\\nCalls the callback on a later loop around the event loop. In node.js this just\\ncalls process.nextTick, in the browser it falls back to setTimeout(callback, 0),\\nwhich means other higher priority events may precede the execution of the callback.\\n\\nThis is used internally for browser-compatibility purposes.\\n\\n__Arguments__\\n\\n* callback - The function to call on a later loop around the event loop.\\n\\n__Example__\\n\\n    var call_order = [];\\n    async.nextTick(function(){\\n        call_order.push('two');\\n        // call_order now equals ['one','two]\\n    });\\n    call_order.push('one')\\n\\n\\n## Utils\\n\\n<a name=\\\"memoize\\\" />\\n### memoize(fn, [hasher])\\n\\nCaches the results of an async function. When creating a hash to store function\\nresults against, the callback is omitted from the hash and an optional hash\\nfunction can be used.\\n\\n__Arguments__\\n\\n* fn - the function you to proxy and cache results from.\\n* hasher - an optional function for generating a custom hash for storing\\n  results, it has all the arguments applied to it apart from the callback, and\\n  must be synchronous.\\n\\n__Example__\\n\\n    var slow_fn = function (name, callback) {\\n        // do something\\n        callback(null, result);\\n    };\\n    var fn = async.memoize(slow_fn);\\n\\n    // fn can now be used as if it were slow_fn\\n    fn('some name', function () {\\n        // callback\\n    });\\n\\n<a name=\\\"unmemoize\\\" />\\n### unmemoize(fn)\\n\\nUndoes a memoized function, reverting it to the original, unmemoized\\nform. Comes handy in tests.\\n\\n__Arguments__\\n\\n* fn - the memoized function\\n\\n<a name=\\\"log\\\" />\\n### log(function, arguments)\\n\\nLogs the result of an async function to the console. Only works in node.js or\\nin browsers that support console.log and console.error (such as FF and Chrome).\\nIf multiple arguments are returned from the async function, console.log is\\ncalled on each argument in order.\\n\\n__Arguments__\\n\\n* function - The function you want to eventually apply all arguments to.\\n* arguments... - Any number of arguments to apply to the function.\\n\\n__Example__\\n\\n    var hello = function(name, callback){\\n        setTimeout(function(){\\n            callback(null, 'hello ' + name);\\n        }, 1000);\\n    };\\n\\n    node> async.log(hello, 'world');\\n    'hello world'\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"dir\\\" />\\n### dir(function, arguments)\\n\\nLogs the result of an async function to the console using console.dir to\\ndisplay the properties of the resulting object. Only works in node.js or\\nin browsers that support console.dir and console.error (such as FF and Chrome).\\nIf multiple arguments are returned from the async function, console.dir is\\ncalled on each argument in order.\\n\\n__Arguments__\\n\\n* function - The function you want to eventually apply all arguments to.\\n* arguments... - Any number of arguments to apply to the function.\\n\\n__Example__\\n\\n    var hello = function(name, callback){\\n        setTimeout(function(){\\n            callback(null, {hello: name});\\n        }, 1000);\\n    };\\n\\n    node> async.dir(hello, 'world');\\n    {hello: 'world'}\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"noConflict\\\" />\\n### noConflict()\\n\\nChanges the value of async back to its original value, returning a reference to the\\nasync object.\\n\",\n   28    \"readmeFilename\": \"README.md\",\n   29    \"_id\": \"async@0.1.22\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\async\\README.md:\n  174  ### map(arr, iterator, callback)\n  175  \n  176: Produces a new array of values by mapping each value in the given array through\n  177  the iterator function. The iterator is called with an item from the array and a\n  178  callback for when it has finished processing. The callback takes 2 arguments, \n  ...\n  218  __Alias:__ select\n  219  \n  220: Returns a new array of all the values which pass an async truth test.\n  221  _The callback for each iterator call only accepts a single argument of true or\n  222  false, it does not accept an error argument first!_ This is in-line with the\n  ...\n  703    run in parallel. This property can be changed after a queue is created to\n  704    alter the concurrency on-the-fly.\n  705: * push(task, [callback]) - add a new task to the queue, the callback is called\n  706    once the worker has finished processing the task.\n  707    instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n  ...\n  811  \n  812  For a complicated series of async tasks using the auto function makes adding\n  813: new tasks much easier and makes the code more readable.\n  814  \n  815  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\Rakefile:\n   14      mtime = File.stat(source).mtime\n   15      if !@mtime || mtime > @mtime\n   16:       rendered = ERB.new(File.read(source)).result(binding)\n   17        File.open('index.html', 'w+') {|f| f.write(rendered) }\n   18      end\n   ..\n   27    require 'rubygems/package'\n   28  \n   29:   gemspec = Gem::Specification.new do |s|\n   30      s.name      = 'coffee-script-source'\n   31      s.version   = JSON.parse(File.read('package.json'))[\"version\"]\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\extras\\jsl.conf:\n   24  +nested_comment               # nested comment\n   25  +misplaced_regex              # regular expressions should be preceded by a left parenthesis, assignment, colon, or comma\n   26: +ambiguous_newline            # unexpected end of line; it is ambiguous whether these lines are part of the same statement\n   27  +empty_statement              # empty statement or extra semicolon\n   28  -missing_option_explicit      # the \"option explicit\" control comment is missing\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\browser.js:\n   32    CoffeeScript.load = function(url, callback) {\n   33      var xhr;\n   34:     xhr = new (window.ActiveXObject || XMLHttpRequest)('Microsoft.XMLHTTP');\n   35      xhr.open('GET', url, true);\n   36      if ('overrideMimeType' in xhr) {\n   ..\n   43            CoffeeScript.run(xhr.responseText);\n   44          } else {\n   45:           throw new Error(\"Could not load \" + url);\n   46          }\n   47          if (callback) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\cake.js:\n   52        filename: 'Cakefile'\n   53      });\n   54:     oparse = new optparse.OptionParser(switches);\n   55      if (!args.length) {\n   56        return printTasks();\n   ..\n  106        return cakefileDirectory(parent);\n  107      }\n  108:     throw new Error(\"Cakefile not found in \" + (process.cwd()));\n  109    };\n  110  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\coffee-script.js:\n  113        if (!(sandbox !== global || sandbox.module || sandbox.require)) {\n  114          Module = require('module');\n  115:         sandbox.module = _module = new Module(options.modulename || 'eval');\n  116          sandbox.require = _require = function(path) {\n  117            return Module._load(path, _module, true);\n  ...\n  146    };\n  147  \n  148:   lexer = new Lexer;\n  149  \n  150    parser.lexer = {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\command.js:\n   17    EventEmitter = require('events').EventEmitter;\n   18  \n   19:   helpers.extend(CoffeeScript, new EventEmitter);\n   20  \n   21    printLine = function(line) {\n   ..\n  425  \n  426    timeLog = function(message) {\n  427:     return console.log(\"\" + ((new Date).toLocaleTimeString()) + \" - \" + message);\n  428    };\n  429  \n  ...\n  458    parseOptions = function() {\n  459      var i, o, source, _i, _len;\n  460:     optionParser = new optparse.OptionParser(SWITCHES, BANNER);\n  461      o = opts = optionParser.parse(process.argv.slice(2));\n  462      o.compile || (o.compile = !!o.output);\n  ...\n  491  \n  492    usage = function() {\n  493:     return printLine((new optparse.OptionParser(SWITCHES, BANNER)).help());\n  494    };\n  495  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\grammar.js:\n   14      }\n   15      action = (match = unwrap.exec(action)) ? match[1] : \"(\" + action + \"())\";\n   16:     action = action.replace(/\\bnew /g, '$&yy.');\n   17      action = action.replace(/\\b(?:Block\\.wrap|extend)\\b/g, 'yy.$&');\n   18      return [patternString, \"$$ = \" + action + \";\", options];\n   ..\n   22      Root: [\n   23        o('', function() {\n   24:         return new Block;\n   25        }), o('Body'), o('Block TERMINATOR')\n   26      ],\n   ..\n   35      Statement: [\n   36        o('Return'), o('Comment'), o('STATEMENT', function() {\n   37:         return new Literal($1);\n   38        })\n   39      ],\n   ..\n   41      Block: [\n   42        o('INDENT OUTDENT', function() {\n   43:         return new Block;\n   44        }), o('INDENT Body OUTDENT', function() {\n   45          return $2;\n   ..\n   48      Identifier: [\n   49        o('IDENTIFIER', function() {\n   50:         return new Literal($1);\n   51        })\n   52      ],\n   53      AlphaNumeric: [\n   54        o('NUMBER', function() {\n   55:         return new Literal($1);\n   56        }), o('STRING', function() {\n   57:         return new Literal($1);\n   58        })\n   59      ],\n   60      Literal: [\n   61        o('AlphaNumeric'), o('JS', function() {\n   62:         return new Literal($1);\n   63        }), o('REGEX', function() {\n   64:         return new Literal($1);\n   65        }), o('DEBUGGER', function() {\n   66:         return new Literal($1);\n   67        }), o('UNDEFINED', function() {\n   68:         return new Undefined;\n   69        }), o('NULL', function() {\n   70:         return new Null;\n   71        }), o('BOOL', function() {\n   72:         return new Bool($1);\n   73        })\n   74      ],\n   75      Assign: [\n   76        o('Assignable = Expression', function() {\n   77:         return new Assign($1, $3);\n   78        }), o('Assignable = TERMINATOR Expression', function() {\n   79:         return new Assign($1, $4);\n   80        }), o('Assignable = INDENT Expression OUTDENT', function() {\n   81:         return new Assign($1, $4);\n   82        })\n   83      ],\n   84      AssignObj: [\n   85        o('ObjAssignable', function() {\n   86:         return new Value($1);\n   87        }), o('ObjAssignable : Expression', function() {\n   88:         return new Assign(new Value($1), $3, 'object');\n   89        }), o('ObjAssignable :\\\n   90         INDENT Expression OUTDENT', function() {\n   91:         return new Assign(new Value($1), $4, 'object');\n   92        }), o('Comment')\n   93      ],\n   ..\n   95      Return: [\n   96        o('RETURN Expression', function() {\n   97:         return new Return($2);\n   98        }), o('RETURN', function() {\n   99:         return new Return;\n  100        })\n  101      ],\n  102      Comment: [\n  103        o('HERECOMMENT', function() {\n  104:         return new Comment($1);\n  105        })\n  106      ],\n  107      Code: [\n  108        o('PARAM_START ParamList PARAM_END FuncGlyph Block', function() {\n  109:         return new Code($2, $5, $4);\n  110        }), o('FuncGlyph Block', function() {\n  111:         return new Code([], $2, $1);\n  112        })\n  113      ],\n  ...\n  135      Param: [\n  136        o('ParamVar', function() {\n  137:         return new Param($1);\n  138        }), o('ParamVar ...', function() {\n  139:         return new Param($1, null, true);\n  140        }), o('ParamVar = Expression', function() {\n  141:         return new Param($1, $3);\n  142        })\n  143      ],\n  ...\n  145      Splat: [\n  146        o('Expression ...', function() {\n  147:         return new Splat($1);\n  148        })\n  149      ],\n  150      SimpleAssignable: [\n  151        o('Identifier', function() {\n  152:         return new Value($1);\n  153        }), o('Value Accessor', function() {\n  154          return $1.add($2);\n  155        }), o('Invocation Accessor', function() {\n  156:         return new Value($1, [].concat($2));\n  157        }), o('ThisProperty')\n  158      ],\n  159      Assignable: [\n  160        o('SimpleAssignable'), o('Array', function() {\n  161:         return new Value($1);\n  162        }), o('Object', function() {\n  163:         return new Value($1);\n  164        })\n  165      ],\n  166      Value: [\n  167        o('Assignable'), o('Literal', function() {\n  168:         return new Value($1);\n  169        }), o('Parenthetical', function() {\n  170:         return new Value($1);\n  171        }), o('Range', function() {\n  172:         return new Value($1);\n  173        }), o('This')\n  174      ],\n  175      Accessor: [\n  176        o('.  Identifier', function() {\n  177:         return new Access($2);\n  178        }), o('?. Identifier', function() {\n  179:         return new Access($2, 'soak');\n  180        }), o(':: Identifier', function() {\n  181:         return [new Access(new Literal('prototype')), new Access($2)];\n  182        }), o('::', function() {\n  183:         return new Access(new Literal('prototype'));\n  184        }), o('Index')\n  185      ],\n  ...\n  195      IndexValue: [\n  196        o('Expression', function() {\n  197:         return new Index($1);\n  198        }), o('Slice', function() {\n  199:         return new Slice($1);\n  200        })\n  201      ],\n  202      Object: [\n  203        o('{ AssignList OptComma }', function() {\n  204:         return new Obj($2, $1.generated);\n  205        })\n  206      ],\n  ...\n  220      Class: [\n  221        o('CLASS', function() {\n  222:         return new Class;\n  223        }), o('CLASS Block', function() {\n  224:         return new Class(null, null, $2);\n  225        }), o('CLASS EXTENDS Expression', function() {\n  226:         return new Class(null, $3);\n  227        }), o('CLASS EXTENDS Expression Block', function() {\n  228:         return new Class(null, $3, $4);\n  229        }), o('CLASS SimpleAssignable', function() {\n  230:         return new Class($2);\n  231        }), o('CLASS SimpleAssignable Block', function() {\n  232:         return new Class($2, null, $3);\n  233        }), o('CLASS SimpleAssignable EXTENDS Expression', function() {\n  234:         return new Class($2, $4);\n  235        }), o('CLASS SimpleAssignable EXTENDS Expression Block', function() {\n  236:         return new Class($2, $4, $5);\n  237        })\n  238      ],\n  239      Invocation: [\n  240        o('Value OptFuncExist Arguments', function() {\n  241:         return new Call($1, $3, $2);\n  242        }), o('Invocation OptFuncExist Arguments', function() {\n  243:         return new Call($1, $3, $2);\n  244        }), o('SUPER', function() {\n  245:         return new Call('super', [new Splat(new Literal('arguments'))]);\n  246        }), o('SUPER Arguments', function() {\n  247:         return new Call('super', $2);\n  248        })\n  249      ],\n  ...\n  264      This: [\n  265        o('THIS', function() {\n  266:         return new Value(new Literal('this'));\n  267        }), o('@', function() {\n  268:         return new Value(new Literal('this'));\n  269        })\n  270      ],\n  271      ThisProperty: [\n  272        o('@ Identifier', function() {\n  273:         return new Value(new Literal('this'), [new Access($2)], 'this');\n  274        })\n  275      ],\n  276      Array: [\n  277        o('[ ]', function() {\n  278:         return new Arr([]);\n  279        }), o('[ ArgList OptComma ]', function() {\n  280:         return new Arr($2);\n  281        })\n  282      ],\n  ...\n  290      Range: [\n  291        o('[ Expression RangeDots Expression ]', function() {\n  292:         return new Range($2, $4, $3);\n  293        })\n  294      ],\n  295      Slice: [\n  296        o('Expression RangeDots Expression', function() {\n  297:         return new Range($1, $3, $2);\n  298        }), o('Expression RangeDots', function() {\n  299:         return new Range($1, null, $2);\n  300        }), o('RangeDots Expression', function() {\n  301:         return new Range(null, $2, $1);\n  302        }), o('RangeDots', function() {\n  303:         return new Range(null, null, $1);\n  304        })\n  305      ],\n  ...\n  325      Try: [\n  326        o('TRY Block', function() {\n  327:         return new Try($2);\n  328        }), o('TRY Block Catch', function() {\n  329:         return new Try($2, $3[0], $3[1]);\n  330        }), o('TRY Block FINALLY Block', function() {\n  331:         return new Try($2, null, null, $4);\n  332        }), o('TRY Block Catch FINALLY Block', function() {\n  333:         return new Try($2, $3[0], $3[1], $5);\n  334        })\n  335      ],\n  ...\n  341      Throw: [\n  342        o('THROW Expression', function() {\n  343:         return new Throw($2);\n  344        })\n  345      ],\n  346      Parenthetical: [\n  347        o('( Body )', function() {\n  348:         return new Parens($2);\n  349        }), o('( INDENT Body OUTDENT )', function() {\n  350:         return new Parens($3);\n  351        })\n  352      ],\n  353      WhileSource: [\n  354        o('WHILE Expression', function() {\n  355:         return new While($2);\n  356        }), o('WHILE Expression WHEN Expression', function() {\n  357:         return new While($2, {\n  358            guard: $4\n  359          });\n  360        }), o('UNTIL Expression', function() {\n  361:         return new While($2, {\n  362            invert: true\n  363          });\n  364        }), o('UNTIL Expression WHEN Expression', function() {\n  365:         return new While($2, {\n  366            invert: true,\n  367            guard: $4\n  ...\n  382      Loop: [\n  383        o('LOOP Block', function() {\n  384:         return new While(new Literal('true')).addBody($2);\n  385        }), o('LOOP Expression', function() {\n  386:         return new While(new Literal('true')).addBody(Block.wrap([$2]));\n  387        })\n  388      ],\n  389      For: [\n  390        o('Statement  ForBody', function() {\n  391:         return new For($1, $2);\n  392        }), o('Expression ForBody', function() {\n  393:         return new For($1, $2);\n  394        }), o('ForBody    Block', function() {\n  395:         return new For($2, $1);\n  396        })\n  397      ],\n  ...\n  399        o('FOR Range', function() {\n  400          return {\n  401:           source: new Value($2)\n  402          };\n  403        }), o('ForStart ForSource', function() {\n  ...\n  418      ForValue: [\n  419        o('Identifier'), o('ThisProperty'), o('Array', function() {\n  420:         return new Value($1);\n  421        }), o('Object', function() {\n  422:         return new Value($1);\n  423        })\n  424      ],\n  ...\n  472      Switch: [\n  473        o('SWITCH Expression INDENT Whens OUTDENT', function() {\n  474:         return new Switch($2, $4);\n  475        }), o('SWITCH Expression INDENT Whens ELSE Block OUTDENT', function() {\n  476:         return new Switch($2, $4, $6);\n  477        }), o('SWITCH INDENT Whens OUTDENT', function() {\n  478:         return new Switch(null, $3);\n  479        }), o('SWITCH INDENT Whens ELSE Block OUTDENT', function() {\n  480:         return new Switch(null, $3, $5);\n  481        })\n  482      ],\n  ...\n  495      IfBlock: [\n  496        o('IF Expression Block', function() {\n  497:         return new If($2, $3, {\n  498            type: $1\n  499          });\n  500        }), o('IfBlock ELSE IF Expression Block', function() {\n  501:         return $1.addElse(new If($4, $5, {\n  502            type: $3\n  503          }));\n  ...\n  508          return $1.addElse($3);\n  509        }), o('Statement  POST_IF Expression', function() {\n  510:         return new If($3, Block.wrap([$1]), {\n  511            type: $2,\n  512            statement: true\n  513          });\n  514        }), o('Expression POST_IF Expression', function() {\n  515:         return new If($3, Block.wrap([$1]), {\n  516            type: $2,\n  517            statement: true\n  ...\n  521      Operation: [\n  522        o('UNARY Expression', function() {\n  523:         return new Op($1, $2);\n  524        }), o('-     Expression', (function() {\n  525:         return new Op('-', $2);\n  526        }), {\n  527          prec: 'UNARY'\n  528        }), o('+     Expression', (function() {\n  529:         return new Op('+', $2);\n  530        }), {\n  531          prec: 'UNARY'\n  532        }), o('-- SimpleAssignable', function() {\n  533:         return new Op('--', $2);\n  534        }), o('++ SimpleAssignable', function() {\n  535:         return new Op('++', $2);\n  536        }), o('SimpleAssignable --', function() {\n  537:         return new Op('--', $1, null, true);\n  538        }), o('SimpleAssignable ++', function() {\n  539:         return new Op('++', $1, null, true);\n  540        }), o('Expression ?', function() {\n  541:         return new Existence($1);\n  542        }), o('Expression +  Expression', function() {\n  543:         return new Op('+', $1, $3);\n  544        }), o('Expression -  Expression', function() {\n  545:         return new Op('-', $1, $3);\n  546        }), o('Expression MATH     Expression', function() {\n  547:         return new Op($2, $1, $3);\n  548        }), o('Expression SHIFT    Expression', function() {\n  549:         return new Op($2, $1, $3);\n  550        }), o('Expression COMPARE  Expression', function() {\n  551:         return new Op($2, $1, $3);\n  552        }), o('Expression LOGIC    Expression', function() {\n  553:         return new Op($2, $1, $3);\n  554        }), o('Expression RELATION Expression', function() {\n  555          if ($2.charAt(0) === '!') {\n  556:           return new Op($2.slice(1), $1, $3).invert();\n  557          } else {\n  558:           return new Op($2, $1, $3);\n  559          }\n  560        }), o('SimpleAssignable COMPOUND_ASSIGN\\\n  561         Expression', function() {\n  562:         return new Assign($1, $3, $2);\n  563        }), o('SimpleAssignable COMPOUND_ASSIGN\\\n  564         INDENT Expression OUTDENT', function() {\n  565:         return new Assign($1, $4, $2);\n  566        }), o('SimpleAssignable EXTENDS Expression', function() {\n  567:         return new Extends($1, $3);\n  568        })\n  569      ]\n  ...\n  597    }\n  598  \n  599:   exports.parser = new Parser({\n  600      tokens: tokens.join(' '),\n  601      bnf: grammar,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\lexer.js:\n   40          return this.tokens;\n   41        }\n   42:       return (new Rewriter).rewrite(this.tokens);\n   43      };\n   44  \n   ..\n   81          if (forcedIdentifier) {\n   82            tag = 'IDENTIFIER';\n   83:           id = new String(id);\n   84            id.reserved = true;\n   85          } else if (__indexOf.call(RESERVED, id) >= 0) {\n   ..\n  292  \n  293      Lexer.prototype.lineToken = function() {\n  294:       var diff, indent, match, noNewlines, prev, size;\n  295        if (!(match = MULTI_DENT.exec(this.chunk))) {\n  296          return 0;\n  ...\n  301        prev = last(this.tokens, 1);\n  302        size = indent.length - 1 - indent.lastIndexOf('\\n');\n  303:       noNewlines = this.unfinished();\n  304        if (size - this.indebt === this.indent) {\n  305:         if (noNewlines) {\n  306:           this.suppressNewlines();\n  307          } else {\n  308:           this.newlineToken();\n  309          }\n  310          return indent.length;\n  311        }\n  312        if (size > this.indent) {\n  313:         if (noNewlines) {\n  314            this.indebt = size - this.indent;\n  315:           this.suppressNewlines();\n  316            return indent.length;\n  317          }\n  ...\n  323        } else {\n  324          this.indebt = 0;\n  325:         this.outdentToken(this.indent - size, noNewlines);\n  326        }\n  327        this.indent = size;\n  ...\n  329      };\n  330  \n  331:     Lexer.prototype.outdentToken = function(moveOut, noNewlines) {\n  332        var dent, len;\n  333        while (moveOut > 0) {\n  ...\n  355          this.tokens.pop();\n  356        }\n  357:       if (!(this.tag() === 'TERMINATOR' || noNewlines)) {\n  358          this.token('TERMINATOR', '\\n');\n  359        }\n  ...\n  368        prev = last(this.tokens);\n  369        if (prev) {\n  370:         prev[match ? 'spaced' : 'newLine'] = true;\n  371        }\n  372        if (match) {\n  ...\n  377      };\n  378  \n  379:     Lexer.prototype.newlineToken = function() {\n  380        while (this.value() === ';') {\n  381          this.tokens.pop();\n  ...\n  387      };\n  388  \n  389:     Lexer.prototype.suppressNewlines = function() {\n  390        if (this.value() === '\\\\') {\n  391          this.tokens.pop();\n  ...\n  577          inner = expr.slice(1, -1);\n  578          if (inner.length) {\n  579:           nested = new Lexer().tokenize(inner, {\n  580              line: this.line,\n  581              rewrite: false\n  ...\n  687    })();\n  688  \n  689:   JS_KEYWORDS = ['true', 'false', 'null', 'this', 'new', 'delete', 'typeof', 'in', 'instanceof', 'return', 'throw', 'break', 'continue', 'debugger', 'if', 'else', 'switch', 'for', 'while', 'do', 'try', 'catch', 'finally', 'class', 'extends', 'super'];\n  690  \n  691    COFFEE_KEYWORDS = ['undefined', 'then', 'unless', 'until', 'loop', 'of', 'by', 'when'];\n  ...\n  762    COMPOUND_ASSIGN = ['-=', '+=', '/=', '*=', '%=', '||=', '&&=', '?=', '<<=', '>>=', '>>>=', '&=', '^=', '|='];\n  763  \n  764:   UNARY = ['!', '~', 'NEW', 'TYPEOF', 'DELETE', 'DO'];\n  765  \n  766    LOGIC = ['&&', '||', '&', '|', '^'];\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\nodes.js:\n    3    var Access, Arr, Assign, Base, Block, Call, Class, Closure, Code, Comment, Existence, Extends, For, IDENTIFIER, IDENTIFIER_STR, IS_STRING, If, In, Index, LEVEL_ACCESS, LEVEL_COND, LEVEL_LIST, LEVEL_OP, LEVEL_PAREN, LEVEL_TOP, Literal, METHOD_DEF, NEGATE, NO, Obj, Op, Param, Parens, RESERVED, Range, Return, SIMPLENUM, STRICT_PROSCRIBED, Scope, Slice, Splat, Switch, TAB, THIS, Throw, Try, UTILITIES, Value, While, YES, compact, del, ends, extend, flatten, last, merge, multident, starts, unfoldSoak, utility, _ref, _ref1,\n    4      __hasProp = {}.hasOwnProperty,\n    5:     __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    6      __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n    7  \n    .\n   64          return [ref, ref];\n   65        } else {\n   66:         ref = new Literal(reused || o.scope.freeVariable('ref'));\n   67:         sub = new Assign(ref, this);\n   68          if (level) {\n   69            return [sub.compile(o, level), ref.value];\n   ..\n   87        me = this.unwrapAll();\n   88        if (res) {\n   89:         return new Call(new Literal(\"\" + res + \".push\"), [me]);\n   90        } else {\n   91:         return new Return(me);\n   92        }\n   93      };\n   ..\n  171  \n  172      Base.prototype.invert = function() {\n  173:       return new Op('!', this);\n  174      };\n  175  \n  ...\n  335        var code, exp, i, prelude, preludeExps, rest;\n  336        o.indent = o.bare ? '' : TAB;\n  337:       o.scope = new Scope(null, this, null);\n  338        o.level = LEVEL_TOP;\n  339        this.spaced = true;\n  ...\n  418          return nodes[0];\n  419        }\n  420:       return new Block(nodes);\n  421      };\n  422  \n  ...\n  679          return [this, this];\n  680        }\n  681:       base = new Value(this.base, this.properties.slice(0, -1));\n  682        if (base.isComplex()) {\n  683:         bref = new Literal(o.scope.freeVariable('base'));\n  684:         base = new Value(new Parens(new Assign(bref, base)));\n  685        }\n  686        if (!name) {\n  ...\n  688        }\n  689        if (name.isComplex()) {\n  690:         nref = new Literal(o.scope.freeVariable('name'));\n  691:         name = new Index(new Assign(nref, name.index));\n  692:         nref = new Index(nref);\n  693        }\n  694:       return [base.add(name), new Value(bref || base.base, [nref || name])];\n  695      };\n  696  \n  ...\n  729            }\n  730            prop.soak = false;\n  731:           fst = new Value(_this.base, _this.properties.slice(0, i));\n  732:           snd = new Value(_this.base, _this.properties.slice(i));\n  733            if (fst.isComplex()) {\n  734:             ref = new Literal(o.scope.freeVariable('ref'));\n  735:             fst = new Parens(new Assign(ref, fst));\n  736              snd.base = ref;\n  737            }\n  738:           return new If(new Existence(fst), snd, {\n  739              soak: true\n  740            });\n  ...\n  781        this.args = args != null ? args : [];\n  782        this.soak = soak;\n  783:       this.isNew = false;\n  784        this.isSuper = variable === 'super';\n  785        this.variable = this.isSuper ? null : variable;\n  ...\n  788      Call.prototype.children = ['variable', 'args'];\n  789  \n  790:     Call.prototype.newInstance = function() {\n  791        var base, _ref2;\n  792        base = ((_ref2 = this.variable) != null ? _ref2.base : void 0) || this.variable;\n  793:       if (base instanceof Call && !base.isNew) {\n  794:         base.newInstance();\n  795        } else {\n  796:         this.isNew = true;\n  797        }\n  798        return this;\n  ...\n  810        }\n  811        if (method.klass) {\n  812:         accesses = [new Access(new Literal('__super__'))];\n  813          if (method[\"static\"]) {\n  814:           accesses.push(new Access(new Literal('constructor')));\n  815          }\n  816:         accesses.push(new Access(new Literal(name)));\n  817:         return (new Value(new Literal(method.klass), accesses)).compile(o);\n  818        } else {\n  819          return \"\" + name + \".__super__.constructor\";\n  ...\n  834              return ifn;\n  835            }\n  836:           _ref2 = new Value(this.variable).cacheReference(o), left = _ref2[0], rite = _ref2[1];\n  837          } else {\n  838:           left = new Literal(this.superReference(o));\n  839:           rite = new Value(left);\n  840          }\n  841:         rite = new Call(rite, this.args);\n  842:         rite.isNew = this.isNew;\n  843:         left = new Literal(\"typeof \" + (left.compile(o)) + \" === \\\"function\\\"\");\n  844:         return new If(left, new Value(rite), {\n  845            soak: true\n  846          });\n  ...\n  892            if (prop instanceof Assign || prop instanceof Comment) {\n  893              if (!obj) {\n  894:               nodes.push(obj = new Obj(properties = [], true));\n  895              }\n  896              properties.push(prop);\n  ...\n  925          return this.superReference(o) + (\".call(\" + (this.superThis(o)) + (args && ', ' + args) + \")\");\n  926        } else {\n  927:         return (this.isNew ? 'new ' : '') + this.variable.compile(o, LEVEL_ACCESS) + (\"(\" + args + \")\");\n  928        }\n  929      };\n  ...\n  938          return \"\" + (this.superReference(o)) + \".apply(\" + (this.superThis(o)) + \", \" + splatArgs + \")\";\n  939        }\n  940:       if (this.isNew) {\n  941          idt = this.tab + TAB;\n  942:         return \"(function(func, args, ctor) {\\n\" + idt + \"ctor.prototype = func.prototype;\\n\" + idt + \"var child = new ctor, result = func.apply(child, args), t = typeof result;\\n\" + idt + \"return t == \\\"object\\\" || t == \\\"function\\\" ? result || child : child;\\n\" + this.tab + \"})(\" + (this.variable.compile(o, LEVEL_LIST)) + \", \" + splatArgs + \", function(){})\";\n  943        }\n  944:       base = new Value(this.variable);\n  945        if ((name = base.properties.pop()) && base.isComplex()) {\n  946          ref = o.scope.freeVariable('ref');\n  ...\n  977  \n  978      Extends.prototype.compile = function(o) {\n  979:       return new Call(new Value(new Literal(utility('extends'))), [this.child, this.parent]).compile(o);\n  980      };\n  981  \n  ...\n 1197            node = props[_j];\n 1198            if (node instanceof Value) {\n 1199:             throw new Error('cannot have an implicit value in an implicit object');\n 1200            }\n 1201          }\n ....\n 1211            indent = prop instanceof Comment ? '' : idt;\n 1212            if (prop instanceof Value && prop[\"this\"]) {\n 1213:             prop = new Assign(prop.properties[0].name, prop, 'object');\n 1214            }\n 1215            if (!(prop instanceof Comment)) {\n 1216              if (!(prop instanceof Assign)) {\n 1217:               prop = new Assign(prop, prop, 'object');\n 1218              }\n 1219              (prop.variable.base || prop.variable).asKey = true;\n ....\n 1309        this.variable = variable;\n 1310        this.parent = parent;\n 1311:       this.body = body != null ? body : new Block;\n 1312        this.boundFuncs = [];\n 1313        this.body.classBody = true;\n ....\n 1351          for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n 1352            bvar = _ref2[_i];\n 1353:           lhs = (new Value(new Literal(\"this\"), [new Access(bvar)])).compile(o);\n 1354:           _results.push(this.ctor.body.unshift(new Literal(\"\" + lhs + \" = \" + (utility('bind')) + \"(\" + lhs + \", this)\")));\n 1355          }\n 1356          return _results;\n ....\n 1371              if (base.value === 'constructor') {\n 1372                if (this.ctor) {\n 1373:                 throw new Error('cannot define more than one constructor in a class');\n 1374                }\n 1375                if (func.bound) {\n 1376:                 throw new Error('cannot define a constructor as a bound function');\n 1377                }\n 1378                if (func instanceof Code) {\n ....\n 1380                } else {\n 1381                  this.externalCtor = o.scope.freeVariable('class');\n 1382:                 assign = new Assign(new Literal(this.externalCtor), func);\n 1383                }\n 1384              } else {\n ....\n 1389                  }\n 1390                } else {\n 1391:                 assign.variable = new Value(new Literal(name), [new Access(new Literal('prototype')), new Access(base)]);\n 1392                  if (func instanceof Code && func.bound) {\n 1393                    this.boundFuncs.push(base);\n ....\n 1436      Class.prototype.ensureConstructor = function(name) {\n 1437        if (!this.ctor) {\n 1438:         this.ctor = new Code;\n 1439          if (this.parent) {\n 1440:           this.ctor.body.push(new Literal(\"\" + name + \".__super__.constructor.apply(this, arguments)\"));\n 1441          }\n 1442          if (this.externalCtor) {\n 1443:           this.ctor.body.push(new Literal(\"\" + this.externalCtor + \".apply(this, arguments)\"));\n 1444          }\n 1445          this.ctor.body.makeReturn();\n ....\n 1458          name = \"_\" + name;\n 1459        }\n 1460:       lname = new Literal(name);\n 1461        this.hoistDirectivePrologue();\n 1462        this.setContext(name);\n ....\n 1472        call = Closure.wrap(this.body);\n 1473        if (this.parent) {\n 1474:         this.superClass = new Literal(o.scope.freeVariable('super', false));\n 1475:         this.body.expressions.unshift(new Extends(lname, this.superClass));\n 1476          call.args.push(this.parent);\n 1477          params = call.variable.params || call.variable.base.params;\n 1478:         params.push(new Param(this.superClass));\n 1479        }\n 1480:       klass = new Parens(call, true);\n 1481        if (this.variable) {\n 1482:         klass = new Assign(this.variable, klass);\n 1483        }\n 1484        return klass.compile(o);\n ....\n 1583          } else {\n 1584            if (obj.base instanceof Parens) {\n 1585:             _ref4 = new Value(obj.unwrapAll()).cacheReference(o), obj = _ref4[0], idx = _ref4[1];\n 1586            } else {\n 1587:             idx = isObject ? obj[\"this\"] ? obj.properties[0].name : obj : new Literal(0);\n 1588            }\n 1589          }\n 1590          acc = IDENTIFIER.test(idx.unwrap().value || 0);\n 1591:         value = new Value(value);\n 1592:         value.properties.push(new (acc ? Access : Index)(idx));\n 1593          if (_ref5 = obj.unwrap().value, __indexOf.call(RESERVED, _ref5) >= 0) {\n 1594:           throw new SyntaxError(\"assignment to a reserved word: \" + (obj.compile(o)) + \" = \" + (value.compile(o)));\n 1595          }\n 1596:         return new Assign(obj, value, null, {\n 1597            param: this.param\n 1598          }).compile(o, LEVEL_TOP);\n ....\n 1613            } else {\n 1614              if (obj.base instanceof Parens) {\n 1615:               _ref8 = new Value(obj.unwrapAll()).cacheReference(o), obj = _ref8[0], idx = _ref8[1];\n 1616              } else {\n 1617                idx = obj[\"this\"] ? obj.properties[0].name : obj;\n ....\n 1629              val += \") : []\";\n 1630            }\n 1631:           val = new Literal(val);\n 1632            splat = \"\" + ivar + \"++\";\n 1633          } else {\n ....\n 1635            if (obj instanceof Splat) {\n 1636              obj = obj.name.compile(o);\n 1637:             throw new SyntaxError(\"multiple splats are disallowed in an assignment: \" + obj + \"...\");\n 1638            }\n 1639            if (typeof idx === 'number') {\n 1640:             idx = new Literal(splat || idx);\n 1641              acc = false;\n 1642            } else {\n 1643              acc = isObject && IDENTIFIER.test(idx.unwrap().value || 0);\n 1644            }\n 1645:           val = new Value(new Literal(vvar), [new (acc ? Access : Index)(idx)]);\n 1646          }\n 1647          if ((name != null) && __indexOf.call(RESERVED, name) >= 0) {\n 1648:           throw new SyntaxError(\"assignment to a reserved word: \" + (obj.compile(o)) + \" = \" + (val.compile(o)));\n 1649          }\n 1650:         assigns.push(new Assign(obj, val, null, {\n 1651            param: this.param,\n 1652            subpattern: true\n ....\n 1668        _ref2 = this.variable.cacheReference(o), left = _ref2[0], right = _ref2[1];\n 1669        if (!left.properties.length && left.base instanceof Literal && left.base.value !== \"this\" && !o.scope.check(left.base.value)) {\n 1670:         throw new Error(\"the variable \\\"\" + left.base.value + \"\\\" can't be assigned with \" + this.context + \" because it has not been defined.\");\n 1671        }\n 1672        if (__indexOf.call(this.context, \"?\") >= 0) {\n 1673          o.isExistentialEquals = true;\n 1674        }\n 1675:       return new Op(this.context.slice(0, -1), left, new Assign(right, this.value, '=')).compile(o);\n 1676      };\n 1677  \n ....\n 1715      function Code(params, body, tag) {\n 1716        this.params = params || [];\n 1717:       this.body = body || new Block;\n 1718        this.bound = tag === 'boundfunc';\n 1719        if (this.bound) {\n ....\n 1732      Code.prototype.compileNode = function(o) {\n 1733        var code, exprs, i, idt, lit, name, p, param, params, ref, splats, uniqs, val, wasEmpty, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _len5, _m, _n, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8;\n 1734:       o.scope = new Scope(o.scope, this.body, this);\n 1735        o.scope.shared = del(o, 'sharedScope');\n 1736        o.indent += TAB;\n ....\n 1762            }\n 1763          }\n 1764:         splats = new Assign(new Value(new Arr((function() {\n 1765            var _l, _len3, _ref5, _results;\n 1766            _ref5 = this.params;\n ....\n 1771            }\n 1772            return _results;\n 1773:         }).call(this))), new Value(new Literal('arguments')));\n 1774          break;\n 1775        }\n ....\n 1780            val = ref = param.asReference(o);\n 1781            if (param.value) {\n 1782:             val = new Op('?', ref, param.value);\n 1783            }\n 1784:           exprs.push(new Assign(new Value(param.name), val, '=', {\n 1785              param: true\n 1786            }));\n ....\n 1788            ref = param;\n 1789            if (param.value) {\n 1790:             lit = new Literal(ref.name.value + ' == null');\n 1791:             val = new Assign(new Value(param.name), param.value, '=');\n 1792:             exprs.push(new If(lit, val));\n 1793            }\n 1794          }\n ....\n 1897          node = node.properties[0].name;\n 1898          if (node.value.reserved) {\n 1899:           node = new Literal(o.scope.freeVariable(node.value));\n 1900          }\n 1901        } else if (node.isComplex()) {\n 1902:         node = new Literal(o.scope.freeVariable('arg'));\n 1903        }\n 1904:       node = new Value(node);\n 1905        if (this.splat) {\n 1906:         node = new Splat(node);\n 1907        }\n 1908        return this.reference = node;\n ....\n 1969  \n 1970      function Splat(name) {\n 1971:       this.name = name.compile ? name : new Literal(name);\n 1972      }\n 1973  \n ....\n 2090          if (this.guard) {\n 2091            if (body.expressions.length > 1) {\n 2092:             body.expressions.unshift(new If((new Parens(this.guard)).invert(), new Literal(\"continue\")));\n 2093            } else {\n 2094              if (this.guard) {\n 2095:               body = Block.wrap([new If(this.guard, body)]);\n 2096              }\n 2097            }\n ....\n 2117      function Op(op, first, second, flip) {\n 2118        if (op === 'in') {\n 2119:         return new In(first, second);\n 2120        }\n 2121        if (op === 'do') {\n 2122          return this.generateDo(first);\n 2123        }\n 2124:       if (op === 'new') {\n 2125:         if (first instanceof Call && !first[\"do\"] && !first.isNew) {\n 2126:           return first.newInstance();\n 2127          }\n 2128          if (first instanceof Code && first.bound || first[\"do\"]) {\n 2129:           first = new Parens(first);\n 2130          }\n 2131        }\n ....\n 2176          }\n 2177          if (!allInvertable) {\n 2178:           return new Parens(this).invert();\n 2179          }\n 2180          curr = this;\n ....\n 2192          return this;\n 2193        } else if (this.second) {\n 2194:         return new Parens(this).invert();\n 2195        } else if (this.operator === '!' && (fst = this.first.unwrap()) instanceof Op && ((_ref2 = fst.operator) === '!' || _ref2 === 'in' || _ref2 === 'instanceof')) {\n 2196          return fst;\n 2197        } else {\n 2198:         return new Op('!', this);\n 2199        }\n 2200      };\n ....\n 2219          }\n 2220        }\n 2221:       call = new Call(exp, passedParams);\n 2222        call[\"do\"] = true;\n 2223        return call;\n ....\n 2264        var fst, ref;\n 2265        if (this.first.isComplex()) {\n 2266:         ref = new Literal(o.scope.freeVariable('ref'));\n 2267:         fst = new Parens(new Assign(ref, this.first));\n 2268        } else {\n 2269          fst = this.first;\n 2270          ref = fst;\n 2271        }\n 2272:       return new If(new Existence(fst), ref, {\n 2273          type: 'if'\n 2274        }).addElse(this.second).compile(o);\n ....\n 2278        var op, parts, plusMinus;\n 2279        if (o.level >= LEVEL_ACCESS) {\n 2280:         return (new Parens(this)).compile(o);\n 2281        }\n 2282        parts = [op = this.operator];\n 2283        plusMinus = op === '+' || op === '-';\n 2284:       if ((op === 'new' || op === 'typeof' || op === 'delete') || plusMinus && this.first instanceof Op && this.first.operator === op) {\n 2285          parts.push(' ');\n 2286        }\n 2287:       if ((plusMinus && this.first instanceof Op) || (op === 'new' && this.first.isStatement(o))) {\n 2288:         this.first = new Parens(this.first);\n 2289        }\n 2290        parts.push(this.first.compile(o, LEVEL_OP));\n ....\n 2629        if (this.guard) {\n 2630          if (body.expressions.length > 1) {\n 2631:           body.expressions.unshift(new If((new Parens(this.guard)).invert(), new Literal(\"continue\")));\n 2632          } else {\n 2633            if (this.guard) {\n 2634:             body = Block.wrap([new If(this.guard, body)]);\n 2635            }\n 2636          }\n 2637        }\n 2638        if (this.pattern) {\n 2639:         body.expressions.unshift(new Assign(this.name, new Literal(\"\" + svar + \"[\" + kvar + \"]\")));\n 2640        }\n 2641        defPart += this.pluckDirectCall(o, body);\n ....\n 2673          }\n 2674          fn = ((_ref6 = val.base) != null ? _ref6.unwrapAll() : void 0) || val;\n 2675:         ref = new Literal(o.scope.freeVariable('fn'));\n 2676:         base = new Value(ref);\n 2677          if (val.base) {\n 2678            _ref7 = [base, val], val.base = _ref7[0], base = _ref7[1];\n 2679          }\n 2680:         body.expressions[idx] = new Call(base, expr.args);\n 2681:         defs += this.tab + new Assign(ref, fn).compile(o, LEVEL_TOP) + ';\\n';\n 2682        }\n 2683        return defs;\n ....\n 2727        }\n 2728        if (res) {\n 2729:         this.otherwise || (this.otherwise = new Block([new Literal('void 0')]));\n 2730        }\n 2731        if ((_ref3 = this.otherwise) != null) {\n ....\n 2830      If.prototype.makeReturn = function(res) {\n 2831        if (res) {\n 2832:         this.elseBody || (this.elseBody = new Block([new Literal('void 0')]));\n 2833        }\n 2834:       this.body && (this.body = new Block([this.body.makeReturn(res)]));\n 2835:       this.elseBody && (this.elseBody = new Block([this.elseBody.makeReturn(res)]));\n 2836        return this;\n 2837      };\n ....\n 2841          return node;\n 2842        } else {\n 2843:         return new Block([node]);\n 2844        }\n 2845      };\n ....\n 2850        exeq = del(o, 'isExistentialEquals');\n 2851        if (exeq) {\n 2852:         return new If(this.condition.invert(), this.elseBodyNode(), {\n 2853            type: 'if'\n 2854          }).compile(o);\n ....\n 2894          return expressions;\n 2895        }\n 2896:       func = new Code([], Block.wrap([expressions]));\n 2897        args = [];\n 2898        if ((mentionsArgs = expressions.contains(this.literalArgs)) || expressions.contains(this.literalThis)) {\n 2899:         meth = new Literal(mentionsArgs ? 'apply' : 'call');\n 2900:         args = [new Literal('this')];\n 2901          if (mentionsArgs) {\n 2902:           args.push(new Literal('arguments'));\n 2903          }\n 2904:         func = new Value(func, [new Access(meth)]);\n 2905        }\n 2906        func.noReturn = noReturn;\n 2907:       call = new Call(func, args);\n 2908        if (statement) {\n 2909          return Block.wrap([call]);\n ....\n 2926      }\n 2927      parent[name] = ifn.body;\n 2928:     ifn.body = new Value(parent);\n 2929      return ifn;\n 2930    };\n ....\n 2932    UTILITIES = {\n 2933      \"extends\": function() {\n 2934:       return \"function(child, parent) { for (var key in parent) { if (\" + (utility('hasProp')) + \".call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }\";\n 2935      },\n 2936      bind: function() {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\optparse.js:\n   48            }\n   49            if (isOption && !matchedRule) {\n   50:             throw new Error(\"unrecognized option: \" + arg);\n   51            }\n   52          }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\parser.js:\n   10  var $0 = $$.length - 1;\n   11  switch (yystate) {\n   12: case 1:return this.$ = new yy.Block;\n   13  break;\n   14  case 2:return this.$ = $$[$0];\n   ..\n   30  case 10:this.$ = $$[$0];\n   31  break;\n   32: case 11:this.$ = new yy.Literal($$[$0]);\n   33  break;\n   34  case 12:this.$ = $$[$0];\n   ..\n   56  case 23:this.$ = $$[$0];\n   57  break;\n   58: case 24:this.$ = new yy.Block;\n   59  break;\n   60  case 25:this.$ = $$[$0-1];\n   61  break;\n   62: case 26:this.$ = new yy.Literal($$[$0]);\n   63  break;\n   64: case 27:this.$ = new yy.Literal($$[$0]);\n   65  break;\n   66: case 28:this.$ = new yy.Literal($$[$0]);\n   67  break;\n   68  case 29:this.$ = $$[$0];\n   69  break;\n   70: case 30:this.$ = new yy.Literal($$[$0]);\n   71  break;\n   72: case 31:this.$ = new yy.Literal($$[$0]);\n   73  break;\n   74: case 32:this.$ = new yy.Literal($$[$0]);\n   75  break;\n   76: case 33:this.$ = new yy.Undefined;\n   77  break;\n   78: case 34:this.$ = new yy.Null;\n   79  break;\n   80: case 35:this.$ = new yy.Bool($$[$0]);\n   81  break;\n   82: case 36:this.$ = new yy.Assign($$[$0-2], $$[$0]);\n   83  break;\n   84: case 37:this.$ = new yy.Assign($$[$0-3], $$[$0]);\n   85  break;\n   86: case 38:this.$ = new yy.Assign($$[$0-4], $$[$0-1]);\n   87  break;\n   88: case 39:this.$ = new yy.Value($$[$0]);\n   89  break;\n   90: case 40:this.$ = new yy.Assign(new yy.Value($$[$0-2]), $$[$0], 'object');\n   91  break;\n   92: case 41:this.$ = new yy.Assign(new yy.Value($$[$0-4]), $$[$0-1], 'object');\n   93  break;\n   94  case 42:this.$ = $$[$0];\n   ..\n  100  case 45:this.$ = $$[$0];\n  101  break;\n  102: case 46:this.$ = new yy.Return($$[$0]);\n  103  break;\n  104: case 47:this.$ = new yy.Return;\n  105  break;\n  106: case 48:this.$ = new yy.Comment($$[$0]);\n  107  break;\n  108: case 49:this.$ = new yy.Code($$[$0-3], $$[$0], $$[$0-1]);\n  109  break;\n  110: case 50:this.$ = new yy.Code([], $$[$0], $$[$0-1]);\n  111  break;\n  112  case 51:this.$ = 'func';\n  ...\n  128  case 59:this.$ = $$[$0-5].concat($$[$0-2]);\n  129  break;\n  130: case 60:this.$ = new yy.Param($$[$0]);\n  131  break;\n  132: case 61:this.$ = new yy.Param($$[$0-1], null, true);\n  133  break;\n  134: case 62:this.$ = new yy.Param($$[$0-2], $$[$0]);\n  135  break;\n  136  case 63:this.$ = $$[$0];\n  ...\n  142  case 66:this.$ = $$[$0];\n  143  break;\n  144: case 67:this.$ = new yy.Splat($$[$0-1]);\n  145  break;\n  146: case 68:this.$ = new yy.Value($$[$0]);\n  147  break;\n  148  case 69:this.$ = $$[$0-1].add($$[$0]);\n  149  break;\n  150: case 70:this.$ = new yy.Value($$[$0-1], [].concat($$[$0]));\n  151  break;\n  152  case 71:this.$ = $$[$0];\n  ...\n  154  case 72:this.$ = $$[$0];\n  155  break;\n  156: case 73:this.$ = new yy.Value($$[$0]);\n  157  break;\n  158: case 74:this.$ = new yy.Value($$[$0]);\n  159  break;\n  160  case 75:this.$ = $$[$0];\n  161  break;\n  162: case 76:this.$ = new yy.Value($$[$0]);\n  163  break;\n  164: case 77:this.$ = new yy.Value($$[$0]);\n  165  break;\n  166: case 78:this.$ = new yy.Value($$[$0]);\n  167  break;\n  168  case 79:this.$ = $$[$0];\n  169  break;\n  170: case 80:this.$ = new yy.Access($$[$0]);\n  171  break;\n  172: case 81:this.$ = new yy.Access($$[$0], 'soak');\n  173  break;\n  174: case 82:this.$ = [new yy.Access(new yy.Literal('prototype')), new yy.Access($$[$0])];\n  175  break;\n  176: case 83:this.$ = new yy.Access(new yy.Literal('prototype'));\n  177  break;\n  178  case 84:this.$ = $$[$0];\n  ...\n  184          });\n  185  break;\n  186: case 87:this.$ = new yy.Index($$[$0]);\n  187  break;\n  188: case 88:this.$ = new yy.Slice($$[$0]);\n  189  break;\n  190: case 89:this.$ = new yy.Obj($$[$0-2], $$[$0-3].generated);\n  191  break;\n  192  case 90:this.$ = [];\n  ...\n  200  case 94:this.$ = $$[$0-5].concat($$[$0-2]);\n  201  break;\n  202: case 95:this.$ = new yy.Class;\n  203  break;\n  204: case 96:this.$ = new yy.Class(null, null, $$[$0]);\n  205  break;\n  206: case 97:this.$ = new yy.Class(null, $$[$0]);\n  207  break;\n  208: case 98:this.$ = new yy.Class(null, $$[$0-1], $$[$0]);\n  209  break;\n  210: case 99:this.$ = new yy.Class($$[$0]);\n  211  break;\n  212: case 100:this.$ = new yy.Class($$[$0-1], null, $$[$0]);\n  213  break;\n  214: case 101:this.$ = new yy.Class($$[$0-2], $$[$0]);\n  215  break;\n  216: case 102:this.$ = new yy.Class($$[$0-3], $$[$0-1], $$[$0]);\n  217  break;\n  218: case 103:this.$ = new yy.Call($$[$0-2], $$[$0], $$[$0-1]);\n  219  break;\n  220: case 104:this.$ = new yy.Call($$[$0-2], $$[$0], $$[$0-1]);\n  221  break;\n  222: case 105:this.$ = new yy.Call('super', [new yy.Splat(new yy.Literal('arguments'))]);\n  223  break;\n  224: case 106:this.$ = new yy.Call('super', $$[$0]);\n  225  break;\n  226  case 107:this.$ = false;\n  ...\n  232  case 110:this.$ = $$[$0-2];\n  233  break;\n  234: case 111:this.$ = new yy.Value(new yy.Literal('this'));\n  235  break;\n  236: case 112:this.$ = new yy.Value(new yy.Literal('this'));\n  237  break;\n  238: case 113:this.$ = new yy.Value(new yy.Literal('this'), [new yy.Access($$[$0])], 'this');\n  239  break;\n  240: case 114:this.$ = new yy.Arr([]);\n  241  break;\n  242: case 115:this.$ = new yy.Arr($$[$0-2]);\n  243  break;\n  244  case 116:this.$ = 'inclusive';\n  ...\n  246  case 117:this.$ = 'exclusive';\n  247  break;\n  248: case 118:this.$ = new yy.Range($$[$0-3], $$[$0-1], $$[$0-2]);\n  249  break;\n  250: case 119:this.$ = new yy.Range($$[$0-2], $$[$0], $$[$0-1]);\n  251  break;\n  252: case 120:this.$ = new yy.Range($$[$0-1], null, $$[$0]);\n  253  break;\n  254: case 121:this.$ = new yy.Range(null, $$[$0], $$[$0-1]);\n  255  break;\n  256: case 122:this.$ = new yy.Range(null, null, $$[$0]);\n  257  break;\n  258  case 123:this.$ = [$$[$0]];\n  ...\n  274  case 131:this.$ = [].concat($$[$0-2], $$[$0]);\n  275  break;\n  276: case 132:this.$ = new yy.Try($$[$0]);\n  277  break;\n  278: case 133:this.$ = new yy.Try($$[$0-1], $$[$0][0], $$[$0][1]);\n  279  break;\n  280: case 134:this.$ = new yy.Try($$[$0-2], null, null, $$[$0]);\n  281  break;\n  282: case 135:this.$ = new yy.Try($$[$0-3], $$[$0-2][0], $$[$0-2][1], $$[$0]);\n  283  break;\n  284  case 136:this.$ = [$$[$0-1], $$[$0]];\n  285  break;\n  286: case 137:this.$ = new yy.Throw($$[$0]);\n  287  break;\n  288: case 138:this.$ = new yy.Parens($$[$0-1]);\n  289  break;\n  290: case 139:this.$ = new yy.Parens($$[$0-2]);\n  291  break;\n  292: case 140:this.$ = new yy.While($$[$0]);\n  293  break;\n  294: case 141:this.$ = new yy.While($$[$0-2], {\n  295            guard: $$[$0]\n  296          });\n  297  break;\n  298: case 142:this.$ = new yy.While($$[$0], {\n  299            invert: true\n  300          });\n  301  break;\n  302: case 143:this.$ = new yy.While($$[$0-2], {\n  303            invert: true,\n  304            guard: $$[$0]\n  ...\n  313  case 147:this.$ = $$[$0];\n  314  break;\n  315: case 148:this.$ = new yy.While(new yy.Literal('true')).addBody($$[$0]);\n  316  break;\n  317: case 149:this.$ = new yy.While(new yy.Literal('true')).addBody(yy.Block.wrap([$$[$0]]));\n  318  break;\n  319: case 150:this.$ = new yy.For($$[$0-1], $$[$0]);\n  320  break;\n  321: case 151:this.$ = new yy.For($$[$0-1], $$[$0]);\n  322  break;\n  323: case 152:this.$ = new yy.For($$[$0], $$[$0-1]);\n  324  break;\n  325  case 153:this.$ = {\n  326:           source: new yy.Value($$[$0])\n  327          };\n  328  break;\n  ...\n  345  case 158:this.$ = $$[$0];\n  346  break;\n  347: case 159:this.$ = new yy.Value($$[$0]);\n  348  break;\n  349: case 160:this.$ = new yy.Value($$[$0]);\n  350  break;\n  351  case 161:this.$ = [$$[$0]];\n  ...\n  390          };\n  391  break;\n  392: case 170:this.$ = new yy.Switch($$[$0-3], $$[$0-1]);\n  393  break;\n  394: case 171:this.$ = new yy.Switch($$[$0-5], $$[$0-3], $$[$0-1]);\n  395  break;\n  396: case 172:this.$ = new yy.Switch(null, $$[$0-1]);\n  397  break;\n  398: case 173:this.$ = new yy.Switch(null, $$[$0-3], $$[$0-1]);\n  399  break;\n  400  case 174:this.$ = $$[$0];\n  ...\n  406  case 177:this.$ = [[$$[$0-2], $$[$0-1]]];\n  407  break;\n  408: case 178:this.$ = new yy.If($$[$0-1], $$[$0], {\n  409            type: $$[$0-2]\n  410          });\n  411  break;\n  412: case 179:this.$ = $$[$0-4].addElse(new yy.If($$[$0-1], $$[$0], {\n  413            type: $$[$0-2]\n  414          }));\n  ...\n  418  case 181:this.$ = $$[$0-2].addElse($$[$0]);\n  419  break;\n  420: case 182:this.$ = new yy.If($$[$0], yy.Block.wrap([$$[$0-2]]), {\n  421            type: $$[$0-1],\n  422            statement: true\n  423          });\n  424  break;\n  425: case 183:this.$ = new yy.If($$[$0], yy.Block.wrap([$$[$0-2]]), {\n  426            type: $$[$0-1],\n  427            statement: true\n  428          });\n  429  break;\n  430: case 184:this.$ = new yy.Op($$[$0-1], $$[$0]);\n  431  break;\n  432: case 185:this.$ = new yy.Op('-', $$[$0]);\n  433  break;\n  434: case 186:this.$ = new yy.Op('+', $$[$0]);\n  435  break;\n  436: case 187:this.$ = new yy.Op('--', $$[$0]);\n  437  break;\n  438: case 188:this.$ = new yy.Op('++', $$[$0]);\n  439  break;\n  440: case 189:this.$ = new yy.Op('--', $$[$0-1], null, true);\n  441  break;\n  442: case 190:this.$ = new yy.Op('++', $$[$0-1], null, true);\n  443  break;\n  444: case 191:this.$ = new yy.Existence($$[$0-1]);\n  445  break;\n  446: case 192:this.$ = new yy.Op('+', $$[$0-2], $$[$0]);\n  447  break;\n  448: case 193:this.$ = new yy.Op('-', $$[$0-2], $$[$0]);\n  449  break;\n  450: case 194:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);\n  451  break;\n  452: case 195:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);\n  453  break;\n  454: case 196:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);\n  455  break;\n  456: case 197:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);\n  457  break;\n  458  case 198:this.$ = (function () {\n  459          if ($$[$0-1].charAt(0) === '!') {\n  460:           return new yy.Op($$[$0-1].slice(1), $$[$0-2], $$[$0]).invert();\n  461          } else {\n  462:           return new yy.Op($$[$0-1], $$[$0-2], $$[$0]);\n  463          }\n  464        }());\n  465  break;\n  466: case 199:this.$ = new yy.Assign($$[$0-2], $$[$0], $$[$0-1]);\n  467  break;\n  468: case 200:this.$ = new yy.Assign($$[$0-4], $$[$0-1], $$[$0-3]);\n  469  break;\n  470: case 201:this.$ = new yy.Extends($$[$0-2], $$[$0]);\n  471  break;\n  472  }\n  ...\n  475  defaultActions: {60:[2,51],61:[2,52],75:[2,3],94:[2,108],189:[2,88]},\n  476  parseError: function parseError(str, hash) {\n  477:     throw new Error(str);\n  478  },\n  479  parse: function parse(input) {\n  ...\n  519      }\n  520  \n  521:     var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;\n  522      while (true) {\n  523          // retreive state number from top of stack\n  ...\n  559              if (recovering == 3) {\n  560                  if (symbol == EOF) {\n  561:                     throw new Error(errStr || 'Parsing halted.');\n  562                  }\n  563  \n  ...\n  577                  }\n  578                  if (state == 0) {\n  579:                     throw new Error(errStr || 'Parsing halted.');\n  580                  }\n  581                  popStack(1);\n  ...\n  584  \n  585              preErrorSymbol = symbol; // save the lookahead token\n  586:             symbol = TERROR;         // insert generic error symbol as new lookahead\n  587              state = stack[stack.length-1];\n  588              action = table[state] && table[state][TERROR];\n  589:             recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n  590          }\n  591  \n  592          // this shouldn't happen, unless resolve defaults are off\n  593          if (action[0] instanceof Array && action.length > 1) {\n  594:             throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n  595          }\n  596  \n  ...\n  648                  vstack.push(yyval.$);\n  649                  lstack.push(yyval._$);\n  650:                 // goto new state = table[STATE][NONTERMINAL]\n  651:                 newState = table[stack[stack.length-2]][stack[stack.length-1]];\n  652:                 stack.push(newState);\n  653                  break;\n  654  \n  ...\n  669  exports.main = function commonjsMain(args) {\n  670      if (!args[1])\n  671:         throw new Error('Usage: '+args[0]+' FILE');\n  672      if (typeof process !== 'undefined') {\n  673          var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), \"utf8\");\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\repl.js:\n  202  \n  203    repl.input.on('keypress', function(char, key) {\n  204:     var cursorPos, newPrompt;\n  205      if (!(key && key.ctrl && !key.meta && !key.shift && key.name === 'v')) {\n  206        return;\n  ...\n  214      }\n  215      backlog = '';\n  216:     repl.setPrompt((newPrompt = multilineMode ? REPL_PROMPT_MULTILINE : REPL_PROMPT));\n  217      repl.prompt();\n  218:     return repl.output.cursorTo(newPrompt.length + (repl.cursor = cursorPos));\n  219    });\n  220  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\coffee-script\\lib\\coffee-script\\rewriter.js:\n   11      Rewriter.prototype.rewrite = function(tokens) {\n   12        this.tokens = tokens;\n   13:       this.removeLeadingNewlines();\n   14:       this.removeMidExpressionNewlines();\n   15        this.closeOpenCalls();\n   16        this.closeOpenIndexes();\n   ..\n   53      };\n   54  \n   55:     Rewriter.prototype.removeLeadingNewlines = function() {\n   56        var i, tag, _i, _len, _ref;\n   57        _ref = this.tokens;\n   ..\n   67      };\n   68  \n   69:     Rewriter.prototype.removeMidExpressionNewlines = function() {\n   70        return this.scanTokens(function(token, i, tokens) {\n   71          var _ref;\n   ..\n  159          prevTag = this.tag(idx - 1);\n  160          startsLine = !prevTag || (__indexOf.call(LINEBREAKS, prevTag) >= 0);\n  161:         value = new String('{');\n  162          value.generated = true;\n  163          tok = this.generate('{', value, token[2]);\n  ...\n  210            return 1;\n  211          }\n  212:         if (!(callObject || (prev != null ? prev.spaced : void 0) && (prev.call || (_ref2 = prev[0], __indexOf.call(IMPLICIT_FUNC, _ref2) >= 0)) && (__indexOf.call(IMPLICIT_CALL, tag) >= 0 || !(token.spaced || token.newLine) && __indexOf.call(IMPLICIT_UNSPACED_CALL, tag) >= 0))) {\n  213            return 1;\n  214          }\n  ...\n  333    IMPLICIT_FUNC = ['IDENTIFIER', 'SUPER', ')', 'CALL_END', ']', 'INDEX_END', '@', 'THIS'];\n  334  \n  335:   IMPLICIT_CALL = ['IDENTIFIER', 'NUMBER', 'STRING', 'JS', 'REGEX', 'NEW', 'PARAM_START', 'CLASS', 'IF', 'TRY', 'SWITCH', 'THIS', 'BOOL', 'NULL', 'UNDEFINED', 'UNARY', 'SUPER', '@', '->', '=>', '[', '(', '{', '--', '++'];\n  336  \n  337    IMPLICIT_UNSPACED_CALL = ['+', '-'];\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\dateformat\\package.json:\n   14      \"node\": \"*\"\n   15    },\n   16:   \"readme\": \"# node-dateformat\\n\\nA node.js package for Steven Levithan's excellent [dateFormat()][dateformat] function.\\n\\n## Modifications\\n\\n* Removed the `Date.prototype.format` method. Sorry folks, but extending native prototypes is for suckers.\\n* Added a `module.exports = dateFormat;` statement at the bottom\\n\\n## Usage\\n\\nAs taken from Steven's post, modified to match the Modifications listed above:\\n\\n    var dateFormat = require('dateformat');\\n    var now = new Date();\\n\\n    // Basic usage\\n    dateFormat(now, \\\"dddd, mmmm dS, yyyy, h:MM:ss TT\\\");\\n    // Saturday, June 9th, 2007, 5:46:21 PM\\n\\n    // You can use one of several named masks\\n    dateFormat(now, \\\"isoDateTime\\\");\\n    // 2007-06-09T17:46:21\\n\\n    // ...Or add your own\\n    dateFormat.masks.hammerTime = 'HH:MM! \\\"Can\\\\'t touch this!\\\"';\\n    dateFormat(now, \\\"hammerTime\\\");\\n    // 17:46! Can't touch this!\\n\\n    // When using the standalone dateFormat function,\\n    // you can also provide the date as a string\\n    dateFormat(\\\"Jun 9 2007\\\", \\\"fullDate\\\");\\n    // Saturday, June 9, 2007\\n\\n    // Note that if you don't include the mask argument,\\n    // dateFormat.masks.default is used\\n    dateFormat(now);\\n    // Sat Jun 09 2007 17:46:21\\n\\n    // And if you don't include the date argument,\\n    // the current date and time is used\\n    dateFormat();\\n    // Sat Jun 09 2007 17:46:22\\n\\n    // You can also skip the date argument (as long as your mask doesn't\\n    // contain any numbers), in which case the current date/time is used\\n    dateFormat(\\\"longTime\\\");\\n    // 5:46:22 PM EST\\n\\n    // And finally, you can convert local time to UTC time. Simply pass in\\n    // true as an additional argument (no argument skipping allowed in this case):\\n    dateFormat(now, \\\"longTime\\\", true);\\n    // 10:46:21 PM UTC\\n\\n    // ...Or add the prefix \\\"UTC:\\\" to your mask.\\n    dateFormat(now, \\\"UTC:h:MM:ss TT Z\\\");\\n    // 10:46:21 PM UTC\\n\\n    // You can also get the ISO 8601 week of the year:\\n    dateFormat(now, \\\"W\\\");\\n    // 42\\n## License\\n\\n(c) 2007-2009 Steven Levithan [stevenlevithan.com][stevenlevithan], MIT license.\\n\\n[dateformat]: http://blog.stevenlevithan.com/archives/date-time-format\\n[stevenlevithan]: http://stevenlevithan.com/\\n\",\n   17    \"readmeFilename\": \"Readme.md\",\n   18    \"_id\": \"dateformat@1.0.2-1.2.3\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\dateformat\\Readme.md:\n   13  \n   14      var dateFormat = require('dateformat');\n   15:     var now = new Date();\n   16  \n   17      // Basic usage\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\dateformat\\lib\\dateformat.js:\n   26       * Get the ISO 8601 week number\n   27       * Based on comments from\n   28:      * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n   29       */\n   30      getWeek = function (date) {\n   31        // Remove time components of date\n   32:       var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n   33  \n   34        // Change date to Thursday same week\n   ..\n   36  \n   37        // Take January 4th as it is always in week 1 (see ISO 8601)\n   38:       var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n   39  \n   40        // Change date to Thursday same week\n   ..\n   60  		}\n   61  \n   62: 		date = date || new Date;\n   63  \n   64      if(!(date instanceof Date)) {\n   65:       date = new Date(date);\n   66      }\n   67  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\dateformat\\test\\test_weekofyear.js:\n    1  var dateFormat = require('../lib/dateformat.js');\n    2  \n    3: var val = process.argv[2] || new Date();\n    4  console.log(dateFormat(val, 'W'));\n    5  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\eventemitter2\\package.json:\n   52      \"index.js\"\n   53    ],\n   54:   \"readme\": \"# EventEmitter2\\n\\nEventEmitter2 is an implementation of the EventEmitter found in Node.js\\n\\n## Features\\n\\n - Namespaces/Wildcards.\\n - Times To Listen (TTL), extends the `once` concept with `many`.\\n - Browser environment compatibility.\\n - Demonstrates good performance in benchmarks\\n\\n```\\nEventEmitterHeatUp x 3,728,965 ops/sec \\\\302\\\\2610.68% (60 runs sampled)\\nEventEmitter x 2,822,904 ops/sec \\\\302\\\\2610.74% (63 runs sampled)\\nEventEmitter2 x 7,251,227 ops/sec \\\\302\\\\2610.55% (58 runs sampled)\\nEventEmitter2 (wild) x 3,220,268 ops/sec \\\\302\\\\2610.44% (65 runs sampled)\\nFastest is EventEmitter2\\n```\\n\\n## Differences (Non breaking, compatible with existing EventEmitter)\\n\\n - The constructor takes a configuration object.\\n \\n```javascript\\n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\\n    var server = new EventEmitter2({\\n      wildcard: true, // should the event emitter use wildcards.\\n      delimiter: '::', // the delimiter used to segment namespaces, defaults to `.`.\\n      newListener: false, // if you want to emit the newListener event set to true.\\n      maxListeners: 20, // the max number of listeners that can be assigned to an event, defaults to 10.\\n    });\\n```\\n\\n - Getting the actual event that fired.\\n\\n```javascript\\n    server.on('foo.*', function(value1, value2) {\\n      console.log(this.event, value1, value2);\\n    });\\n```\\n\\n - Fire an event N times and then remove it, an extension of the `once` concept.\\n\\n```javascript\\n    server.many('foo', 4, function() {\\n      console.log('hello');\\n    });\\n```\\n\\n - Pass in a namespaced event as an array rather than a delimited string.\\n\\n```javascript\\n    server.many(['foo', 'bar', 'bazz'], function() {\\n      console.log('hello');\\n    });\\n```\\n\\n\\n## API\\n\\nWhen an `EventEmitter` instance experiences an error, the typical action is\\nto emit an `error` event. Error events are treated as a special case.\\nIf there is no listener for it, then the default action is to print a stack\\ntrace and exit the program.\\n\\nAll EventEmitters emit the event `newListener` when new listeners are\\nadded.\\n\\n\\n**Namespaces** with **Wildcards**\\nTo use namespaces/wildcards, pass the `wildcard` option into the EventEmitter constructor.\\nWhen namespaces/wildcards are enabled, events can either be strings (`foo.bar`) separated\\nby a delimiter or arrays (`['foo', 'bar']`). The delimiter is also configurable as a \\nconstructor option.\\n\\nAn event name passed to any event emitter method can contain a wild card (the `*` character).\\nIf the event name is a string, a wildcard may appear as `foo.*`. If the event name is an array, \\nthe wildcard may appear as `['foo', '*']`.\\n\\nIf either of the above described events were passed to the `on` method, subsequent emits such \\nas the following would be observed...\\n\\n```javascript\\n   emitter.emit('foo.bazz');\\n   emitter.emit(['foo', 'bar']);\\n```\\n\\n\\n#### emitter.addListener(event, listener)\\n#### emitter.on(event, listener)\\n\\nAdds a listener to the end of the listeners array for the specified event.\\n\\n```javascript\\n    server.on('data', function(value1, value2, value3 /* accepts any number of expected values... */) {\\n      console.log('The event was raised!');\\n    });\\n```\\n\\n```javascript\\n    server.on('data', function(value) {\\n      console.log('The event was raised!');\\n    });\\n```\\n\\n#### emitter.onAny(listener)\\n\\nAdds a listener that will be fired when any event is emitted.\\n\\n```javascript\\n    server.onAny(function(value) {\\n      console.log('All events trigger this.');\\n    });\\n```\\n\\n#### emitter.offAny(listener)\\n\\nRemoves the listener that will be fired when any event is emitted.\\n\\n```javascript\\n    server.offAny(function(value) {\\n      console.log('The event was raised!');\\n    });\\n```\\n\\n#### emitter.once(event, listener)\\n\\nAdds a **one time** listener for the event. The listener is invoked only the first time the event is fired, after which it is removed.\\n\\n```javascript\\n    server.once('get', function (value) {\\n      console.log('Ah, we have our first value!');\\n    });\\n```\\n\\n#### emitter.many(event, timesToListen, listener)\\n\\nAdds a listener that will execute **n times** for the event before being removed. The listener is invoked only the first time the event is fired, after which it is removed.\\n\\n```javascript\\n    server.many('get', 4, function (value) {\\n      console.log('This event will be listened to exactly four times.');\\n    });\\n```\\n\\n\\n#### emitter.removeListener(event, listener)\\n#### emitter.off(event, listener)\\n\\nRemove a listener from the listener array for the specified event. **Caution**: changes array indices in the listener array behind the listener.\\n\\n```javascript\\n    var callback = function(value) {\\n      console.log('someone connected!');\\n    };\\n    server.on('get', callback);\\n    // ...\\n    server.removeListener('get', callback);\\n```\\n\\n\\n#### emitter.removeAllListeners([event])\\n\\nRemoves all listeners, or those of the specified event.\\n\\n\\n#### emitter.setMaxListeners(n)\\n\\nBy default EventEmitters will print a warning if more than 10 listeners are added to it. This is a useful default which helps finding memory leaks. Obviously not all Emitters should be limited to 10. This function allows that to be increased. Set to zero for unlimited.\\n\\n\\n#### emitter.listeners(event)\\n\\nReturns an array of listeners for the specified event. This array can be manipulated, e.g. to remove listeners.\\n\\n```javascript\\n    server.on('get', function(value) {\\n      console.log('someone connected!');\\n    });\\n    console.log(console.log(server.listeners('get')); // [ [Function] ]\\n```\\n\\n#### emitter.listenersAny()\\n\\nReturns an array of listeners that are listening for any event that is specified. This array can be manipulated, e.g. to remove listeners.\\n\\n```javascript\\n    server.onAny(function(value) {\\n      console.log('someone connected!');\\n    });\\n    console.log(console.log(server.listenersAny()[0]); // [ [Function] ] // someone connected!\\n```\\n\\n#### emitter.emit(event, [arg1], [arg2], [...])\\n\\nExecute each of the listeners that may be listening for the specified event name in order with the list of arguments.\\n\\n## Test coverage\\n\\nThere is a test suite that tries to cover each use case, it can be found <a href=\\\"https://github.com/hij1nx/EventEmitter2/tree/master/test\\\">here</a>.\\n\\n## Licence\\n\\n(The MIT License)\\n\\nCopyright (c) 2011 hij1nx <http://www.twitter.com/hij1nx>\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   55    \"readmeFilename\": \"README.md\",\n   56    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\eventemitter2\\README.md:\n   24  ```javascript\n   25      var EventEmitter2 = require('eventemitter2').EventEmitter2;\n   26:     var server = new EventEmitter2({\n   27        wildcard: true, // should the event emitter use wildcards.\n   28        delimiter: '::', // the delimiter used to segment namespaces, defaults to `.`.\n   29:       newListener: false, // if you want to emit the newListener event set to true.\n   30        maxListeners: 20, // the max number of listeners that can be assigned to an event, defaults to 10.\n   31      });\n   ..\n   64  trace and exit the program.\n   65  \n   66: All EventEmitters emit the event `newListener` when new listeners are\n   67  added.\n   68  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\eventemitter2\\lib\\eventemitter2.js:\n   21        conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n   22        conf.wildcard && (this.wildcard = conf.wildcard);\n   23:       conf.newListener && (this.newListener = conf.newListener);\n   24  \n   25        if (this.wildcard) {\n   ..\n   31    function EventEmitter(conf) {\n   32      this._events = {};\n   33:     this.newListener = false;\n   34      configure.call(this, conf);\n   35    }\n   ..\n  235  \n  236      if (typeof fn !== 'function') {\n  237:       throw new Error('many only accepts instances of Function');\n  238      }\n  239  \n  ...\n  258      var type = arguments[0];\n  259  \n  260:     if (type === 'newListener' && !this.newListener) {\n  261:       if (!this._events.newListener) { return false; }\n  262      }\n  263  \n  ...\n  265      if (this._all) {\n  266        var l = arguments.length;\n  267:       var args = new Array(l - 1);\n  268        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n  269        for (i = 0, l = this._all.length; i < l; i++) {\n  ...\n  283            throw arguments[1]; // Unhandled 'error' event\n  284          } else {\n  285:           throw new Error(\"Uncaught, unspecified 'error' event.\");\n  286          }\n  287          return false;\n  ...\n  316            default:\n  317              var l = arguments.length;\n  318:             var args = new Array(l - 1);\n  319              for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n  320              handler.apply(this, args);\n  ...\n  324      else if (handler) {\n  325        var l = arguments.length;\n  326:       var args = new Array(l - 1);\n  327        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n  328  \n  ...\n  348  \n  349      if (typeof listener !== 'function') {\n  350:       throw new Error('on only accepts instances of Function');\n  351      }\n  352      this._events || init.call(this);\n  353  \n  354:     // To avoid recursion in the case that type == \"newListeners\"! Before\n  355:     // adding it to the listeners, first emit \"newListeners\".\n  356:     this.emit('newListener', type, listener);\n  357  \n  358      if(this.wildcard) {\n  ...\n  403  \n  404      if (typeof fn !== 'function') {\n  405:       throw new Error('onAny only accepts instances of Function');\n  406      }\n  407  \n  ...\n  415    EventEmitter.prototype.off = function(type, listener) {\n  416      if (typeof listener !== 'function') {\n  417:       throw new Error('removeListener only takes instances of Function');\n  418      }\n  419  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\exit\\.jshintrc:\n    4    \"immed\": true,\n    5    \"latedef\": \"nofunc\",\n    6:   \"newcap\": true,\n    7    \"noarg\": true,\n    8    \"sub\": true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\exit\\package.json:\n   45      \"3584\"\n   46    ],\n   47:   \"readme\": \"# exit [![Build Status](https://secure.travis-ci.org/cowboy/node-exit.png?branch=master)](http://travis-ci.org/cowboy/node-exit)\\n\\nA replacement for process.exit that ensures stdio are fully drained before exiting.\\n\\nTo make a long story short, if `process.exit` is called on Windows, script output is often truncated when pipe-redirecting `stdout` or `stderr`. This module attempts to work around this issue by waiting until those streams have been completely drained before actually calling `process.exit`.\\n\\nSee [Node.js issue #3584](https://github.com/joyent/node/issues/3584) for further reference.\\n\\nTested in OS X 10.8, Windows 7 on Node.js 0.8.25 and 0.10.18.\\n\\nBased on some code by [@vladikoff](https://github.com/vladikoff).\\n\\n## Getting Started\\nInstall the module with: `npm install exit`\\n\\n```javascript\\nvar exit = require('exit');\\n\\n// These lines should appear in the output, EVEN ON WINDOWS.\\nconsole.log(\\\"omg\\\");\\nconsole.error(\\\"yay\\\");\\n\\n// process.exit(5);\\nexit(5);\\n\\n// These lines shouldn't appear in the output.\\nconsole.log(\\\"wtf\\\");\\nconsole.error(\\\"bro\\\");\\n```\\n\\n## Don't believe me? Try it for yourself.\\n\\nIn Windows, clone the repo and cd to the `test\\\\fixtures` directory. The only difference between [log.js](test/fixtures/log.js) and [log-broken.js](test/fixtures/log-broken.js) is that the former uses `exit` while the latter calls `process.exit` directly.\\n\\nThis test was done using cmd.exe, but you can see the same results using `| grep \\\"std\\\"` in either PowerShell or git-bash.\\n\\n```\\nC:\\\\node-exit\\\\test\\\\fixtures>node log.js 0 10 stdout stderr 2>&1 | find \\\"std\\\"\\nstdout 0\\nstderr 0\\nstdout 1\\nstderr 1\\nstdout 2\\nstderr 2\\nstdout 3\\nstderr 3\\nstdout 4\\nstderr 4\\nstdout 5\\nstderr 5\\nstdout 6\\nstderr 6\\nstdout 7\\nstderr 7\\nstdout 8\\nstderr 8\\nstdout 9\\nstderr 9\\n\\nC:\\\\node-exit\\\\test\\\\fixtures>node log-broken.js 0 10 stdout stderr 2>&1 | find \\\"std\\\"\\n\\nC:\\\\node-exit\\\\test\\\\fixtures>\\n```\\n\\n## Contributing\\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\\n\\n## Release History\\n2013-11-26 - v0.1.2 - Fixed a bug with hanging processes.  \\n2013-09-26 - v0.1.1 - Fixed some bugs. It seems to actually work now!  \\n2013-09-20 - v0.1.0 - Initial release.\\n\\n## License\\nCopyright (c) 2013 \\\"Cowboy\\\" Ben Alman  \\nLicensed under the MIT license.\\n\",\n   48    \"readmeFilename\": \"README.md\",\n   49    \"_id\": \"exit@0.1.2\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\exit\\README.md:\n   64  \n   65  ## Contributing\n   66: In lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n   67  \n   68  ## Release History\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\.jshintrc:\n    5    \"immed\": true,\n    6    \"latedef\": true,\n    7:   \"newcap\": true,\n    8    \"noarg\": true,\n    9    \"sub\": true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\package.json:\n   42      \"file\"\n   43    ],\n   44:   \"readme\": \"# findup-sync\\n\\nFind the first file matching a given pattern in the current directory or the nearest ancestor directory.\\n\\n## Getting Started\\nInstall the module with: `npm install findup-sync`\\n\\n```js\\nvar findup = require('findup-sync');\\n\\n// Start looking in the CWD.\\nvar filepath1 = findup('{a,b}*.txt');\\n\\n// Start looking somewhere else, and ignore case (probably a good idea).\\nvar filepath2 = findup('{a,b}*.txt', {cwd: '/some/path', nocase: true});\\n```\\n\\n## Usage\\n\\n```js\\nfindup(patternOrPatterns [, minimatchOptions])\\n```\\n\\n### patternOrPatterns\\nType: `String` or `Array`  \\nDefault: none\\n\\nOne or more wildcard glob patterns. Or just filenames.\\n\\n### minimatchOptions\\nType: `Object`  \\nDefault: `{}`\\n\\nOptions to be passed to [minimatch](https://github.com/isaacs/minimatch).\\n\\nNote that if you want to start in a different directory than the current working directory, specify a `cwd` property here.\\n\\n## Contributing\\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\\n\\n## Release History\\n2013-03-08 - v0.1.2 - Updated dependencies. Fixed a Node 0.9.x bug. Updated unit tests to work cross-platform.  \\n2012-11-15 - v0.1.1 - Now works without an options object.  \\n2012-11-01 - v0.1.0 - Initial release.\\n\",\n   45    \"readmeFilename\": \"README.md\",\n   46    \"_id\": \"findup-sync@0.1.2\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\README.md:\n   37  \n   38  ## Contributing\n   39: In lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n   40  \n   41  ## Release History\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.compat.js:\n  164      function ctor() { this.x = 1; }\n  165      ctor.prototype = { 'valueOf': 1, 'y': 1 };\n  166:     for (var prop in new ctor) { props.push(prop); }\n  167      for (prop in arguments) { nonEnumArgs = !prop; }\n  168  \n  ...\n  276        return value;\n  277      }\n  278:     // allow invoking `lodash` without the `new` operator\n  279      if (!(this instanceof lodash)) {\n  280:       return new lodash(value);\n  281      }\n  282      this.__wrapped__ = value;\n  ...\n  559     * @param {Array} partialArgs An array of arguments to be partially applied.\n  560     * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n  561:    * @returns {Function} Returns the new bound function.\n  562     */\n  563    function createBound(func, thisArg, partialArgs, rightIndicator) {\n  ...\n  589        }\n  590        if (this instanceof bound) {\n  591:         // ensure `new bound` is an instance of `bound` and `func`\n  592          noop.prototype = func.prototype;\n  593:         thisBinding = new noop;\n  594          noop.prototype = null;\n  595  \n  ...\n  788     * @param {Number} start The start index.\n  789     * @param {Number} end The end index.\n  790:    * @returns {Array} Returns the new array.\n  791     */\n  792    function slice(array, start, end) {\n  ...\n  868     * };\n  869     *\n  870:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  871     *   alert(key);\n  872     * });\n  ...\n  929     * @category Objects\n  930     * @param {Object} object The object to inspect.\n  931:    * @returns {Array} Returns a new array of property names.\n  932     * @example\n  933     *\n  ...\n  992     * @private\n  993     * @param {Object} object The object to inspect.\n  994:    * @returns {Array} Returns a new array of property names.\n  995     */\n  996    function shimKeys(object) {\n  ...\n 1146        case boolClass:\n 1147        case dateClass:\n 1148:         return done ? result : new ctor(+result);\n 1149  \n 1150        case numberClass:\n 1151        case stringClass:\n 1152:         return done ? result : new ctor(result);\n 1153  \n 1154        case regexpClass:\n ....\n 1268     * @category Objects\n 1269     * @param {Object} object The object to inspect.\n 1270:    * @returns {Array} Returns a new array of property names that have function values.\n 1271     * @example\n 1272     *\n ....\n 1356     * @example\n 1357     *\n 1358:    * _.isDate(new Date);\n 1359     * // => true\n 1360     */\n ....\n 1670    /**\n 1671     * Checks if `value` is the language type of Object.\n 1672:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1673     *\n 1674     * @static\n ....\n 1712     * // => true\n 1713     *\n 1714:    * _.isNaN(new Number(NaN));\n 1715     * // => true\n 1716     *\n ....\n 1779     * }\n 1780     *\n 1781:    * _.isPlainObject(new Stooge('moe', 40));\n 1782     * // => false\n 1783     *\n ....\n 2042     * @category Objects\n 2043     * @param {Object} object The object to inspect.\n 2044:    * @returns {Array} Returns new array of key-value pairs.\n 2045     * @example\n 2046     *\n ....\n 2117     * @category Objects\n 2118     * @param {Object} object The object to inspect.\n 2119:    * @returns {Array} Returns a new array of property values.\n 2120     * @example\n 2121     *\n ....\n 2148     * @param {Array|Number|String} [index1, index2, ...] The indexes of\n 2149     *  `collection` to retrieve, either as individual arguments or arrays.\n 2150:    * @returns {Array} Returns a new array of elements corresponding to the\n 2151     *  provided indexes.\n 2152     * @example\n ....\n 2348     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2349     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2350:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 2351     * @example\n 2352     *\n ....\n 2543     *  the function invoked per iteration.\n 2544     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 2545:    * @returns {Array} Returns a new array of the results of each invoked method.\n 2546     * @example\n 2547     *\n ....\n 2586     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2587     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2588:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 2589     * @example\n 2590     *\n ....\n 2769     * @param {Array|Object|String} collection The collection to iterate over.\n 2770     * @param {String} property The property to pluck.\n 2771:    * @returns {Array} Returns a new array of property values.\n 2772     * @example\n 2773     *\n ....\n 2895     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2896     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2897:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 2898     *  callback check.\n 2899     * @example\n ....\n 2930     * @category Collections\n 2931     * @param {Array|Object|String} collection The collection to shuffle.\n 2932:    * @returns {Array} Returns a new shuffled collection.\n 2933     * @example\n 2934     *\n ....\n 3059     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 3060     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 3061:    * @returns {Array} Returns a new array of sorted elements.\n 3062     * @example\n 3063     *\n ....\n 3101     * @category Collections\n 3102     * @param {Array|Object|String} collection The collection to convert.\n 3103:    * @returns {Array} Returns the new converted array.\n 3104     * @example\n 3105     *\n ....\n 3128     * @param {Array|Object|String} collection The collection to iterate over.\n 3129     * @param {Object} properties The object of property values to filter by.\n 3130:    * @returns {Array} Returns a new array of elements that have the given `properties`.\n 3131     * @example\n 3132     *\n ....\n 3151     * @category Arrays\n 3152     * @param {Array} array The array to compact.\n 3153:    * @returns {Array} Returns a new filtered array.\n 3154     * @example\n 3155     *\n ....\n 3180     * @param {Array} array The array to process.\n 3181     * @param {Array} [array1, array2, ...] Arrays to check.\n 3182:    * @returns {Array} Returns a new array of `array` elements not present in the\n 3183     *  other arrays.\n 3184     * @example\n ....\n 3289     * @param {Array} array The array to compact.\n 3290     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 3291:    * @returns {Array} Returns a new flattened array.\n 3292     * @example\n 3293     *\n ....\n 3441     * @category Arrays\n 3442     * @param {Array} [array1, array2, ...] Arrays to process.\n 3443:    * @returns {Array} Returns a new array of unique elements that are present\n 3444     *  in **all** of the arrays.\n 3445     * @example\n ....\n 3636     * @param {Number} end The end of the range.\n 3637     * @param {Number} [step=1] The value to increment or descrement by.\n 3638:    * @returns {Array} Returns a new range array.\n 3639     * @example\n 3640     *\n ....\n 3821     * @category Arrays\n 3822     * @param {Array} [array1, array2, ...] Arrays to process.\n 3823:    * @returns {Array} Returns a new array of unique values, in order, that are\n 3824     *  present in one or more of the arrays.\n 3825     * @example\n ....\n 3928     * @param {Array} array The array to filter.\n 3929     * @param {Mixed} [value1, value2, ...] Values to remove.\n 3930:    * @returns {Array} Returns a new filtered array.\n 3931     * @example\n 3932     *\n ....\n 3959     * @category Arrays\n 3960     * @param {Array} [array1, array2, ...] Arrays to process.\n 3961:    * @returns {Array} Returns a new array of grouped elements.\n 3962     * @example\n 3963     *\n ....\n 3989     * it is executed.\n 3990     * @param {Function} func The function to restrict.\n 3991:    * @returns {Function} Returns the new restricted function.\n 3992     * @example\n 3993     *\n ....\n 4020     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 4021     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4022:    * @returns {Function} Returns the new bound function.\n 4023     * @example\n 4024     *\n ....\n 4087     * @param {String} key The key of the method.\n 4088     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4089:    * @returns {Function} Returns the new bound function.\n 4090     * @example\n 4091     *\n ....\n 4122     * @category Functions\n 4123     * @param {Function} [func1, func2, ...] Functions to compose.\n 4124:    * @returns {Function} Returns the new composed function.\n 4125     * @example\n 4126     *\n ....\n 4158     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 4159     *  edge of the timeout.\n 4160:    * @returns {Function} Returns the new debounced function.\n 4161     * @example\n 4162     *\n ....\n 4249     * @param {Function} func The function to have its output memoized.\n 4250     * @param {Function} [resolver] A function used to resolve the cache key.\n 4251:    * @returns {Function} Returns the new memoizing function.\n 4252     * @example\n 4253     *\n ....\n 4275     * @category Functions\n 4276     * @param {Function} func The function to restrict.\n 4277:    * @returns {Function} Returns the new restricted function.\n 4278     * @example\n 4279     *\n ....\n 4302    /**\n 4303     * Creates a function that, when called, invokes `func` with any additional\n 4304:    * `partial` arguments prepended to those passed to the new function. This\n 4305     * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n 4306     *\n ....\n 4310     * @param {Function} func The function to partially apply arguments to.\n 4311     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4312:    * @returns {Function} Returns the new partially applied function.\n 4313     * @example\n 4314     *\n ....\n 4324    /**\n 4325     * This method is similar to `_.partial`, except that `partial` arguments are\n 4326:    * appended to those passed to the new function.\n 4327     *\n 4328     * @static\n ....\n 4331     * @param {Function} func The function to partially apply arguments to.\n 4332     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4333:    * @returns {Function} Returns the new partially applied function.\n 4334     * @example\n 4335     *\n ....\n 4365     * @param {Function} func The function to throttle.\n 4366     * @param {Number} wait The number of milliseconds to throttle executions to.\n 4367:    * @returns {Function} Returns the new throttled function.\n 4368     * @example\n 4369     *\n ....\n 4379  \n 4380      function trailingCall() {\n 4381:       lastCalled = new Date;\n 4382        timeoutId = null;\n 4383        result = func.apply(thisArg, args);\n 4384      }\n 4385      return function() {\n 4386:       var now = new Date,\n 4387            remaining = wait - (now - lastCalled);\n 4388  \n ....\n 4414     * @param {Mixed} value The value to wrap.\n 4415     * @param {Function} wrapper The wrapper function.\n 4416:    * @returns {Function} Returns the new function.\n 4417     * @example\n 4418     *\n ....\n 4499          var args = [this.__wrapped__];\n 4500          push.apply(args, arguments);\n 4501:         return new lodash(func.apply(lodash, args));\n 4502        };\n 4503      });\n ....\n 4779     * @param {Function} callback The function called per iteration.\n 4780     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 4781:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 4782     * @example\n 4783     *\n ....\n 5053          return callback == null || (thisArg && typeof callback != 'function')\n 5054            ? result\n 5055:           : new lodash(result);\n 5056        };\n 5057      }\n ....\n 5091    });\n 5092  \n 5093:   // add `Array` functions that return new wrapped values\n 5094    each(['concat', 'slice', 'splice'], function(methodName) {\n 5095      var func = arrayRef[methodName];\n 5096      lodash.prototype[methodName] = function() {\n 5097:       return new lodash(func.apply(this.__wrapped__, arguments));\n 5098      };\n 5099    });\n ....\n 5113            delete value[0];\n 5114          }\n 5115:         return isSplice ? new lodash(result) : result;\n 5116        };\n 5117      });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.compat.min.js:\n    5   * Underscore.js 1.4.4 underscorejs.org/LICENSE\n    6   */\n    7: ;(function(n,t){function r(n){return n&&typeof n==\"object\"&&n.__wrapped__?n:this instanceof r?(this.__wrapped__=n,void 0):new r(n)}function e(n,t,r){t||(t=0);var e=n.length,u=e-t>=(r||at);if(u){var o={};for(r=t-1;++r<e;){var i=n[r]+\"\";(St.call(o,i)?o[i]:o[i]=[]).push(n[r])}}return function(r){if(u){var e=r+\"\";return St.call(o,e)&&-1<z(o[e],r)}return-1<z(n,r,t)}}function u(n){return n.charCodeAt(0)}function o(n,t){var r=n.b,e=t.b;if(n=n.a,t=t.a,n!==t){if(n>t||typeof n==\"undefined\")return 1;if(n<t||typeof t==\"undefined\")return-1\n    8: }return r<e?-1:1}function i(n,t,r,e){function u(){var a=arguments,c=i?this:t;return o||(n=t[f]),r.length&&(a=a.length?(a=v(a),e?a.concat(r):r.concat(a)):r),this instanceof u?(s.prototype=n.prototype,c=new s,s.prototype=W,a=n.apply(c,a),x(a)?a:c):n.apply(c,a)}var o=w(n),i=!r,f=t;return i&&(r=t),o||(t=n),u}function f(n,t,r){if(n==W)return G;var e=typeof n;if(\"function\"!=e){if(\"object\"!=e)return function(t){return t[n]};var u=vr(n);return function(t){for(var r=u.length,e=X;r--&&(e=j(t[u[r]],n[u[r]],ft)););return e\n    9  }}return typeof t!=\"undefined\"?1===r?function(r){return n.call(t,r)}:2===r?function(r,e){return n.call(t,r,e)}:4===r?function(r,e,u,o){return n.call(t,r,e,u,o)}:function(r,e,u){return n.call(t,r,e,u)}:n}function a(){for(var n,t={e:tt,f:rt,g:Jt,i:Wt,j:Zt,k:jt,b:\"l(n)\",c:\"\",h:\"\",l:\"\",m:Q},r=0;n=arguments[r];r++)for(var e in n)t[e]=n[e];if(n=t.a,t.d=/^[^,]+/.exec(n)[0],r=\"var j,n=\"+t.d+\",u=n;if(!n)return u;\"+t.l+\";\",t.b?(r+=\"var o=n.length;j=-1;if(\"+t.b+\"){\",t.j&&(r+=\"if(m(n)){n=n.split('')}\"),r+=\"while(++j<o){\"+t.h+\"}}else{\"):t.i&&(r+=\"var o=n.length;j=-1;if(o&&k(n)){while(++j<o){j+='';\"+t.h+\"}}else{\"),t.f&&(r+=\"var v=typeof n=='function';\"),t.g&&t.m?(r+=\"var s=-1,t=r[typeof n]?p(n):[],o=t.length;while(++s<o){j=t[s];\",t.f&&(r+=\"if(!(v&&j=='prototype')){\"),r+=t.h+\"\",t.f&&(r+=\"}\")):(r+=\"for(j in n){\",(t.f||t.m)&&(r+=\"if(\",t.f&&(r+=\"!(v&&j=='prototype')\"),t.f&&t.m&&(r+=\"&&\"),t.m&&(r+=\"i.call(n,j)\"),r+=\"){\"),r+=t.h+\";\",(t.f||t.m)&&(r+=\"}\")),r+=\"}\",t.e)for(r+=\"var g=n.constructor;\",e=0;7>e;e++)r+=\"j='\"+t.k[e]+\"';if(\",\"constructor\"==t.k[e]&&(r+=\"!(g&&g.prototype===n)&&\"),r+=\"i.call(n,j)){\"+t.h+\"}\";\n   10  return(t.b||t.i)&&(r+=\"}\"),r+=t.c+\";return u\",Function(\"f,i,k,l,m,r,p\",\"return function(\"+n+\"){\"+r+\"}\")(f,St,y,sr,A,ur,Ft)}function c(n){return\"\\\\\"+or[n]}function l(n){return gr[n]}function p(n){return typeof n.toString!=\"function\"&&typeof(n+\"\")==\"string\"}function s(){}function v(n,t,r){t||(t=0),typeof r==\"undefined\"&&(r=n?n.length:0);var e=-1;r=r-t||0;for(var u=Array(0>r?0:r);++e<r;)u[e]=n[t+e];return u}function g(n){return yr[n]}function y(n){return kt.call(n)==Bt}function h(n){var t=X;if(!n||typeof n!=\"object\"||y(n))return t;\n   11  var r=n.constructor;return!w(r)&&(!nr||!p(n))||r instanceof r?et?(lr(n,function(n,r,e){return t=!St.call(e,r),X}),t===X):(lr(n,function(n,r){t=r}),t===X||St.call(n,t)):t}function m(n){var t=[];return pr(n,function(n,r){t.push(r)}),t}function d(n,r,e,u,o,i){var a=n;if(typeof r==\"function\"&&(u=e,e=r,r=X),typeof e==\"function\"){e=typeof u==\"undefined\"?e:f(e,u,1);var a=e(a),c=typeof a!=\"undefined\";c||(a=n)}if(u=x(a)){var l=kt.call(a);if(!rr[l]||nr&&p(a))return a;var s=sr(a)}if(!u||!r)return u&&!c?s?v(a):hr({},a):a;\n   12: switch(u=er[l],l){case Pt:case zt:return c?a:new u(+a);case Ct:case Ut:return c?a:new u(a);case Lt:return c?a:u(a.source,gt.exec(a))}for(o||(o=[]),i||(i=[]),l=o.length;l--;)if(o[l]==n)return i[l];return c||(a=s?u(a.length):{},s&&(St.call(n,\"index\")&&(a.index=n.index),St.call(n,\"input\")&&(a.input=n.input))),o.push(n),i.push(a),(s?$:pr)(c?a:n,function(n,u){a[u]=d(n,r,e,t,o,i)}),a}function _(n){var t=[];return lr(n,function(n,r){w(n)&&t.push(r)}),t.sort()}function b(n){for(var t=-1,r=vr(n),e=r.length,u={};++t<e;){var o=r[t];\n   13  u[n[o]]=o}return u}function j(n,t,r,e,u,o){var i=r===ft;if(r&&!i){r=typeof e==\"undefined\"?r:f(r,e,2);var a=r(n,t);if(typeof a!=\"undefined\")return!!a}if(n===t)return 0!==n||1/n==1/t;var c=typeof n,l=typeof t;if(n===n&&(!n||\"function\"!=c&&\"object\"!=c)&&(!t||\"function\"!=l&&\"object\"!=l))return X;if(n==W||t==W)return n===t;if(l=kt.call(n),c=kt.call(t),l==Bt&&(l=Kt),c==Bt&&(c=Kt),l!=c)return X;switch(l){case Pt:case zt:return+n==+t;case Ct:return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case Lt:case Ut:return n==t+\"\"\n   14  }if(c=l==Mt,!c){if(n.__wrapped__||t.__wrapped__)return j(n.__wrapped__||n,t.__wrapped__||t,r,e,u,o);if(l!=Kt||nr&&(p(n)||p(t)))return X;var l=!Xt&&y(n)?Object:n.constructor,s=!Xt&&y(t)?Object:t.constructor;if(l!=s&&(!w(l)||!(l instanceof l&&w(s)&&s instanceof s)))return X}for(u||(u=[]),o||(o=[]),l=u.length;l--;)if(u[l]==n)return o[l]==t;var v=0,a=Q;if(u.push(n),o.push(t),c){if(l=n.length,v=t.length,a=v==n.length,!a&&!i)return a;for(;v--;)if(c=l,s=t[v],i)for(;c--&&!(a=j(n[c],s,r,e,u,o)););else if(!(a=j(n[v],s,r,e,u,o)))break;\n   ..\n   20  }else if(e=t,e==W||r)return n[0];return v(n,0,Dt(qt(0,e),u))}}function P(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var o=n[r];sr(o)?Et.apply(u,t?o:P(o)):u.push(o)}return u}function z(n,t,r){var e=-1,u=n?n.length:0;if(typeof r==\"number\")e=(0>r?qt(0,u+r):r||0)-1;else if(r)return e=K(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function C(n,t,r){if(typeof t!=\"number\"&&t!=W){var e=0,u=-1,o=n?n.length:0;for(t=f(t,r);++u<o&&t(n[u],u,n);)e++}else e=t==W||r?1:qt(0,t);return v(n,e)}function K(n,t,r,e){var u=0,o=n?n.length:u;\n   21  for(r=r?f(r,e,1):G,t=r(t);u<o;)e=u+o>>>1,r(n[e])<t?u=e+1:o=e;return u}function L(n,t,r,e){var u=-1,o=n?n.length:0,i=[],a=i;typeof t==\"function\"&&(e=r,r=t,t=X);var c=!t&&75<=o;if(c)var l={};for(r&&(a=[],r=f(r,e));++u<o;){e=n[u];var p=r?r(e,u,n):e;if(c)var s=p+\"\",s=St.call(l,s)?!(a=l[s]):a=l[s]=[];(t?!u||a[a.length-1]!==p:s||0>z(a,p))&&((r||c)&&a.push(p),i.push(e))}return i}function U(n,t){return Ht||It&&2<arguments.length?It.call.apply(It,arguments):i(n,t,v(arguments,2))}function V(n){var r=v(arguments,1);\n   22: return setTimeout(function(){n.apply(t,r)},1)}function G(n){return n}function H(n){$(_(n),function(t){var e=r[t]=n[t];r.prototype[t]=function(){var n=[this.__wrapped__];return Et.apply(n,arguments),new r(e.apply(r,n))}})}function J(){return this.__wrapped__}var Q=!0,W=null,X=!1,Y=typeof exports==\"object\"&&exports,Z=typeof module==\"object\"&&module&&module.exports==Y&&module,nt=typeof global==\"object\"&&global;nt.global===nt&&(n=nt);var tt,rt,et,ut=[],ot={},it=0,ft=ot,at=30,ct=n._,lt=/&(?:amp|lt|gt|quot|#39);/g,pt=/\\b__p\\+='';/g,st=/\\b(__p\\+=)''\\+/g,vt=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,gt=/\\w*$/,yt=RegExp(\"^\"+(ot.valueOf+\"\").replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),ht=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,mt=/<%=([\\s\\S]+?)%>/g,dt=/($^)/,_t=/[&<>\"']/g,bt=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,jt=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \"),wt=Math.ceil,xt=ut.concat,Ot=Math.floor,At=yt.test(At=Object.getPrototypeOf)&&At,St=ot.hasOwnProperty,Et=ut.push,kt=ot.toString,It=yt.test(It=v.bind)&&It,Nt=yt.test(Nt=Array.isArray)&&Nt,Rt=n.isFinite,$t=n.isNaN,Ft=yt.test(Ft=Object.keys)&&Ft,qt=Math.max,Dt=Math.min,Tt=Math.random,Bt=\"[object Arguments]\",Mt=\"[object Array]\",Pt=\"[object Boolean]\",zt=\"[object Date]\",Ct=\"[object Number]\",Kt=\"[object Object]\",Lt=\"[object RegExp]\",Ut=\"[object String]\",Vt=!!n.attachEvent,Gt=It&&!/\\n|true/.test(It+Vt),Ht=It&&!Gt,Jt=Ft&&(Vt||Gt),Qt=(Qt={0:1,length:1},ut.splice.call(Qt,0,1),Qt[0]),Wt=Q;\n   23: (function(){function n(){this.x=1}var t=[];n.prototype={valueOf:1,y:1};for(var r in new n)t.push(r);for(r in arguments)Wt=!r;tt=!/valueOf/.test(t),rt=n.propertyIsEnumerable(\"prototype\"),et=\"x\"!=t[0]})(1);var Xt=arguments.constructor==Object,Yt=!y(arguments),Zt=\"xx\"!=\"x\"[0]+Object(\"x\")[0];try{var nr=kt.call(document)==Kt&&!({toString:0}+\"\")}catch(tr){}var rr={\"[object Function]\":X};rr[Bt]=rr[Mt]=rr[Pt]=rr[zt]=rr[Ct]=rr[Kt]=rr[Lt]=rr[Ut]=Q;var er={};er[Mt]=Array,er[Pt]=Boolean,er[zt]=Date,er[Kt]=Object,er[Ct]=Number,er[Lt]=RegExp,er[Ut]=String;\n   24  var ur={\"boolean\":X,\"function\":Q,object:Q,number:X,string:X,undefined:X},or={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};r.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:mt,variable:\"\",imports:{_:r}};var ir={a:\"q,w,h\",l:\"var a=arguments,b=0,c=typeof h=='number'?2:a.length;while(++b<c){n=a[b];if(n&&r[typeof n]){\",h:\"if(typeof u[j]=='undefined')u[j]=n[j]\",c:\"}}\"},fr={a:\"e,d,x\",l:\"d=d&&typeof x=='undefined'?d:f(d,x)\",b:\"typeof o=='number'\",h:\"if(d(n[j],j,e)===false)return u\"},ar={l:\"if(!r[typeof n])return u;\"+fr.l,b:X},cr=a(fr);\n   25  Yt&&(y=function(n){return n?St.call(n,\"callee\"):X});var lr=a(fr,ar,{m:X}),pr=a(fr,ar),sr=Nt||function(n){return Xt&&n instanceof Array||kt.call(n)==Mt},vr=Ft?function(n){return x(n)?rt&&typeof n==\"function\"||Wt&&n.length&&y(n)?m(n):Ft(n):[]}:m,gr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},yr=b(gr),hr=a(ir,{l:ir.l.replace(\";\",\";if(c>3&&typeof a[c-2]=='function'){var d=f(a[--c-1],a[c--],2);}else if(c>2&&typeof a[c-1]=='function'){d=a[--c];}\"),h:\"u[j]=d?d(u[j],n[j]):n[j]\"}),mr=a(ir);\n   ..\n   31  }}else t=!t&&A(n)?u:f(t,r),cr(n,function(n,r,u){r=t(n,r,u),r<e&&(e=r,o=n)});return o},r.object=function(n,t){for(var r=-1,e=n?n.length:0,u={};++r<e;){var o=n[r];t?u[o]=t[r]:u[o[0]]=o[1]}return u},r.omit=function(n,t,r){var e=typeof t==\"function\",u={};if(e)t=f(t,r);else var o=xt.apply(ut,arguments);return lr(n,function(n,r,i){(e?!t(n,r,i):0>z(o,r,1))&&(u[r]=n)}),u},r.once=function(n){var t,r;return function(){return t?r:(t=Q,r=n.apply(this,arguments),n=W,r)}},r.pairs=function(n){for(var t=-1,r=vr(n),e=r.length,u=Array(e);++t<e;){var o=r[t];\n   32  u[t]=[o,n[o]]}return u},r.partial=function(n){return i(n,v(arguments,1))},r.partialRight=function(n){return i(n,v(arguments,1),W,ft)},r.pick=function(n,t,r){var e={};if(typeof t!=\"function\")for(var u=0,o=xt.apply(ut,arguments),i=x(n)?o.length:0;++u<i;){var a=o[u];a in n&&(e[a]=n[a])}else t=f(t,r),lr(n,function(n,r,u){t(n,r,u)&&(e[r]=n)});return e},r.pluck=_r,r.range=function(n,t,r){n=+n||0,r=+r||1,t==W&&(t=n,n=0);var e=-1;t=qt(0,wt((t-n)/r));for(var u=Array(t);++e<t;)u[e]=n,n+=r;return u},r.reject=function(n,t,r){return t=f(t,r),N(n,function(n,r,e){return!t(n,r,e)\n   33: })},r.rest=C,r.shuffle=function(n){var t=-1,r=n?n.length:0,e=Array(typeof r==\"number\"?r:0);return $(n,function(n){var r=Ot(Tt()*(++t+1));e[t]=e[r],e[r]=n}),e},r.sortBy=function(n,t,r){var e=-1,u=n?n.length:0,i=Array(typeof u==\"number\"?u:0);for(t=f(t,r),$(n,function(n,r,u){i[++e]={a:t(n,r,u),b:e,c:n}}),u=i.length,i.sort(o);u--;)i[u]=i[u].c;return i},r.tap=function(n,t){return t(n),n},r.throttle=function(n,t){function r(){f=new Date,i=W,u=n.apply(o,e)}var e,u,o,i,f=0;return function(){var a=new Date,c=t-(a-f);\n   34  return e=arguments,o=this,0<c?i||(i=setTimeout(r,c)):(clearTimeout(i),i=W,f=a,u=n.apply(o,e)),u}},r.times=function(n,t,r){n=+n||0;for(var e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);return u},r.toArray=function(n){return n&&typeof n.length==\"number\"?Zt&&A(n)?n.split(\"\"):v(n):E(n)},r.union=function(){return L(xt.apply(ut,arguments))},r.uniq=L,r.values=E,r.where=br,r.without=function(n){for(var t=-1,r=n?n.length:0,u=e(arguments,1),o=[];++t<r;){var i=n[t];u(i)||o.push(i)}return o},r.wrap=function(n,t){return function(){var r=[n];\n   35  return Et.apply(r,arguments),t.apply(this,r)}},r.zip=function(n){for(var t=-1,r=n?q(_r(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=_r(arguments,t);return e},r.collect=F,r.drop=C,r.each=$,r.extend=hr,r.methods=_,r.select=N,r.tail=C,r.unique=L,H(r),r.clone=d,r.cloneDeep=function(n,t,r){return d(n,Q,t,r)},r.contains=k,r.escape=function(n){return n==W?\"\":(n+\"\").replace(_t,l)},r.every=I,r.find=R,r.has=function(n,t){return n?St.call(n,t):X},r.identity=G,r.indexOf=z,r.isArguments=y,r.isArray=sr,r.isBoolean=function(n){return n===Q||n===X||kt.call(n)==Pt\n   ..\n   38  },r.some=B,r.sortedIndex=K,r.template=function(n,e,u){var o=r.templateSettings;n||(n=\"\"),u=mr({},u,o);var i,f=mr({},u.imports,o.imports),o=vr(f),f=E(f),a=0,l=u.interpolate||dt,p=\"__p+='\";n.replace(RegExp((u.escape||dt).source+\"|\"+l.source+\"|\"+(l===mt?ht:dt).source+\"|\"+(u.evaluate||dt).source+\"|$\",\"g\"),function(t,r,e,u,o,f){return e||(e=u),p+=n.slice(a,f).replace(bt,c),r&&(p+=\"'+__e(\"+r+\")+'\"),o&&(i=Q,p+=\"';\"+o+\";__p+='\"),e&&(p+=\"'+((__t=(\"+e+\"))==null?'':__t)+'\"),a=f+t.length,t}),p+=\"';\\n\",l=u=u.variable,l||(u=\"obj\",p=\"with(\"+u+\"){\"+p+\"}\"),p=(i?p.replace(pt,\"\"):p).replace(st,\"$1\").replace(vt,\"$1;\"),p=\"function(\"+u+\"){\"+(l?\"\":u+\"||(\"+u+\"={});\")+\"var __t,__p='',__e=_.escape\"+(i?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+p+\"return __p}\";\n   39  try{var s=Function(o,\"return \"+p).apply(t,f)}catch(v){throw v.source=p,v}return e?s(e):(s.source=p,s)},r.unescape=function(n){return n==W?\"\":(n+\"\").replace(lt,g)},r.uniqueId=function(n){var t=++it;return(n==W?\"\":n+\"\")+t},r.all=I,r.any=B,r.detect=R,r.foldl=D,r.foldr=T,r.include=k,r.inject=D,pr(r,function(n,t){r.prototype[t]||(r.prototype[t]=function(){var t=[this.__wrapped__];return Et.apply(t,arguments),n.apply(r,t)})}),r.first=M,r.last=function(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=W){var o=u;\n   40: for(t=f(t,r);o--&&t(n[o],o,n);)e++}else if(e=t,e==W||r)return n[u-1];return v(n,qt(0,u-e))}},r.take=M,r.head=M,pr(r,function(n,t){r.prototype[t]||(r.prototype[t]=function(t,e){var u=n(this.__wrapped__,t,e);return t==W||e&&typeof t!=\"function\"?u:new r(u)})}),r.VERSION=\"1.0.1\",r.prototype.toString=function(){return this.__wrapped__+\"\"},r.prototype.value=J,r.prototype.valueOf=J,cr([\"join\",\"pop\",\"shift\"],function(n){var t=ut[n];r.prototype[n]=function(){return t.apply(this.__wrapped__,arguments)}}),cr([\"push\",\"reverse\",\"sort\",\"unshift\"],function(n){var t=ut[n];\n   41: r.prototype[n]=function(){return t.apply(this.__wrapped__,arguments),this}}),cr([\"concat\",\"slice\",\"splice\"],function(n){var t=ut[n];r.prototype[n]=function(){return new r(t.apply(this.__wrapped__,arguments))}}),Qt&&cr([\"pop\",\"shift\",\"splice\"],function(n){var t=ut[n],e=\"splice\"==n;r.prototype[n]=function(){var n=this.__wrapped__,u=t.apply(n,arguments);return 0===n.length&&delete n[0],e?new r(u):u}}),typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?(n._=r,define(function(){return r\n   42  })):Y?Z?(Z.exports=r)._=r:Y._=r:n._=r})(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.js:\n  198        return value;\n  199      }\n  200:     // allow invoking `lodash` without the `new` operator\n  201      if (!(this instanceof lodash)) {\n  202:       return new lodash(value);\n  203      }\n  204      this.__wrapped__ = value;\n  ...\n  441     * @param {Array} partialArgs An array of arguments to be partially applied.\n  442     * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n  443:    * @returns {Function} Returns the new bound function.\n  444     */\n  445    function createBound(func, thisArg, partialArgs, rightIndicator) {\n  ...\n  471        }\n  472        if (this instanceof bound) {\n  473:         // ensure `new bound` is an instance of `bound` and `func`\n  474          noop.prototype = func.prototype;\n  475:         thisBinding = new noop;\n  476          noop.prototype = null;\n  477  \n  ...\n  665     * @param {Number} start The start index.\n  666     * @param {Number} end The end index.\n  667:    * @returns {Array} Returns the new array.\n  668     */\n  669    function slice(array, start, end) {\n  ...\n  739     * };\n  740     *\n  741:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  742     *   alert(key);\n  743     * });\n  ...\n  800     * @category Objects\n  801     * @param {Object} object The object to inspect.\n  802:    * @returns {Array} Returns a new array of property names.\n  803     * @example\n  804     *\n  ...\n  849     * @private\n  850     * @param {Object} object The object to inspect.\n  851:    * @returns {Array} Returns a new array of property names.\n  852     */\n  853    function shimKeys(object) {\n  ...\n 1003        case boolClass:\n 1004        case dateClass:\n 1005:         return done ? result : new ctor(+result);\n 1006  \n 1007        case numberClass:\n 1008        case stringClass:\n 1009:         return done ? result : new ctor(result);\n 1010  \n 1011        case regexpClass:\n ....\n 1125     * @category Objects\n 1126     * @param {Object} object The object to inspect.\n 1127:    * @returns {Array} Returns a new array of property names that have function values.\n 1128     * @example\n 1129     *\n ....\n 1213     * @example\n 1214     *\n 1215:    * _.isDate(new Date);\n 1216     * // => true\n 1217     */\n ....\n 1527    /**\n 1528     * Checks if `value` is the language type of Object.\n 1529:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1530     *\n 1531     * @static\n ....\n 1569     * // => true\n 1570     *\n 1571:    * _.isNaN(new Number(NaN));\n 1572     * // => true\n 1573     *\n ....\n 1636     * }\n 1637     *\n 1638:    * _.isPlainObject(new Stooge('moe', 40));\n 1639     * // => false\n 1640     *\n ....\n 1899     * @category Objects\n 1900     * @param {Object} object The object to inspect.\n 1901:    * @returns {Array} Returns new array of key-value pairs.\n 1902     * @example\n 1903     *\n ....\n 1974     * @category Objects\n 1975     * @param {Object} object The object to inspect.\n 1976:    * @returns {Array} Returns a new array of property values.\n 1977     * @example\n 1978     *\n ....\n 2005     * @param {Array|Number|String} [index1, index2, ...] The indexes of\n 2006     *  `collection` to retrieve, either as individual arguments or arrays.\n 2007:    * @returns {Array} Returns a new array of elements corresponding to the\n 2008     *  provided indexes.\n 2009     * @example\n ....\n 2202     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2203     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2204:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 2205     * @example\n 2206     *\n ....\n 2397     *  the function invoked per iteration.\n 2398     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 2399:    * @returns {Array} Returns a new array of the results of each invoked method.\n 2400     * @example\n 2401     *\n ....\n 2440     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2441     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2442:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 2443     * @example\n 2444     *\n ....\n 2623     * @param {Array|Object|String} collection The collection to iterate over.\n 2624     * @param {String} property The property to pluck.\n 2625:    * @returns {Array} Returns a new array of property values.\n 2626     * @example\n 2627     *\n ....\n 2747     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2748     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2749:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 2750     *  callback check.\n 2751     * @example\n ....\n 2782     * @category Collections\n 2783     * @param {Array|Object|String} collection The collection to shuffle.\n 2784:    * @returns {Array} Returns a new shuffled collection.\n 2785     * @example\n 2786     *\n ....\n 2911     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2912     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2913:    * @returns {Array} Returns a new array of sorted elements.\n 2914     * @example\n 2915     *\n ....\n 2953     * @category Collections\n 2954     * @param {Array|Object|String} collection The collection to convert.\n 2955:    * @returns {Array} Returns the new converted array.\n 2956     * @example\n 2957     *\n ....\n 2978     * @param {Array|Object|String} collection The collection to iterate over.\n 2979     * @param {Object} properties The object of property values to filter by.\n 2980:    * @returns {Array} Returns a new array of elements that have the given `properties`.\n 2981     * @example\n 2982     *\n ....\n 3001     * @category Arrays\n 3002     * @param {Array} array The array to compact.\n 3003:    * @returns {Array} Returns a new filtered array.\n 3004     * @example\n 3005     *\n ....\n 3030     * @param {Array} array The array to process.\n 3031     * @param {Array} [array1, array2, ...] Arrays to check.\n 3032:    * @returns {Array} Returns a new array of `array` elements not present in the\n 3033     *  other arrays.\n 3034     * @example\n ....\n 3139     * @param {Array} array The array to compact.\n 3140     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 3141:    * @returns {Array} Returns a new flattened array.\n 3142     * @example\n 3143     *\n ....\n 3291     * @category Arrays\n 3292     * @param {Array} [array1, array2, ...] Arrays to process.\n 3293:    * @returns {Array} Returns a new array of unique elements that are present\n 3294     *  in **all** of the arrays.\n 3295     * @example\n ....\n 3486     * @param {Number} end The end of the range.\n 3487     * @param {Number} [step=1] The value to increment or descrement by.\n 3488:    * @returns {Array} Returns a new range array.\n 3489     * @example\n 3490     *\n ....\n 3671     * @category Arrays\n 3672     * @param {Array} [array1, array2, ...] Arrays to process.\n 3673:    * @returns {Array} Returns a new array of unique values, in order, that are\n 3674     *  present in one or more of the arrays.\n 3675     * @example\n ....\n 3778     * @param {Array} array The array to filter.\n 3779     * @param {Mixed} [value1, value2, ...] Values to remove.\n 3780:    * @returns {Array} Returns a new filtered array.\n 3781     * @example\n 3782     *\n ....\n 3809     * @category Arrays\n 3810     * @param {Array} [array1, array2, ...] Arrays to process.\n 3811:    * @returns {Array} Returns a new array of grouped elements.\n 3812     * @example\n 3813     *\n ....\n 3839     * it is executed.\n 3840     * @param {Function} func The function to restrict.\n 3841:    * @returns {Function} Returns the new restricted function.\n 3842     * @example\n 3843     *\n ....\n 3870     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 3871     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3872:    * @returns {Function} Returns the new bound function.\n 3873     * @example\n 3874     *\n ....\n 3937     * @param {String} key The key of the method.\n 3938     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3939:    * @returns {Function} Returns the new bound function.\n 3940     * @example\n 3941     *\n ....\n 3972     * @category Functions\n 3973     * @param {Function} [func1, func2, ...] Functions to compose.\n 3974:    * @returns {Function} Returns the new composed function.\n 3975     * @example\n 3976     *\n ....\n 4008     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 4009     *  edge of the timeout.\n 4010:    * @returns {Function} Returns the new debounced function.\n 4011     * @example\n 4012     *\n ....\n 4099     * @param {Function} func The function to have its output memoized.\n 4100     * @param {Function} [resolver] A function used to resolve the cache key.\n 4101:    * @returns {Function} Returns the new memoizing function.\n 4102     * @example\n 4103     *\n ....\n 4125     * @category Functions\n 4126     * @param {Function} func The function to restrict.\n 4127:    * @returns {Function} Returns the new restricted function.\n 4128     * @example\n 4129     *\n ....\n 4152    /**\n 4153     * Creates a function that, when called, invokes `func` with any additional\n 4154:    * `partial` arguments prepended to those passed to the new function. This\n 4155     * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n 4156     *\n ....\n 4160     * @param {Function} func The function to partially apply arguments to.\n 4161     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4162:    * @returns {Function} Returns the new partially applied function.\n 4163     * @example\n 4164     *\n ....\n 4174    /**\n 4175     * This method is similar to `_.partial`, except that `partial` arguments are\n 4176:    * appended to those passed to the new function.\n 4177     *\n 4178     * @static\n ....\n 4181     * @param {Function} func The function to partially apply arguments to.\n 4182     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4183:    * @returns {Function} Returns the new partially applied function.\n 4184     * @example\n 4185     *\n ....\n 4215     * @param {Function} func The function to throttle.\n 4216     * @param {Number} wait The number of milliseconds to throttle executions to.\n 4217:    * @returns {Function} Returns the new throttled function.\n 4218     * @example\n 4219     *\n ....\n 4229  \n 4230      function trailingCall() {\n 4231:       lastCalled = new Date;\n 4232        timeoutId = null;\n 4233        result = func.apply(thisArg, args);\n 4234      }\n 4235      return function() {\n 4236:       var now = new Date,\n 4237            remaining = wait - (now - lastCalled);\n 4238  \n ....\n 4264     * @param {Mixed} value The value to wrap.\n 4265     * @param {Function} wrapper The wrapper function.\n 4266:    * @returns {Function} Returns the new function.\n 4267     * @example\n 4268     *\n ....\n 4349          var args = [this.__wrapped__];\n 4350          push.apply(args, arguments);\n 4351:         return new lodash(func.apply(lodash, args));\n 4352        };\n 4353      });\n ....\n 4629     * @param {Function} callback The function called per iteration.\n 4630     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 4631:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 4632     * @example\n 4633     *\n ....\n 4903          return callback == null || (thisArg && typeof callback != 'function')\n 4904            ? result\n 4905:           : new lodash(result);\n 4906        };\n 4907      }\n ....\n 4941    });\n 4942  \n 4943:   // add `Array` functions that return new wrapped values\n 4944    each(['concat', 'slice', 'splice'], function(methodName) {\n 4945      var func = arrayRef[methodName];\n 4946      lodash.prototype[methodName] = function() {\n 4947:       return new lodash(func.apply(this.__wrapped__, arguments));\n 4948      };\n 4949    });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.min.js:\n    5   * Underscore.js 1.4.4 underscorejs.org/LICENSE\n    6   */\n    7: ;(function(n,t){function r(n){if(!n||typeof n!=\"object\")return W;var t=n.valueOf,r=typeof t==\"function\"&&(r=bt(t))&&bt(r);if(r)n=n==r||bt(n)==r&&!h(n);else{var e=W;!n||typeof n!=\"object\"||h(n)?n=e:(t=n.constructor,!j(t)||t instanceof t?(Yt(n,function(n,t){e=t}),n=e===W||jt.call(n,e)):n=e)}return n}function e(n){return n&&typeof n==\"object\"&&n.__wrapped__?n:this instanceof e?(this.__wrapped__=n,void 0):new e(n)}function u(n,t,r){t||(t=0);var e=n.length,u=e-t>=(r||ut);if(u){var o={};for(r=t-1;++r<e;){var i=n[r]+\"\";\n    8: (jt.call(o,i)?o[i]:o[i]=[]).push(n[r])}}return function(r){if(u){var e=r+\"\";return jt.call(o,e)&&-1<z(o[e],r)}return-1<z(n,r,t)}}function o(n){return n.charCodeAt(0)}function i(n,t){var r=n.b,e=t.b;if(n=n.a,t=t.a,n!==t){if(n>t||typeof n==\"undefined\")return 1;if(n<t||typeof t==\"undefined\")return-1}return r<e?-1:1}function f(n,t,r,e){function u(){var a=arguments,c=i?this:t;return o||(n=t[f]),r.length&&(a=a.length?(a=v(a),e?a.concat(r):r.concat(a)):r),this instanceof u?(s.prototype=n.prototype,c=new s,s.prototype=Q,a=n.apply(c,a),w(a)?a:c):n.apply(c,a)\n    9  }var o=j(n),i=!r,f=t;return i&&(r=t),o||(t=n),u}function a(n,t,r){if(n==Q)return G;var e=typeof n;if(\"function\"!=e){if(\"object\"!=e)return function(t){return t[n]};var u=tr(n);return function(t){for(var r=u.length,e=W;r--&&(e=b(t[u[r]],n[u[r]],et)););return e}}return typeof t!=\"undefined\"?1===r?function(r){return n.call(t,r)}:2===r?function(r,e){return n.call(t,r,e)}:4===r?function(r,e,u,o){return n.call(t,r,e,u,o)}:function(r,e,u){return n.call(t,r,e,u)}:n}function c(){for(var n,t={g:Ut,b:\"l(n)\",c:\"\",h:\"\",l:\"\",m:L},r=0;n=arguments[r];r++)for(var e in n)t[e]=n[e];\n   10  return n=t.a,t.d=/^[^,]+/.exec(n)[0],r=\"var j,n=\"+t.d+\",u=n;if(!n)return u;\"+t.l+\";\",t.b&&(r+=\"var o=n.length;j=-1;if(\"+t.b+\"){while(++j<o){\"+t.h+\"}}else{\"),t.g&&t.m?r+=\"var s=-1,t=r[typeof n]?p(n):[],o=t.length;while(++s<o){j=t[s];\"+t.h+\"}\":(r+=\"for(j in n){\",t.m&&(r+=\"if(\",t.m&&(r+=\"i.call(n,j)\"),r+=\"){\"),r+=t.h+\";\",t.m&&(r+=\"}\"),r+=\"}\"),t.b&&(r+=\"}\"),r+=t.c+\";return u\",Function(\"f,i,k,l,m,r,p\",\"return function(\"+n+\"){\"+r+\"}\")(a,jt,h,nr,A,Ht,kt)}function l(n){return\"\\\\\"+Jt[n]}function p(n){return rr[n]\n   11  }function s(){}function v(n,t,r){t||(t=0),typeof r==\"undefined\"&&(r=n?n.length:0);var e=-1;r=r-t||0;for(var u=Array(0>r?0:r);++e<r;)u[e]=n[t+e];return u}function g(n){return er[n]}function h(n){return xt.call(n)==Ft}function y(n){var t=[];return Zt(n,function(n,r){t.push(r)}),t}function m(n,r,e,u,o,i){var f=n;if(typeof r==\"function\"&&(u=e,e=r,r=W),typeof e==\"function\"){e=typeof u==\"undefined\"?e:a(e,u,1);var f=e(f),c=typeof f!=\"undefined\";c||(f=n)}if(u=w(f)){var l=xt.call(f);if(!Vt[l])return f;var p=nr(f)\n   12: }if(!u||!r)return u&&!c?p?v(f):ur({},f):f;switch(u=Gt[l],l){case Dt:case It:return c?f:new u(+f);case Tt:case zt:return c?f:new u(f);case Mt:return c?f:u(f.source,lt.exec(f))}for(o||(o=[]),i||(i=[]),l=o.length;l--;)if(o[l]==n)return i[l];return c||(f=p?u(f.length):{},p&&(jt.call(n,\"index\")&&(f.index=n.index),jt.call(n,\"input\")&&(f.input=n.input))),o.push(n),i.push(f),(p?$:Zt)(c?f:n,function(n,u){f[u]=m(n,r,e,t,o,i)}),f}function d(n){var t=[];return Yt(n,function(n,r){j(n)&&t.push(r)}),t.sort()}function _(n){for(var t=-1,r=tr(n),e=r.length,u={};++t<e;){var o=r[t];\n   13  u[n[o]]=o}return u}function b(n,t,r,e,u,o){var i=r===et;if(r&&!i){r=typeof e==\"undefined\"?r:a(r,e,2);var f=r(n,t);if(typeof f!=\"undefined\")return!!f}if(n===t)return 0!==n||1/n==1/t;var c=typeof n,l=typeof t;if(n===n&&(!n||\"function\"!=c&&\"object\"!=c)&&(!t||\"function\"!=l&&\"object\"!=l))return W;if(n==Q||t==Q)return n===t;if(l=xt.call(n),c=xt.call(t),l==Ft&&(l=Bt),c==Ft&&(c=Bt),l!=c)return W;switch(l){case Dt:case It:return+n==+t;case Tt:return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case Mt:case zt:return n==t+\"\"\n   14  }if(c=l==qt,!c){if(n.__wrapped__||t.__wrapped__)return b(n.__wrapped__||n,t.__wrapped__||t,r,e,u,o);if(l!=Bt)return W;var l=n.constructor,p=t.constructor;if(l!=p&&(!j(l)||!(l instanceof l&&j(p)&&p instanceof p)))return W}for(u||(u=[]),o||(o=[]),l=u.length;l--;)if(u[l]==n)return o[l]==t;var s=0,f=L;if(u.push(n),o.push(t),c){if(l=n.length,s=t.length,f=s==n.length,!f&&!i)return f;for(;s--;)if(c=l,p=t[s],i)for(;c--&&!(f=b(n[c],p,r,e,u,o)););else if(!(f=b(n[s],p,r,e,u,o)))break;return f}return Yt(t,function(t,i,a){return jt.call(a,i)?(s++,f=jt.call(n,i)&&b(n[i],t,r,e,u,o)):void 0\n   ..\n   20  return v(n,0,Rt(Nt(0,e),u))}}function M(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var o=n[r];nr(o)?wt.apply(u,t?o:M(o)):u.push(o)}return u}function z(n,t,r){var e=-1,u=n?n.length:0;if(typeof r==\"number\")e=(0>r?Nt(0,u+r):r||0)-1;else if(r)return e=C(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function P(n,t,r){if(typeof t!=\"number\"&&t!=Q){var e=0,u=-1,o=n?n.length:0;for(t=a(t,r);++u<o&&t(n[u],u,n);)e++}else e=t==Q||r?1:Nt(0,t);return v(n,e)}function C(n,t,r,e){var u=0,o=n?n.length:u;\n   21  for(r=r?a(r,e,1):G,t=r(t);u<o;)e=u+o>>>1,r(n[e])<t?u=e+1:o=e;return u}function K(n,t,r,e){var u=-1,o=n?n.length:0,i=[],f=i;typeof t==\"function\"&&(e=r,r=t,t=W);var c=!t&&75<=o;if(c)var l={};for(r&&(f=[],r=a(r,e));++u<o;){e=n[u];var p=r?r(e,u,n):e;if(c)var s=p+\"\",s=jt.call(l,s)?!(f=l[s]):f=l[s]=[];(t?!u||f[f.length-1]!==p:s||0>z(f,p))&&((r||c)&&f.push(p),i.push(e))}return i}function U(n,t){return Kt||At&&2<arguments.length?At.call.apply(At,arguments):f(n,t,v(arguments,2))}function V(n){var r=v(arguments,1);\n   22: return setTimeout(function(){n.apply(t,r)},1)}function G(n){return n}function H(n){$(d(n),function(t){var r=e[t]=n[t];e.prototype[t]=function(){var n=[this.__wrapped__];return wt.apply(n,arguments),new e(r.apply(e,n))}})}function J(){return this.__wrapped__}var L=!0,Q=null,W=!1,X=typeof exports==\"object\"&&exports,Y=typeof module==\"object\"&&module&&module.exports==X&&module,Z=typeof global==\"object\"&&global;Z.global===Z&&(n=Z);var nt=[],tt={},rt=0,et=tt,ut=30,ot=n._,it=/&(?:amp|lt|gt|quot|#39);/g,ft=/\\b__p\\+='';/g,at=/\\b(__p\\+=)''\\+/g,ct=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,lt=/\\w*$/,pt=RegExp(\"^\"+(tt.valueOf+\"\").replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),st=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,vt=/<%=([\\s\\S]+?)%>/g,gt=/($^)/,ht=/[&<>\"']/g,yt=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,mt=Math.ceil,dt=nt.concat,_t=Math.floor,bt=pt.test(bt=Object.getPrototypeOf)&&bt,jt=tt.hasOwnProperty,wt=nt.push,xt=tt.toString,At=pt.test(At=v.bind)&&At,Ot=pt.test(Ot=Array.isArray)&&Ot,Et=n.isFinite,St=n.isNaN,kt=pt.test(kt=Object.keys)&&kt,Nt=Math.max,Rt=Math.min,$t=Math.random,Ft=\"[object Arguments]\",qt=\"[object Array]\",Dt=\"[object Boolean]\",It=\"[object Date]\",Tt=\"[object Number]\",Bt=\"[object Object]\",Mt=\"[object RegExp]\",zt=\"[object String]\",Pt=!!n.attachEvent,Ct=At&&!/\\n|true/.test(At+Pt),Kt=At&&!Ct,Ut=kt&&(Pt||Ct),Vt={\"[object Function]\":W};\n   23  Vt[Ft]=Vt[qt]=Vt[Dt]=Vt[It]=Vt[Tt]=Vt[Bt]=Vt[Mt]=Vt[zt]=L;var Gt={};Gt[qt]=Array,Gt[Dt]=Boolean,Gt[It]=Date,Gt[Bt]=Object,Gt[Tt]=Number,Gt[Mt]=RegExp,Gt[zt]=String;var Ht={\"boolean\":W,\"function\":L,object:L,number:W,string:W,undefined:W},Jt={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};e.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:vt,variable:\"\",imports:{_:e}};var Lt={a:\"q,w,h\",l:\"var a=arguments,b=0,c=typeof h=='number'?2:a.length;while(++b<c){n=a[b];if(n&&r[typeof n]){\",h:\"if(typeof u[j]=='undefined')u[j]=n[j]\",c:\"}}\"},Qt={a:\"e,d,x\",l:\"d=d&&typeof x=='undefined'?d:f(d,x)\",b:\"typeof o=='number'\",h:\"if(d(n[j],j,e)===false)return u\"},Wt={l:\"if(!r[typeof n])return u;\"+Qt.l,b:W},Xt=c(Qt),Yt=c(Qt,Wt,{m:W}),Zt=c(Qt,Wt),nr=Ot||function(n){return n instanceof Array||xt.call(n)==qt\n   24  },tr=kt?function(n){return w(n)?kt(n):[]}:y,rr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},er=_(rr),ur=c(Lt,{l:Lt.l.replace(\";\",\";if(c>3&&typeof a[c-2]=='function'){var d=f(a[--c-1],a[c--],2);}else if(c>2&&typeof a[c-1]=='function'){d=a[--c];}\"),h:\"u[j]=d?d(u[j],n[j]):n[j]\"}),or=c(Lt);j(/x/)&&(j=function(n){return n instanceof Function||\"[object Function]\"==xt.call(n)}),Ct&&Y&&typeof setImmediate==\"function\"&&(V=U(setImmediate,n)),e.after=function(n,t){return 1>n?t():function(){return 1>--n?t.apply(this,arguments):void 0\n   ..\n   30  }),u},e.once=function(n){var t,r;return function(){return t?r:(t=L,r=n.apply(this,arguments),n=Q,r)}},e.pairs=function(n){for(var t=-1,r=tr(n),e=r.length,u=Array(e);++t<e;){var o=r[t];u[t]=[o,n[o]]}return u},e.partial=function(n){return f(n,v(arguments,1))},e.partialRight=function(n){return f(n,v(arguments,1),Q,et)},e.pick=function(n,t,r){var e={};if(typeof t!=\"function\")for(var u=0,o=dt.apply(nt,arguments),i=w(n)?o.length:0;++u<i;){var f=o[u];f in n&&(e[f]=n[f])}else t=a(t,r),Yt(n,function(n,r,u){t(n,r,u)&&(e[r]=n)\n   31  });return e},e.pluck=F,e.range=function(n,t,r){n=+n||0,r=+r||1,t==Q&&(t=n,n=0);var e=-1;t=Nt(0,mt((t-n)/r));for(var u=Array(t);++e<t;)u[e]=n,n+=r;return u},e.reject=function(n,t,r){return t=a(t,r),N(n,function(n,r,e){return!t(n,r,e)})},e.rest=P,e.shuffle=function(n){var t=-1,r=n?n.length:0,e=Array(typeof r==\"number\"?r:0);return $(n,function(n){var r=_t($t()*(++t+1));e[t]=e[r],e[r]=n}),e},e.sortBy=function(n,t,r){var e=-1,u=n?n.length:0,o=Array(typeof u==\"number\"?u:0);for(t=a(t,r),$(n,function(n,r,u){o[++e]={a:t(n,r,u),b:e,c:n}\n   32: }),u=o.length,o.sort(i);u--;)o[u]=o[u].c;return o},e.tap=function(n,t){return t(n),n},e.throttle=function(n,t){function r(){f=new Date,i=Q,u=n.apply(o,e)}var e,u,o,i,f=0;return function(){var a=new Date,c=t-(a-f);return e=arguments,o=this,0<c?i||(i=setTimeout(r,c)):(clearTimeout(i),i=Q,f=a,u=n.apply(o,e)),u}},e.times=function(n,t,r){n=+n||0;for(var e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);return u},e.toArray=function(n){return n&&typeof n.length==\"number\"?v(n):E(n)},e.union=function(){return K(dt.apply(nt,arguments))\n   33  },e.uniq=K,e.values=E,e.where=N,e.without=function(n){for(var t=-1,r=n?n.length:0,e=u(arguments,1),o=[];++t<r;){var i=n[t];e(i)||o.push(i)}return o},e.wrap=function(n,t){return function(){var r=[n];return wt.apply(r,arguments),t.apply(this,r)}},e.zip=function(n){for(var t=-1,r=n?q(F(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=F(arguments,t);return e},e.collect=F,e.drop=P,e.each=$,e.extend=ur,e.methods=d,e.select=N,e.tail=P,e.unique=K,H(e),e.clone=m,e.cloneDeep=function(n,t,r){return m(n,L,t,r)},e.contains=S,e.escape=function(n){return n==Q?\"\":(n+\"\").replace(ht,p)\n   34  },e.every=k,e.find=R,e.has=function(n,t){return n?jt.call(n,t):W},e.identity=G,e.indexOf=z,e.isArguments=h,e.isArray=nr,e.isBoolean=function(n){return n===L||n===W||xt.call(n)==Dt},e.isDate=function(n){return n instanceof Date||xt.call(n)==It},e.isElement=function(n){return n?1===n.nodeType:W},e.isEmpty=function(n){var t=L;if(!n)return t;var r=xt.call(n),e=n.length;return r==qt||r==zt||r==Ft||r==Bt&&typeof e==\"number\"&&j(n.splice)?!e:(Zt(n,function(){return t=W}),t)},e.isEqual=b,e.isFinite=function(n){return Et(n)&&!St(parseFloat(n))\n   ..\n   37  }),p+=\"';\\n\",c=u=u.variable,c||(u=\"obj\",p=\"with(\"+u+\"){\"+p+\"}\"),p=(i?p.replace(ft,\"\"):p).replace(at,\"$1\").replace(ct,\"$1;\"),p=\"function(\"+u+\"){\"+(c?\"\":u+\"||(\"+u+\"={});\")+\"var __t,__p='',__e=_.escape\"+(i?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+p+\"return __p}\";try{var s=Function(o,\"return \"+p).apply(t,f)}catch(v){throw v.source=p,v}return r?s(r):(s.source=p,s)},e.unescape=function(n){return n==Q?\"\":(n+\"\").replace(it,g)},e.uniqueId=function(n){var t=++rt;return(n==Q?\"\":n+\"\")+t\n   38  },e.all=k,e.any=T,e.detect=R,e.foldl=D,e.foldr=I,e.include=S,e.inject=D,Zt(e,function(n,t){e.prototype[t]||(e.prototype[t]=function(){var t=[this.__wrapped__];return wt.apply(t,arguments),n.apply(e,t)})}),e.first=B,e.last=function(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=Q){var o=u;for(t=a(t,r);o--&&t(n[o],o,n);)e++}else if(e=t,e==Q||r)return n[u-1];return v(n,Nt(0,u-e))}},e.take=B,e.head=B,Zt(e,function(n,t){e.prototype[t]||(e.prototype[t]=function(t,r){var u=n(this.__wrapped__,t,r);\n   39: return t==Q||r&&typeof t!=\"function\"?u:new e(u)})}),e.VERSION=\"1.0.1\",e.prototype.toString=function(){return this.__wrapped__+\"\"},e.prototype.value=J,e.prototype.valueOf=J,Xt([\"join\",\"pop\",\"shift\"],function(n){var t=nt[n];e.prototype[n]=function(){return t.apply(this.__wrapped__,arguments)}}),Xt([\"push\",\"reverse\",\"sort\",\"unshift\"],function(n){var t=nt[n];e.prototype[n]=function(){return t.apply(this.__wrapped__,arguments),this}}),Xt([\"concat\",\"slice\",\"splice\"],function(n){var t=nt[n];e.prototype[n]=function(){return new e(t.apply(this.__wrapped__,arguments))\n   40  }}),typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?(n._=e,define(function(){return e})):X?Y?(Y.exports=e)._=e:X._=e:n._=e})(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.underscore.js:\n  189        return value;\n  190      }\n  191:     // allow invoking `lodash` without the `new` operator\n  192      if (!(this instanceof lodash)) {\n  193:       return new lodash(value);\n  194      }\n  195      this.__wrapped__ = value;\n  ...\n  293     * @param {Array} partialArgs An array of arguments to be partially applied.\n  294     * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n  295:    * @returns {Function} Returns the new bound function.\n  296     */\n  297    function createBound(func, thisArg, partialArgs, rightIndicator) {\n  ...\n  323        }\n  324        if (this instanceof bound) {\n  325:         // ensure `new bound` is an instance of `bound` and `func`\n  326          noop.prototype = func.prototype;\n  327:         thisBinding = new noop;\n  328          noop.prototype = null;\n  329  \n  ...\n  485     * @param {Number} start The start index.\n  486     * @param {Number} end The end index.\n  487:    * @returns {Array} Returns the new array.\n  488     */\n  489    function slice(array, start, end) {\n  ...\n  565     * };\n  566     *\n  567:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  568     *   alert(key);\n  569     * });\n  ...\n  646     * @category Objects\n  647     * @param {Object} object The object to inspect.\n  648:    * @returns {Array} Returns a new array of property names.\n  649     * @example\n  650     *\n  ...\n  695     * @private\n  696     * @param {Object} object The object to inspect.\n  697:    * @returns {Array} Returns a new array of property names.\n  698     */\n  699    function shimKeys(object) {\n  ...\n  865     * @category Objects\n  866     * @param {Object} object The object to inspect.\n  867:    * @returns {Array} Returns a new array of property names that have function values.\n  868     * @example\n  869     *\n  ...\n  953     * @example\n  954     *\n  955:    * _.isDate(new Date);\n  956     * // => true\n  957     */\n  ...\n 1208    /**\n 1209     * Checks if `value` is the language type of Object.\n 1210:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1211     *\n 1212     * @static\n ....\n 1250     * // => true\n 1251     *\n 1252:    * _.isNaN(new Number(NaN));\n 1253     * // => true\n 1254     *\n ....\n 1399     * @category Objects\n 1400     * @param {Object} object The object to inspect.\n 1401:    * @returns {Array} Returns new array of key-value pairs.\n 1402     * @example\n 1403     *\n ....\n 1465     * @category Objects\n 1466     * @param {Object} object The object to inspect.\n 1467:    * @returns {Array} Returns a new array of property values.\n 1468     * @example\n 1469     *\n ....\n 1652     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 1653     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1654:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 1655     * @example\n 1656     *\n ....\n 1850     *  the function invoked per iteration.\n 1851     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 1852:    * @returns {Array} Returns a new array of the results of each invoked method.\n 1853     * @example\n 1854     *\n ....\n 1893     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 1894     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1895:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 1896     * @example\n 1897     *\n ....\n 2072     * @param {Array|Object|String} collection The collection to iterate over.\n 2073     * @param {String} property The property to pluck.\n 2074:    * @returns {Array} Returns a new array of property values.\n 2075     * @example\n 2076     *\n ....\n 2196     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2197     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2198:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 2199     *  callback check.\n 2200     * @example\n ....\n 2231     * @category Collections\n 2232     * @param {Array|Object|String} collection The collection to shuffle.\n 2233:    * @returns {Array} Returns a new shuffled collection.\n 2234     * @example\n 2235     *\n ....\n 2360     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2361     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2362:    * @returns {Array} Returns a new array of sorted elements.\n 2363     * @example\n 2364     *\n ....\n 2402     * @category Collections\n 2403     * @param {Array|Object|String} collection The collection to convert.\n 2404:    * @returns {Array} Returns the new converted array.\n 2405     * @example\n 2406     *\n ....\n 2427     * @param {Array|Object|String} collection The collection to iterate over.\n 2428     * @param {Object} properties The object of property values to filter by.\n 2429:    * @returns {Array} Returns a new array of elements that have the given `properties`.\n 2430     * @example\n 2431     *\n ....\n 2454     * @category Arrays\n 2455     * @param {Array} array The array to compact.\n 2456:    * @returns {Array} Returns a new filtered array.\n 2457     * @example\n 2458     *\n ....\n 2483     * @param {Array} array The array to process.\n 2484     * @param {Array} [array1, array2, ...] Arrays to check.\n 2485:    * @returns {Array} Returns a new array of `array` elements not present in the\n 2486     *  other arrays.\n 2487     * @example\n ....\n 2591     * @param {Array} array The array to compact.\n 2592     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 2593:    * @returns {Array} Returns a new flattened array.\n 2594     * @example\n 2595     *\n ....\n 2743     * @category Arrays\n 2744     * @param {Array} [array1, array2, ...] Arrays to process.\n 2745:    * @returns {Array} Returns a new array of unique elements that are present\n 2746     *  in **all** of the arrays.\n 2747     * @example\n ....\n 2926     * @param {Number} end The end of the range.\n 2927     * @param {Number} [step=1] The value to increment or descrement by.\n 2928:    * @returns {Array} Returns a new range array.\n 2929     * @example\n 2930     *\n ....\n 3111     * @category Arrays\n 3112     * @param {Array} [array1, array2, ...] Arrays to process.\n 3113:    * @returns {Array} Returns a new array of unique values, in order, that are\n 3114     *  present in one or more of the arrays.\n 3115     * @example\n ....\n 3206     * @param {Array} array The array to filter.\n 3207     * @param {Mixed} [value1, value2, ...] Values to remove.\n 3208:    * @returns {Array} Returns a new filtered array.\n 3209     * @example\n 3210     *\n ....\n 3236     * @category Arrays\n 3237     * @param {Array} [array1, array2, ...] Arrays to process.\n 3238:    * @returns {Array} Returns a new array of grouped elements.\n 3239     * @example\n 3240     *\n ....\n 3266     * it is executed.\n 3267     * @param {Function} func The function to restrict.\n 3268:    * @returns {Function} Returns the new restricted function.\n 3269     * @example\n 3270     *\n ....\n 3297     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 3298     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3299:    * @returns {Function} Returns the new bound function.\n 3300     * @example\n 3301     *\n ....\n 3361     * @category Functions\n 3362     * @param {Function} [func1, func2, ...] Functions to compose.\n 3363:    * @returns {Function} Returns the new composed function.\n 3364     * @example\n 3365     *\n ....\n 3397     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 3398     *  edge of the timeout.\n 3399:    * @returns {Function} Returns the new debounced function.\n 3400     * @example\n 3401     *\n ....\n 3488     * @param {Function} func The function to have its output memoized.\n 3489     * @param {Function} [resolver] A function used to resolve the cache key.\n 3490:    * @returns {Function} Returns the new memoizing function.\n 3491     * @example\n 3492     *\n ....\n 3514     * @category Functions\n 3515     * @param {Function} func The function to restrict.\n 3516:    * @returns {Function} Returns the new restricted function.\n 3517     * @example\n 3518     *\n ....\n 3541    /**\n 3542     * Creates a function that, when called, invokes `func` with any additional\n 3543:    * `partial` arguments prepended to those passed to the new function. This\n 3544     * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n 3545     *\n ....\n 3549     * @param {Function} func The function to partially apply arguments to.\n 3550     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3551:    * @returns {Function} Returns the new partially applied function.\n 3552     * @example\n 3553     *\n ....\n 3573     * @param {Function} func The function to throttle.\n 3574     * @param {Number} wait The number of milliseconds to throttle executions to.\n 3575:    * @returns {Function} Returns the new throttled function.\n 3576     * @example\n 3577     *\n ....\n 3587  \n 3588      function trailingCall() {\n 3589:       lastCalled = new Date;\n 3590        timeoutId = null;\n 3591        result = func.apply(thisArg, args);\n 3592      }\n 3593      return function() {\n 3594:       var now = new Date,\n 3595            remaining = wait - (now - lastCalled);\n 3596  \n ....\n 3622     * @param {Mixed} value The value to wrap.\n 3623     * @param {Function} wrapper The wrapper function.\n 3624:    * @returns {Function} Returns the new function.\n 3625     * @example\n 3626     *\n ....\n 3710          var result = func.apply(lodash, args);\n 3711          if (this.__chain__) {\n 3712:           result = new lodash(result);\n 3713            result.__chain__ = true;\n 3714          }\n ....\n 3943     * @param {Function} callback The function called per iteration.\n 3944     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 3945:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 3946     * @example\n 3947     *\n ....\n 4031     */\n 4032    function chain(value) {\n 4033:     value = new lodash(value);\n 4034      value.__chain__ = true;\n 4035      return value;\n ....\n 4282  \n 4283        if (this.__chain__) {\n 4284:         result = new lodash(result);\n 4285          result.__chain__ = true;\n 4286        }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.underscore.min.js:\n    5   * Underscore.js 1.4.4 underscorejs.org/LICENSE\n    6   */\n    7: ;(function(n,t){function r(n,t){var r;if(n&&qt[typeof n])for(r in t||(t=G),n)if(t(n[r],r,n)===tt)break}function e(n,t,r){if(n){t=t&&typeof r==\"undefined\"?t:a(t,r);var e=n.length;if(r=-1,typeof e==\"number\")for(;++r<e&&t(n[r],r,n)!==tt;);else for(r in n)if(pt.call(n,r)&&t(n[r],r,n)===tt)break}}function u(n){return n&&typeof n==\"object\"&&n.__wrapped__?n:this instanceof u?(this.__wrapped__=n,void 0):new u(n)}function o(n,t){var r=n.b,e=t.b;if(n=n.a,t=t.a,n!==t){if(n>t||typeof n==\"undefined\")return 1;if(n<t||typeof t==\"undefined\")return-1\n    8: }return r<e?-1:1}function i(n,t,r){function e(){var a=arguments,f=o?this:t;return u||(n=t[i]),r.length&&(a=a.length?(a=p(a),r.concat(a)):r),this instanceof e?(l.prototype=n.prototype,f=new l,l.prototype=K,a=n.apply(f,a),w(a)?a:f):n.apply(f,a)}var u=j(n),o=!r,i=t;return o&&(r=t),u||(t=n),e}function a(n,t,r){if(n==K)return G;var e=typeof n;if(\"function\"!=e){if(\"object\"!=e)return function(t){return t[n]};var u=Dt(n);return function(t){for(var r=u.length,e=L;r--&&(e=t[u[r]]===n[u[r]]););return e}}return typeof t!=\"undefined\"?1===r?function(r){return n.call(t,r)\n    9  }:2===r?function(r,e){return n.call(t,r,e)}:4===r?function(r,e,u,o){return n.call(t,r,e,u,o)}:function(r,e,u){return n.call(t,r,e,u)}:n}function f(n){return\"\\\\\"+It[n]}function c(n){return Mt[n]}function l(){}function p(n,t,r){t||(t=0),typeof r==\"undefined\"&&(r=n?n.length:0);var e=-1;r=r-t||0;for(var u=Array(0>r?0:r);++e<r;)u[e]=n[t+e];return u}function s(n){return $t[n]}function v(n){return vt.call(n)==wt}function h(n){var t,r=[],e=function(n,t){r.push(t)};if(n&&qt[typeof n])for(t in e||(e=G),n)if(pt.call(n,t)&&e(n[t],t,n)===tt)break;\n   10  return r}function g(n){if(!n)return n;for(var t=1,r=arguments.length;t<r;t++){var e=arguments[t];if(e)for(var u in e)n[u]=e[u]}return n}function y(n){if(!n)return n;for(var t=1,r=arguments.length;t<r;t++){var e=arguments[t];if(e)for(var u in e)n[u]==K&&(n[u]=e[u])}return n}function m(n){var t=[];return r(n,function(n,r){j(n)&&t.push(r)}),t.sort()}function _(n){for(var t=-1,r=Dt(n),e=r.length,u={};++t<e;){var o=r[t];u[n[o]]=o}return u}function d(n){if(!n)return J;if(Bt(n)||x(n))return!n.length;for(var t in n)if(pt.call(n,t))return L;\n   ..\n   16  if(t=a(t,r),Bt(n)){r=-1;for(var o=n.length;++r<o&&!(u=t(n[r],r,n)););}else e(n,function(n,r,e){return(u=t(n,r,e))&&tt});return!!u}function D(n,t,r){return r&&d(t)?K:(r?k:N)(n,t)}function M(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=K){var o=-1;for(t=a(t,r);++o<u&&t(n[o],o,n);)e++}else if(e=t,e==K||r)return n[0];return p(n,0,bt(dt(0,e),u))}}function $(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var o=n[r];Bt(o)?st.apply(u,t?o:$(o)):u.push(o)}return u}function z(n,t,r){var e=-1,u=n?n.length:0;\n   17  if(typeof r==\"number\")e=(0>r?dt(0,u+r):r||0)-1;else if(r)return e=P(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function C(n,t,r){if(typeof t!=\"number\"&&t!=K){var e=0,u=-1,o=n?n.length:0;for(t=a(t,r);++u<o&&t(n[u],u,n);)e++}else e=t==K||r?1:dt(0,t);return p(n,e)}function P(n,t,r,e){var u=0,o=n?n.length:u;for(r=r?a(r,e,1):G,t=r(t);u<o;)e=u+o>>>1,r(n[e])<t?u=e+1:o=e;return u}function U(n,t,r,e){var u=-1,o=n?n.length:0,i=[],f=i;for(typeof t==\"function\"&&(e=r,r=t,t=L),r&&(f=[],r=a(r,e));++u<o;){e=n[u];\n   18: var c=r?r(e,u,n):e;(t?!u||f[f.length-1]!==c:0>z(f,c))&&(r&&f.push(c),i.push(e))}return i}function V(n,t){return Ft||ht&&2<arguments.length?ht.call.apply(ht,arguments):i(n,t,p(arguments,2))}function W(n){var r=p(arguments,1);return setTimeout(function(){n.apply(t,r)},1)}function G(n){return n}function H(n){F(m(n),function(t){var r=u[t]=n[t];u.prototype[t]=function(){var n=[this.__wrapped__];return st.apply(n,arguments),n=r.apply(u,n),this.__chain__&&(n=new u(n),n.__chain__=J),n}})}var J=!0,K=null,L=!1,Q=typeof exports==\"object\"&&exports,X=typeof module==\"object\"&&module&&module.exports==Q&&module,Y=typeof global==\"object\"&&global;\n   19  Y.global===Y&&(n=Y);var Z=[],Y={},nt=0,tt=Y,rt=n._,et=/&(?:amp|lt|gt|quot|#39);/g,ut=RegExp(\"^\"+(Y.valueOf+\"\").replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),ot=/($^)/,it=/[&<>\"']/g,at=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,ft=Math.ceil,ct=Z.concat,lt=Math.floor,pt=Y.hasOwnProperty,st=Z.push,vt=Y.toString,ht=ut.test(ht=p.bind)&&ht,gt=ut.test(gt=Array.isArray)&&gt,yt=n.isFinite,mt=n.isNaN,_t=ut.test(_t=Object.keys)&&_t,dt=Math.max,bt=Math.min,jt=Math.random,wt=\"[object Arguments]\",At=\"[object Array]\",xt=\"[object Boolean]\",Et=\"[object Date]\",Ot=\"[object Number]\",St=\"[object Object]\",Nt=\"[object RegExp]\",kt=\"[object String]\",Y=!!n.attachEvent,Y=ht&&!/\\n|true/.test(ht+Y),Ft=ht&&!Y,Rt=(Rt={0:1,length:1},Z.splice.call(Rt,0,1),Rt[0]),Tt=arguments.constructor==Object,qt={\"boolean\":L,\"function\":J,object:J,number:L,string:L,undefined:L},It={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};\n   20  u.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,variable:\"\"},v(arguments)||(v=function(n){return n?pt.call(n,\"callee\"):L});var Bt=gt||function(n){return Tt&&n instanceof Array||vt.call(n)==At},Dt=_t?function(n){return w(n)?_t(n):[]}:h,Mt={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},$t=_(Mt);j(/x/)&&(j=function(n){return n instanceof Function||\"[object Function]\"==vt.call(n)});var zt=R;Y&&X&&typeof setImmediate==\"function\"&&(W=V(setImmediate,n)),u.after=function(n,t){return 1>n?t():function(){return 1>--n?t.apply(this,arguments):void 0\n   ..\n   25  }return u},u.omit=function(n){var t=ct.apply(Z,arguments),e={};return r(n,function(n,r){0>z(t,r,1)&&(e[r]=n)}),e},u.once=function(n){var t,r;return function(){return t?r:(t=J,r=n.apply(this,arguments),n=K,r)}},u.pairs=function(n){for(var t=-1,r=Dt(n),e=r.length,u=Array(e);++t<e;){var o=r[t];u[t]=[o,n[o]]}return u},u.partial=function(n){return i(n,p(arguments,1))},u.pick=function(n){for(var t=0,r=ct.apply(Z,arguments),e=r.length,u={};++t<e;){var o=r[t];o in n&&(u[o]=n[o])}return u},u.pluck=zt,u.range=function(n,t,r){n=+n||0,r=+r||1,t==K&&(t=n,n=0);\n   26  var e=-1;t=dt(0,ft((t-n)/r));for(var u=Array(t);++e<t;)u[e]=n,n+=r;return u},u.reject=function(n,t,r){return t=a(t,r),N(n,function(n,r,e){return!t(n,r,e)})},u.rest=C,u.shuffle=function(n){var t=-1,r=n?n.length:0,e=Array(typeof r==\"number\"?r:0);return F(n,function(n){var r=lt(jt()*(++t+1));e[t]=e[r],e[r]=n}),e},u.sortBy=function(n,t,r){var e=-1,u=n?n.length:0,i=Array(typeof u==\"number\"?u:0);for(t=a(t,r),F(n,function(n,r,u){i[++e]={a:t(n,r,u),b:e,c:n}}),u=i.length,i.sort(o);u--;)i[u]=i[u].c;return i\n   27: },u.tap=function(n,t){return t(n),n},u.throttle=function(n,t){function r(){a=new Date,i=K,u=n.apply(o,e)}var e,u,o,i,a=0;return function(){var f=new Date,c=t-(f-a);return e=arguments,o=this,0<c?i||(i=setTimeout(r,c)):(clearTimeout(i),i=K,a=f,u=n.apply(o,e)),u}},u.times=function(n,t,r){n=+n||0;for(var e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);return u},u.toArray=function(n){return n&&typeof n.length==\"number\"?p(n):E(n)},u.union=function(){return U(ct.apply(Z,arguments))},u.uniq=U,u.values=E,u.where=D,u.without=function(n){for(var t=-1,r=n.length,e=[];++t<r;){var u=n[t];\n   28  0>z(arguments,u,1)&&e.push(u)}return e},u.wrap=function(n,t){return function(){var r=[n];return st.apply(r,arguments),t.apply(this,r)}},u.zip=function(n){for(var t=-1,r=n?T(zt(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=zt(arguments,t);return e},u.collect=R,u.drop=C,u.each=F,u.extend=g,u.methods=m,u.select=N,u.tail=C,u.unique=U,u.clone=function(n){return w(n)?Bt(n)?p(n):g({},n):n},u.contains=O,u.escape=function(n){return n==K?\"\":(n+\"\").replace(it,c)},u.every=S,u.find=k,u.findWhere=function(n,t){return D(n,t,J)\n   29  },u.has=function(n,t){return n?pt.call(n,t):L},u.identity=G,u.indexOf=z,u.isArguments=v,u.isArray=Bt,u.isBoolean=function(n){return n===J||n===L||vt.call(n)==xt},u.isDate=function(n){return n instanceof Date||vt.call(n)==Et},u.isElement=function(n){return n?1===n.nodeType:L},u.isEmpty=d,u.isEqual=b,u.isFinite=function(n){return yt(n)&&!mt(parseFloat(n))},u.isFunction=j,u.isNaN=function(n){return A(n)&&n!=+n},u.isNull=function(n){return n===K},u.isNumber=A,u.isObject=w,u.isRegExp=function(n){return n instanceof RegExp||vt.call(n)==Nt\n   30  },u.isString=x,u.isUndefined=function(n){return typeof n==\"undefined\"},u.lastIndexOf=function(n,t,r){var e=n?n.length:0;for(typeof r==\"number\"&&(e=(0>r?dt(0,e+r):bt(r,e-1))+1);e--;)if(n[e]===t)return e;return-1},u.mixin=H,u.noConflict=function(){return n._=rt,this},u.random=function(n,t){return n==K&&t==K&&(t=1),n=+n||0,t==K&&(t=n,n=0),n+lt(jt()*((+t||0)-n+1))},u.reduce=q,u.reduceRight=I,u.result=function(n,t){var r=n?n[t]:K;return j(r)?n[t]():r},u.size=function(n){var t=n?n.length:0;return typeof t==\"number\"?t:Dt(n).length\n   31  },u.some=B,u.sortedIndex=P,u.template=function(n,t,r){n||(n=\"\"),r=y({},r,u.templateSettings);var e=0,o=\"__p+='\",i=r.variable;n.replace(RegExp((r.escape||ot).source+\"|\"+(r.interpolate||ot).source+\"|\"+(r.evaluate||ot).source+\"|$\",\"g\"),function(t,r,u,i,a){return o+=n.slice(e,a).replace(at,f),r&&(o+=\"'+_['escape'](\"+r+\")+'\"),i&&(o+=\"';\"+i+\";__p+='\"),u&&(o+=\"'+((__t=(\"+u+\"))==null?'':__t)+'\"),e=a+t.length,t}),o+=\"';\\n\",i||(i=\"obj\",o=\"with(\"+i+\"||{}){\"+o+\"}\"),o=\"function(\"+i+\"){var __t,__p='',__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\"+o+\"return __p}\";\n   32: try{var a=Function(\"_\",\"return \"+o)(u)}catch(c){throw c.source=o,c}return t?a(t):(a.source=o,a)},u.unescape=function(n){return n==K?\"\":(n+\"\").replace(et,s)},u.uniqueId=function(n){var t=++nt+\"\";return n?n+t:t},u.all=S,u.any=B,u.detect=k,u.foldl=q,u.foldr=I,u.include=O,u.inject=q,u.first=M,u.last=function(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=K){var o=u;for(t=a(t,r);o--&&t(n[o],o,n);)e++}else if(e=t,e==K||r)return n[u-1];return p(n,dt(0,u-e))}},u.take=M,u.head=M,u.chain=function(n){return n=new u(n),n.__chain__=J,n\n   33: },u.VERSION=\"1.0.1\",H(u),u.prototype.chain=function(){return this.__chain__=J,this},u.prototype.value=function(){return this.__wrapped__},e(\"pop push reverse shift sort splice unshift\".split(\" \"),function(n){var t=Z[n];u.prototype[n]=function(){var n=this.__wrapped__;return t.apply(n,arguments),Rt&&0===n.length&&delete n[0],this}}),e([\"concat\",\"join\",\"slice\"],function(n){var t=Z[n];u.prototype[n]=function(){var n=t.apply(this.__wrapped__,arguments);return this.__chain__&&(n=new u(n),n.__chain__=J),n\n   34  }}),Q?X?(X.exports=u)._=u:Q._=u:n._=u})(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\getobject\\.jshintrc:\n    4    \"immed\": true,\n    5    \"latedef\": true,\n    6:   \"newcap\": true,\n    7    \"noarg\": true,\n    8    \"sub\": true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\getobject\\package.json:\n   42      \"dot\"\n   43    ],\n   44:   \"readme\": \"# getobject [![Build Status](https://secure.travis-ci.org/cowboy/node-getobject.png?branch=master)](http://travis-ci.org/cowboy/node-getobject)\\n\\nget.and.set.deep.objects.easily = true;\\n\\n## Getting Started\\nInstall the module with: `npm install getobject`\\n\\n```javascript\\nvar getobject = require('getobject');\\n```\\n\\n## Contributing\\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\\n\\n## Release History\\n_(Nothing yet)_\\n\\n## License\\nCopyright (c) 2013 \\\"Cowboy\\\" Ben Alman\\nLicensed under the MIT license.\",\n   45    \"readmeFilename\": \"README.md\",\n   46    \"_id\": \"getobject@0.1.0\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\getobject\\README.md:\n   11  \n   12  ## Contributing\n   13: In lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n   14  \n   15  ## Release History\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\glob.js:\n   55    }\n   56  \n   57:   var g = new Glob(pattern, options, cb)\n   58    return g.sync ? g.found : g\n   59  }\n   ..\n   62  \n   63  function deprecated () {\n   64:   throw new Error(\"glob's interface has changed. Please see the docs.\")\n   65  }\n   66  \n   ..\n   82  function Glob (pattern, options, cb) {\n   83    if (!(this instanceof Glob)) {\n   84:     return new Glob(pattern, options, cb)\n   85    }\n   86  \n   ..\n  117  \n  118    if (!pattern) {\n  119:     throw new Error(\"must provide pattern\")\n  120    }\n  121  \n  ...\n  123    if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n  124      if (options.noglobstar) {\n  125:       throw new Error(\"base matching requires globstar\")\n  126      }\n  127      pattern = \"**/\" + pattern\n  ...\n  144    this.silent = !!options.silent\n  145  \n  146:   var mm = this.minimatch = new Minimatch(pattern, options)\n  147    this.options = mm.options\n  148    pattern = this.pattern = mm.pattern\n  ...\n  160    // Later, we do an Object.keys() on these.\n  161    // Keep them as a list so we can fill in when nonull is set.\n  162:   this.matches = new Array(n)\n  163  \n  164    this.minimatch.set.forEach(iterator.bind(this))\n  ...\n  246    if (this.paused) return\n  247    if (this.sync)\n  248:     this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  249    this.paused = true\n  250    this.emit(\"pause\")\n  ...\n  254    if (!this.paused) return\n  255    if (this.sync)\n  256:     this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  257    this.paused = false\n  258    this.emit(\"resume\")\n  ...\n  482    this.log('stat', [this.cwd, f, '=', abs])\n  483    if (f.length > this.maxLength) {\n  484:     var er = new Error(\"Path name too long\")\n  485      er.code = \"ENAMETOOLONG\"\n  486      er.path = f\n  ...\n  515      this.log(\"should be ENOTDIR, fake it\")\n  516  \n  517:     er = new Error(\"ENOTDIR, not a directory '\" + abs + \"'\")\n  518      er.path = abs\n  519      er.code = \"ENOTDIR\"\n  ...\n  543    this.log('readdir', [this.cwd, f, abs])\n  544    if (f.length > this.maxLength) {\n  545:     var er = new Error(\"Path name too long\")\n  546      er.code = \"ENAMETOOLONG\"\n  547      er.path = f\n  ...\n  559        // either ENOENT or ENOTDIR\n  560        var code = c ? \"ENOTDIR\" : \"ENOENT\"\n  561:       , er = new Error((c ? \"Not a directory\" : \"Not found\") + \": \" + f)\n  562        er.path = f\n  563        er.code = code\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\package.json:\n   30    },\n   31    \"license\": \"BSD\",\n   32:   \"readme\": \"# Glob\\n\\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\\nlibrary to do its matching.\\n\\n## Attention: node-glob users!\\n\\nThe API has changed dramatically between 2.x and 3.x. This library is\\nnow 100% JavaScript, and the integer flags have been replaced with an\\noptions object.\\n\\nAlso, there's an event emitter class, proper tests, and all the other\\nthings you've come to expect from node modules.\\n\\nAnd best of all, no compilation!\\n\\n## Usage\\n\\n```javascript\\nvar glob = require(\\\"glob\\\")\\n\\n// options is optional\\nglob(\\\"**/*.js\\\", options, function (er, files) {\\n  // files is an array of filenames.\\n  // If the `nonull` option is set, and nothing\\n  // was found, then files is [\\\"**/*.js\\\"]\\n  // er is an error object or null.\\n})\\n```\\n\\n## Features\\n\\nPlease see the [minimatch\\ndocumentation](https://github.com/isaacs/minimatch) for more details.\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n* [minimatch documentation](https://github.com/isaacs/minimatch)\\n\\n## glob(pattern, [options], cb)\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* `cb` {Function}\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nPerform an asynchronous glob search.\\n\\n## glob.sync(pattern, [options]\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* return: {Array<String>} filenames found matching the pattern\\n\\nPerform a synchronous glob search.\\n\\n## Class: glob.Glob\\n\\nCreate a Glob object by instanting the `glob.Glob` class.\\n\\n```javascript\\nvar Glob = require(\\\"glob\\\").Glob\\nvar mg = new Glob(pattern, options, cb)\\n```\\n\\nIt's an EventEmitter, and starts walking the filesystem to find matches\\nimmediately.\\n\\n### new glob.Glob(pattern, [options], [cb])\\n\\n* `pattern` {String} pattern to search for\\n* `options` {Object}\\n* `cb` {Function} Called when an error occurs, or matches are found\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nNote that if the `sync` flag is set in the options, then matches will\\nbe immediately available on the `g.found` member.\\n\\n### Properties\\n\\n* `minimatch` The minimatch object that the glob uses.\\n* `options` The options object passed in.\\n* `error` The error encountered.  When an error is encountered, the\\n  glob object is in an undefined state, and should be discarded.\\n* `aborted` Boolean which is set to true when calling `abort()`.  There\\n  is no way at this time to continue a glob search after aborting, but\\n  you can re-use the statCache to avoid having to duplicate syscalls.\\n\\n### Events\\n\\n* `end` When the matching is finished, this is emitted with all the\\n  matches found.  If the `nonull` option is set, and no match was found,\\n  then the `matches` list contains the original pattern.  The matches\\n  are sorted, unless the `nosort` flag is set.\\n* `match` Every time a match is found, this is emitted with the matched.\\n* `error` Emitted when an unexpected error is encountered, or whenever\\n  any fs error occurs if `options.strict` is set.\\n* `abort` When `abort()` is called, this event is raised.\\n\\n### Methods\\n\\n* `abort` Stop the search.\\n\\n### Options\\n\\nAll the options that can be passed to Minimatch can also be passed to\\nGlob to change pattern matching behavior.  Also, some have been added,\\nor have glob-specific ramifications.\\n\\nAll options are false by default, unless otherwise noted.\\n\\nAll options are added to the glob object, as well.\\n\\n* `cwd` The current working directory in which to search.  Defaults\\n  to `process.cwd()`.\\n* `root` The place where patterns starting with `/` will be mounted\\n  onto.  Defaults to `path.resolve(options.cwd, \\\"/\\\")` (`/` on Unix\\n  systems, and `C:\\\\` or some such on Windows.)\\n* `nomount` By default, a pattern starting with a forward-slash will be\\n  \\\"mounted\\\" onto the root setting, so that a valid filesystem path is\\n  returned.  Set this flag to disable that behavior.\\n* `mark` Add a `/` character to directory matches.  Note that this\\n  requires additional stat calls.\\n* `nosort` Don't sort the results.\\n* `stat` Set to true to stat *all* results.  This reduces performance\\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\\n  to be an untrustworthy indicator of file existence.  It will cause\\n  ELOOP to be triggered one level sooner in the case of cyclical\\n  symbolic links.\\n* `silent` When an unusual error is encountered\\n  when attempting to read a directory, a warning will be printed to\\n  stderr.  Set the `silent` option to true to suppress these warnings.\\n* `strict` When an unusual error is encountered\\n  when attempting to read a directory, the process will just continue on\\n  in search of other matches.  Set the `strict` option to raise an error\\n  in these cases.\\n* `statCache` A cache of results of filesystem information, to prevent\\n  unnecessary stat calls.  While it should not normally be necessary to\\n  set this, you may pass the statCache from one glob() call to the\\n  options object of another, if you know that the filesystem will not\\n  change between calls.  (See \\\"Race Conditions\\\" below.)\\n* `sync` Perform a synchronous glob search.\\n* `nounique` In some cases, brace-expanded patterns can result in the\\n  same file showing up multiple times in the result set.  By default,\\n  this implementation prevents duplicates in the result set.\\n  Set this flag to disable that behavior.\\n* `nonull` Set to never return an empty set, instead returning a set\\n  containing the pattern itself.  This is the default in glob(3).\\n* `nocase` Perform a case-insensitive match.  Note that case-insensitive\\n  filesystems will sometimes result in glob returning results that are\\n  case-insensitively matched anyway, since readdir and stat will not\\n  raise an error.\\n* `debug` Set to enable debug logging in minimatch and glob.\\n* `globDebug` Set to enable debug logging in glob, but not minimatch.\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between node-glob and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.  **Note that this is different from the way that `**` is\\nhandled by ruby's `Dir` class.**\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen glob returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`glob.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\\n## Windows\\n\\n**Please only use forward-slashes in glob expressions.**\\n\\nThough windows uses either `/` or `\\\\` as its path separator, only `/`\\ncharacters are used by this glob implementation.  You must use\\nforward-slashes **only** in glob expressions.  Back-slashes will always\\nbe interpreted as escape characters, not path separators.\\n\\nResults from absolute patterns such as `/foo/*` are mounted onto the\\nroot setting using `path.join`.  On windows, this will by default result\\nin `/foo/*` matching `C:\\\\foo\\\\bar.txt`.\\n\\n## Race Conditions\\n\\nGlob searching, by its very nature, is susceptible to race conditions,\\nsince it relies on directory walking and such.\\n\\nAs a result, it is possible that a file that exists when glob looks for\\nit may have been deleted or modified by the time it returns the result.\\n\\nAs part of its internal implementation, this program caches all stat\\nand readdir calls that it makes, in order to cut down on system\\noverhead.  However, this also makes it even more susceptible to races,\\nespecially if the statCache object is reused between glob calls.\\n\\nUsers are thus advised not to use a glob result as a\\nguarantee of filesystem state in the face of rapid changes.\\nFor the vast majority of operations, this is never a problem.\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\README.md:\n   72  ```javascript\n   73  var Glob = require(\"glob\").Glob\n   74: var mg = new Glob(pattern, options, cb)\n   75  ```\n   76  \n   ..\n   78  immediately.\n   79  \n   80: ### new glob.Glob(pattern, [options], [cb])\n   81  \n   82  * `pattern` {String} pattern to search for\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\examples\\g.js:\n    4  console.log(pattern)\n    5  \n    6: var mg = new Glob(pattern, {mark: true, sync:true}, function (er, matches) {\n    7    console.log(\"matches\", matches)\n    8  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\examples\\usr-local.js:\n    4  console.log(pattern)\n    5  \n    6: var mg = new Glob(pattern, {mark: true}, function (er, matches) {\n    7    console.log(\"matches\", matches)\n    8  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\node_modules\\graceful-fs\\graceful-fs.js:\n   35  \n   36    if (fs._curOpen >= fs.MAX_OPEN) {\n   37:     queue.push(new OpenReq(path, flags, mode, cb))\n   38      setTimeout(flush)\n   39      return\n   ..\n   90          break\n   91        default:\n   92:         throw new Error('Unknown req type: ' + req.constructor.name)\n   93      }\n   94    }\n   ..\n  122  function gracefulReaddir (path, cb) {\n  123    if (fs._curOpen >= fs.MAX_OPEN) {\n  124:     queue.push(new ReaddirReq(path, cb))\n  125      setTimeout(flush)\n  126      return\n  ...\n  158  \n  159    if (fs._curOpen >= fs.MAX_OPEN) {\n  160:     queue.push(new ReadFileReq(path, options, cb))\n  161      setTimeout(flush)\n  162      return\n  ...\n  197  \n  198    if (fs._curOpen >= fs.MAX_OPEN) {\n  199:     queue.push(new WriteFileReq(path, data, options, cb))\n  200      setTimeout(flush)\n  201      return\n  ...\n  391  \n  392  // on Windows, A/V software can lock the directory, causing this\n  393: // to fail with an EACCES or EPERM if the directory contains newly\n  394  // created files.  Try again on failure, for up to 1 second.\n  395  if (process.platform === \"win32\") {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\node_modules\\graceful-fs\\package.json:\n   39    ],\n   40    \"license\": \"BSD\",\n   41:   \"readme\": \"# graceful-fs\\n\\ngraceful-fs functions as a drop-in replacement for the fs module,\\nmaking various improvements.\\n\\nThe improvements are meant to normalize behavior across different\\nplatforms and environments, and to make filesystem access more\\nresilient to errors.\\n\\n## Improvements over fs module\\n\\ngraceful-fs:\\n\\n* keeps track of how many file descriptors are open, and by default\\n  limits this to 1024. Any further requests to open a file are put in a\\n  queue until new slots become available. If 1024 turns out to be too\\n  much, it decreases the limit further.\\n* fixes `lchmod` for Node versions prior to 0.6.2.\\n* implements `fs.lutimes` if possible. Otherwise it becomes a noop.\\n* ignores `EINVAL` and `EPERM` errors in `chown`, `fchown` or\\n  `lchown` if the user isn't root.\\n* makes `lchmod` and `lchown` become noops, if not available.\\n* retries reading a file if `read` results in EAGAIN error.\\n\\nOn Windows, it retries renaming a file for up to one second if `EACCESS`\\nor `EPERM` error occurs, likely because antivirus software has locked\\nthe directory.\\n\\n## Configuration\\n\\nThe maximum number of open file descriptors that graceful-fs manages may\\nbe adjusted by setting `fs.MAX_OPEN` to a different number. The default\\nis 1024.\\n\",\n   42    \"readmeFilename\": \"README.md\",\n   43    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\node_modules\\graceful-fs\\README.md:\n   14  * keeps track of how many file descriptors are open, and by default\n   15    limits this to 1024. Any further requests to open a file are put in a\n   16:   queue until new slots become available. If 1024 turns out to be too\n   17    much, it decreases the limit further.\n   18  * fixes `lchmod` for Node versions prior to 0.6.2.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\node_modules\\graceful-fs\\test\\ulimit.js:\n   17      if (fds >= limit) {\n   18        --fds\n   19:       var er = new Error('EMFILE Curses!')\n   20        er.code = 'EMFILE'\n   21        er.path = path\n   ..\n   29  fs_.openSync = function (path, flags, mode) {\n   30    if (fds >= limit) {\n   31:     var er = new Error('EMFILE Curses!')\n   32      er.code = 'EMFILE'\n   33      er.path = path\n   ..\n   53    process.nextTick(function() {\n   54      if (fds >= limit) {\n   55:       var er = new Error('EMFILE Curses!')\n   56        er.code = 'EMFILE'\n   57        er.path = path\n   ..\n   69  fs_.readdirSync = function (path) {\n   70    if (fds >= limit) {\n   71:     var er = new Error('EMFILE Curses!')\n   72      er.code = 'EMFILE'\n   73      er.path = path\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\node_modules\\inherits\\inherits.js:\n   27  //function Parent () {}\n   28  //inherits(Child, Parent)\n   29: //new Child\n   30  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   20      \"url\": \"http://blog.izs.me/\"\n   21    },\n   22:   \"readme\": \"A dead simple way to do inheritance in JS.\\n\\n    var inherits = require(\\\"inherits\\\")\\n\\n    function Animal () {\\n      this.alive = true\\n    }\\n    Animal.prototype.say = function (what) {\\n      console.log(what)\\n    }\\n\\n    inherits(Dog, Animal)\\n    function Dog () {\\n      Dog.super.apply(this)\\n    }\\n    Dog.prototype.sniff = function () {\\n      this.say(\\\"sniff sniff\\\")\\n    }\\n    Dog.prototype.bark = function () {\\n      this.say(\\\"woof woof\\\")\\n    }\\n\\n    inherits(Chihuahua, Dog)\\n    function Chihuahua () {\\n      Chihuahua.super.apply(this)\\n    }\\n    Chihuahua.prototype.bark = function () {\\n      this.say(\\\"yip yip\\\")\\n    }\\n\\n    // also works\\n    function Cat () {\\n      Cat.super.apply(this)\\n    }\\n    Cat.prototype.hiss = function () {\\n      this.say(\\\"CHSKKSS!!\\\")\\n    }\\n    inherits(Cat, Animal, {\\n      meow: function () { this.say(\\\"miao miao\\\") }\\n    })\\n    Cat.prototype.purr = function () {\\n      this.say(\\\"purr purr\\\")\\n    }\\n\\n\\n    var c = new Chihuahua\\n    assert(c instanceof Chihuahua)\\n    assert(c instanceof Dog)\\n    assert(c instanceof Animal)\\n\\nThe actual function is laughably small.  10-lines small.\\n\",\n   23    \"readmeFilename\": \"README.md\",\n   24    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\node_modules\\inherits\\README.md:\n   44  \n   45  \n   46:     var c = new Chihuahua\n   47      assert(c instanceof Chihuahua)\n   48      assert(c instanceof Dog)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\test\\00-setup.js:\n  160    var s = 0\n  161    chunks.forEach(function (c) { s += c.length })\n  162:   var out = new Buffer(s)\n  163    s = 0\n  164    chunks.forEach(function (c) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\glob\\test\\pause-resume.js:\n   37  var globResults = []\n   38  tap.test(\"use a Glob object, and pause/resume it\", function (t) {\n   39:   var g = new Glob(pattern)\n   40    , paused = false\n   41    , res = []\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\hooker\\grunt.js:\n   31        immed: true,\n   32        latedef: true,\n   33:       newcap: true,\n   34        noarg: true,\n   35        sub: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\hooker\\package.json:\n   39      \"test\": \"grunt test\"\n   40    },\n   41:   \"readme\": \"# JavaScript Hooker\\n\\nMonkey-patch (hook) functions for debugging and stuff.\\n\\n## Getting Started\\n\\nThis code should work just fine in Node.js:\\n\\nFirst, install the module with: `npm install hooker`\\n\\n```javascript\\nvar hooker = require('hooker');\\nhooker.hook(Math, \\\"max\\\", function() {\\n  console.log(arguments.length + \\\" arguments passed\\\");\\n});\\nMath.max(5, 6, 7) // logs: \\\"3 arguments passed\\\", returns 7\\n```\\n\\nOr in the browser:\\n\\n```html\\n<script src=\\\"dist/ba-hooker.min.js\\\"></script>\\n<script>\\nhook(Math, \\\"max\\\", function() {\\n  console.log(arguments.length + \\\" arguments passed\\\");\\n});\\nMath.max(5, 6, 7) // logs: \\\"3 arguments passed\\\", returns 7\\n</script>\\n```\\n\\nIn the browser, you can attach Hooker's methods to any object.\\n\\n```html\\n<script>\\nthis.exports = Bocoup.utils;\\n</script>\\n<script src=\\\"dist/ba-hooker.min.js\\\"></script>\\n<script>\\nBocoup.utils.hook(Math, \\\"max\\\", function() {\\n  console.log(arguments.length + \\\" arguments passed\\\");\\n});\\nMath.max(5, 6, 7) // logs: \\\"3 arguments passed\\\", returns 7\\n</script>\\n```\\n\\n## Documentation\\n\\n### hooker.hook\\nMonkey-patch (hook) one or more methods of an object.\\n#### Signature:\\n`hooker.hook(object, [ props, ] [options | prehookFunction])`\\n#### `props`\\nThe optional `props` argument can be a method name, array of method names or null. If null (or omitted), all enumerable methods of `object` will be hooked.\\n#### `options`\\n* `pre` - (Function) a pre-hook function to be executed before the original function. Arguments passed into the method will be passed into the pre-hook function as well.\\n* `post` - (Function) a post-hook function to be executed after the original function. The original function's result is passed into the post-hook function as its first argument, followed by the method arguments.\\n* `once` - (Boolean) if true, auto-unhook the function after the first execution.\\n* `passName` - (Boolean) if true, pass the name of the method into the pre-hook function as its first arg (preceding all other arguments), and into the post-hook function as the second arg (after result but preceding all other arguments).\\n\\n#### Returns:\\nAn array of hooked method names.\\n\\n### hooker.unhook\\nUn-monkey-patch (unhook) one or more methods of an object.\\n#### Signature:\\n`hooker.unhook(object [, props ])`\\n#### `props`\\nThe optional `props` argument can be a method name, array of method names or null. If null (or omitted), all methods of `object` will be unhooked.\\n#### Returns:\\nAn array of unhooked method names.\\n\\n### hooker.orig\\nGet a reference to the original method from a hooked function.\\n#### Signature:\\n`hooker.orig(object, props)`\\n\\n### hooker.override\\nWhen a pre- or post-hook returns the result of this function, the value\\npassed will be used in place of the original function's return value. Any\\npost-hook override value will take precedence over a pre-hook override value.\\n#### Signature:\\n`hooker.override(value)`\\n\\n### hooker.preempt\\nWhen a pre-hook returns the result of this function, the value passed will\\nbe used in place of the original function's return value, and the original\\nfunction will NOT be executed.\\n#### Signature:\\n`hooker.preempt(value)`\\n\\n### hooker.filter\\nWhen a pre-hook returns the result of this function, the context and\\narguments passed will be applied into the original function.\\n#### Signature:\\n`hooker.filter(context, arguments)`\\n\\n\\n## Examples\\nSee the unit tests for more examples.\\n\\n```javascript\\nvar hooker = require('hooker');\\n// Simple logging.\\nhooker.hook(Math, \\\"max\\\", function() {\\n  console.log(arguments.length + \\\" arguments passed\\\");\\n});\\nMath.max(5, 6, 7) // logs: \\\"3 arguments passed\\\", returns 7\\n\\nhooker.unhook(Math, \\\"max\\\"); // (This is assumed between all further examples)\\nMath.max(5, 6, 7) // 7\\n\\n// Returning hooker.override(value) overrides the original value.\\nhooker.hook(Math, \\\"max\\\", function() {\\n  if (arguments.length === 0) {\\n    return hooker.override(9000);\\n  }\\n});\\nMath.max(5, 6, 7) // 7\\nMath.max() // 9000\\n\\n// Auto-unhook after one execution.\\nhooker.hook(Math, \\\"max\\\", {\\n  once: true,\\n  pre: function() {\\n    console.log(\\\"Init something here\\\");\\n  }\\n});\\nMath.max(5, 6, 7) // logs: \\\"Init something here\\\", returns 7\\nMath.max(5, 6, 7) // 7\\n\\n// Filter `this` and arguments through a pre-hook function.\\nhooker.hook(Math, \\\"max\\\", {\\n  pre: function() {\\n    var args = [].map.call(arguments, function(num) {\\n      return num * 2;\\n    });\\n    return hooker.filter(this, args); // thisValue, arguments\\n  }\\n});\\nMath.max(5, 6, 7) // 14\\n\\n// Modify the original function's result with a post-hook function.\\nhooker.hook(Math, \\\"max\\\", {\\n  post: function(result) {\\n    return hooker.override(result * 100);\\n  }\\n});\\nMath.max(5, 6, 7) // 700\\n\\n// Hook every Math method. Note: if Math's methods were enumerable, the second\\n// argument could be omitted. Since they aren't, an array of properties to hook\\n// must be explicitly passed. Non-method properties will be skipped.\\n// See a more generic example here: http://bit.ly/vvJlrS\\nhooker.hook(Math, Object.getOwnPropertyNames(Math), {\\n  passName: true,\\n  pre: function(name) {\\n    console.log(\\\"=> Math.\\\" + name, [].slice.call(arguments, 1));\\n  },\\n  post: function(result, name) {\\n    console.log(\\\"<= Math.\\\" + name, result);\\n  }\\n});\\n\\nvar result = Math.max(5, 6, 7);\\n// => Math.max [ 5, 6, 7 ]\\n// <= Math.max 7\\nresult // 7\\n\\nresult = Math.ceil(3.456);\\n// => Math.ceil [ 3.456 ]\\n// <= Math.ceil 4\\nresult // 4\\n```\\n\\n## Contributing\\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\\n\\n_Also, please don't edit files in the \\\"dist\\\" subdirectory as they are generated via grunt. You'll find source code in the \\\"lib\\\" subdirectory!_\\n\\n## Release History\\n2012/01/09 - v0.2.3 - First official release.\\n\\n## License\\nCopyright (c) 2012 \\\"Cowboy\\\" Ben Alman  \\nLicensed under the MIT license.  \\n<http://benalman.com/about/license/>\\n\",\n   42    \"readmeFilename\": \"README.md\",\n   43    \"_id\": \"hooker@0.2.3\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\hooker\\README.md:\n  174  \n  175  ## Contributing\n  176: In lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\n  177  \n  178  _Also, please don't edit files in the \"dist\" subdirectory as they are generated via grunt. You'll find source code in the \"lib\" subdirectory!_\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\hooker\\dist\\ba-hooker.js:\n   20    // value.\n   21    exports.override = function(value) {\n   22:     return new HookerOverride(value);\n   23    };\n   24  \n   ..\n   27    // function will NOT be executed.\n   28    exports.preempt = function(value) {\n   29:     return new HookerPreempt(value);\n   30    };\n   31  \n   ..\n   33    // arguments passed will be applied into the original function.\n   34    exports.filter = function(context, args) {\n   35:     return new HookerFilter(context, args);\n   36    };\n   37  \n   ..\n   85        // The original (current) method.\n   86        var orig = obj[prop];\n   87:       // The new hooked function.\n   88        function hooked() {\n   89          var result, origResult, tmp;\n   ..\n  146        // Fail if the function couldn't be hooked.\n  147        if (obj[prop] !== hooked) { return false; }\n  148:       // Store a reference to the original method as a property on the new one.\n  149        obj[prop]._orig = orig;\n  150      });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\hooker\\dist\\ba-hooker.min.js:\n    2  * http://github.com/cowboy/javascript-hooker\n    3  * Copyright (c) 2012 \"Cowboy\" Ben Alman; Licensed MIT */\n    4: (function(a){function d(a){this.value=a}function e(a){this.value=a}function f(a,b){this.context=a,this.args=b}function g(a,b,d){var e;if(typeof b==\"string\")b=[b];else if(b==null){b=[];for(e in a)a.hasOwnProperty(e)&&b.push(e)}var f=b.length;while(f--)(c.call(a[b[f]])!==\"[object Function]\"||d(a,b[f])===!1)&&b.splice(f,1);return b}var b=[].slice,c={}.toString;a.override=function(a){return new d(a)},a.preempt=function(a){return new e(a)},a.filter=function(a,b){return new f(a,b)},a.hook=function(c,h,i){return i==null&&(i=h,h=null),typeof i==\"function\"&&(i={pre:i}),g(c,h,function(c,g){function j(){var j,k,l,m=b.call(arguments);return i.passName&&m.unshift(g),i.pre&&(j=i.pre.apply(this,m)),j instanceof f?k=j=h.apply(j.context,j.args):j instanceof e?k=j=j.value:(k=h.apply(this,arguments),j=j instanceof d?j.value:k),i.post&&(l=i.post.apply(this,[k].concat(m)),l instanceof d&&(j=l.value)),i.once&&a.unhook(c,g),j}var h=c[g];c[g]=j;if(c[g]!==j)return!1;c[g]._orig=h})},a.orig=function(a,b){return a[b]._orig},a.unhook=function(b,c){return g(b,c,function(b,c){var d=a.orig(b,c);if(!d)return!1;b[c]=d})}})(typeof exports==\"object\"&&exports||this)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\hooker\\lib\\hooker.js:\n   25    // value.\n   26    exports.override = function(value) {\n   27:     return new HookerOverride(value);\n   28    };\n   29  \n   ..\n   32    // function will NOT be executed.\n   33    exports.preempt = function(value) {\n   34:     return new HookerPreempt(value);\n   35    };\n   36  \n   ..\n   38    // arguments passed will be applied into the original function.\n   39    exports.filter = function(context, args) {\n   40:     return new HookerFilter(context, args);\n   41    };\n   42  \n   ..\n   90        // The original (current) method.\n   91        var orig = obj[prop];\n   92:       // The new hooked function.\n   93        function hooked() {\n   94          var result, origResult, tmp;\n   ..\n  151        // Fail if the function couldn't be hooked.\n  152        if (obj[prop] !== hooked) { return false; }\n  153:       // Store a reference to the original method as a property on the new one.\n  154        obj[prop]._orig = orig;\n  155      });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\index.js:\n   43                  return codec(codecOptions);\n   44              else\n   45:                 throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n   46          }\n   47      },\n   ..\n   67              if (!options.charsBuf) {\n   68                  if (!options.chars || (options.chars.length !== 128 && options.chars.length !== 256))\n   69:                     throw new Error(\"Encoding '\"+options.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n   70                  \n   71                  if (options.chars.length === 128)\n   72                      options.chars = asciiString + options.chars;\n   73  \n   74:                 options.charsBuf = new Buffer(options.chars, 'ucs2');\n   75              }\n   76              \n   77              if (!options.revCharsBuf) {\n   78:                 options.revCharsBuf = new Buffer(65536);\n   79                  var defChar = iconv.defaultCharSingleByte.charCodeAt(0);\n   80                  for (var i = 0; i < options.revCharsBuf.length; i++)\n   ..\n   94          table: function(options) {\n   95              if (!options.table) {\n   96:                 throw new Error(\"Encoding '\" + options.type + \"' has incorect 'table' option\");\n   97              }\n   98              if (!options.revCharsTable) {\n   ..\n  118  \n  119  function toInternalEncoding(str) {\n  120:     return new Buffer(ensureString(str), this.options.originalEncoding);\n  121  }\n  122  \n  ...\n  129      var strLen = str.length;\n  130      var revCharsTable = this.options.revCharsTable;\n  131:     var newBuf = new Buffer(strLen*2), gbkcode, unicode,\n  132          defaultChar = revCharsTable[iconv.defaultCharUnicode.charCodeAt(0)];\n  133  \n  ...\n  136          if (unicode >> 7) {\n  137              gbkcode = revCharsTable[unicode] || defaultChar;\n  138:             newBuf[j++] = gbkcode >> 8; //high byte;\n  139:             newBuf[j++] = gbkcode & 0xFF; //low byte\n  140          } else {//ascii\n  141:             newBuf[j++] = unicode;\n  142          }\n  143      }\n  144:     return newBuf.slice(0, j);\n  145  }\n  146  \n  ...\n  149      var bufLen = buf.length;\n  150      var table = this.options.table;\n  151:     var newBuf = new Buffer(bufLen*2), unicode, gbkcode,\n  152          defaultChar = iconv.defaultCharUnicode.charCodeAt(0);\n  153  \n  ...\n  160              unicode = gbkcode;\n  161          }\n  162:         newBuf[j] = unicode & 0xFF; //low byte\n  163:         newBuf[j+1] = unicode >> 8; //high byte\n  164      }\n  165:     return newBuf.slice(0, j).toString('ucs2');\n  166  }\n  167  \n  ...\n  169      str = ensureString(str);\n  170      \n  171:     var buf = new Buffer(str.length);\n  172      var revCharsBuf = this.options.revCharsBuf;\n  173      for (var i = 0; i < str.length; i++)\n  ...\n  182      // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n  183      var charsBuf = this.options.charsBuf;\n  184:     var newBuf = new Buffer(buf.length*2);\n  185      var idx1 = 0, idx2 = 0;\n  186      for (var i = 0, _len = buf.length; i < _len; i++) {\n  187          idx1 = buf[i]*2; idx2 = i*2;\n  188:         newBuf[idx2] = charsBuf[idx1];\n  189:         newBuf[idx2+1] = charsBuf[idx1+1];\n  190      }\n  191:     return newBuf.toString('ucs2');\n  192  }\n  193  \n  ...\n  217  \n  218  var ensureBuffer = function(buf) {\n  219:     buf = buf || new Buffer(0);\n  220:     return (buf instanceof Buffer) ? buf : new Buffer(\"\"+buf, \"binary\");\n  221  }\n  222  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\generation\\generate-singlebyte.js:\n  118  function generateCharsString(encoding) {\n  119      console.log(\"Generate encoding for \" + encoding);\n  120:     var iconvToUtf8 = new Iconv(encoding, \"UTF-8\");\n  121      var chars = \"\";\n  122  \n  ...\n  124  \n  125          try {\n  126:             var convertedChar = iconvToUtf8.convert(new Buffer([b])).toString();\n  127              \n  128              if (convertedChar.length != 1)\n  129:                 throw new Error(\"Single-byte encoding error: Must return single char.\");\n  130          } catch (exception) {\n  131              if (exception.code === \"EILSEQ\") {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\big5-test.js:\n    5  \n    6  var testString = \"中文abc\", //unicode contains Big5-code and ascii\n    7:     testStringBig5Buffer = new Buffer([0xa4,0xa4,0xa4,0xe5,0x61,0x62,0x63]),\n    8      testString2 = '測試',\n    9:     testStringBig5Buffer2 = new Buffer([0xb4, 0xfa, 0xb8, 0xd5]);\n   10  \n   11  vows.describe(\"Big5 tests\").addBatch({\n   ..\n   23          var contentBuffer = fs.readFileSync(__dirname+\"/big5File.txt\");\n   24          var str = iconv.fromEncoding(contentBuffer, \"big5\");\n   25:         var iconvc = new (require('iconv').Iconv)('big5','utf8');\n   26          assert.strictEqual(iconvc.convert(contentBuffer).toString(), str);\n   27      },\n   ..\n   30          // Reference: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n   31          var chars = \"·×\";\n   32:         var big5Chars = new Buffer([0xA1, 0x50, 0xA1, 0xD1]);\n   33          assert.strictEqual(iconv.toEncoding(chars, \"big5\").toString('binary'), big5Chars.toString('binary'));\n   34          assert.strictEqual(iconv.fromEncoding(big5Chars, \"big5\"), chars)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\cyrillic-test.js:\n   19      variations: ['win1251', 'Windows-1251', 'windows1251', 'CP1251', 1251],\n   20      encodedStrings: {\n   21:         empty: new Buffer(''),\n   22:         hi: new Buffer('\\xcf\\xf0\\xe8\\xe2\\xe5\\xf2!', 'binary'),\n   23:         ascii: new Buffer(baseStrings.ascii, 'binary'),\n   24:         rus: new Buffer('\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff', 'binary'),\n   25:         additional1: new Buffer('\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf','binary'),\n   26      }\n   27  }, {\n   ..\n   29      variations: ['koi8r', 'KOI8-R', 'cp20866', 20866],\n   30      encodedStrings: {\n   31:         empty: new Buffer(''),\n   32:         hi: new Buffer('\\xf0\\xd2\\xc9\\xd7\\xc5\\xd4!', 'binary'),\n   33:         ascii: new Buffer(baseStrings.ascii, 'binary'),\n   34:         rus: new Buffer('\\xe1\\xe2\\xf7\\xe7\\xe4\\xe5\\xf6\\xfa\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf2\\xf3\\xf4\\xf5\\xe6\\xe8\\xe3\\xfe\\xfb\\xfd\\xff\\xf9\\xf8\\xfc\\xe0\\xf1\\xc1\\xc2\\xd7\\xc7\\xc4\\xc5\\xd6\\xda\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd2\\xd3\\xd4\\xd5\\xc6\\xc8\\xc3\\xde\\xdb\\xdd\\xdf\\xd9\\xd8\\xdc\\xc0\\xd1', 'binary'),\n   35:         additional2: new Buffer('\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf', 'binary'),\n   36      }\n   37  }, {\n   ..\n   39      variations: ['iso88595', 'ISO-8859-5', 'ISO 8859-5', 'cp28595', 28595],\n   40      encodedStrings: {\n   41:         empty: new Buffer(''),\n   42:         hi: new Buffer('\\xbf\\xe0\\xd8\\xd2\\xd5\\xe2!', 'binary'),\n   43:         ascii: new Buffer(baseStrings.ascii, 'binary'),\n   44:         rus: new Buffer('\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef', 'binary'),\n   45:         additional3: new Buffer('\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff', 'binary'),\n   46      }\n   47  }];\n   ..\n   53      var tests = {\n   54          \"Convert to empty buffer\": function() {\n   55:             assert.strictEqual(iconv.toEncoding(\"\", enc).toString('binary'), new Buffer('').toString('binary'));\n   56          },\n   57          \"Convert from empty buffer\": function() {\n   58:             assert.strictEqual(iconv.fromEncoding(new Buffer(''), enc), \"\");\n   59          },\n   60          \"Convert from buffer\": function() {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\gbk-test.js:\n    5  \n    6  var testString = \"中国abc\",//unicode contains GBK-code and ascii\n    7:     testStringGBKBuffer = new Buffer([0xd6,0xd0,0xb9,0xfa,0x61,0x62,0x63]);\n    8  \n    9  vows.describe(\"GBK tests\").addBatch({\n   ..\n   11      \"Return values are of correct types\": function() {\n   12          assert.ok(iconv.toEncoding(testString, \"utf8\") instanceof Buffer);        \n   13:         var s = iconv.fromEncoding(new Buffer(testString), \"utf8\");\n   14          assert.strictEqual(Object.prototype.toString.call(s), \"[object String]\");\n   15      },\n   ..\n   25          var contentBuffer = fs.readFileSync(__dirname+\"/gbkFile.txt\");\n   26          var str = iconv.fromEncoding(contentBuffer, \"GBK\");\n   27:         var iconvc = new (require('iconv').Iconv)('GBK','utf8');\n   28          assert.strictEqual(iconvc.convert(contentBuffer).toString(), str);\n   29      },\n   ..\n   32          // Reference: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP936.TXT\n   33          var chars = \"·×\";\n   34:         var gbkChars = new Buffer([0xA1, 0xA4, 0xA1, 0xC1]);\n   35          assert.strictEqual(iconv.toEncoding(chars, \"GBK\").toString('binary'), gbkChars.toString('binary'));\n   36          assert.strictEqual(iconv.fromEncoding(gbkChars, \"GBK\"), chars)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\gbkFile.txt:\n    3  \n    4  <body><div id=\"u\"><a href=\"http://www.baidu.com/gaoji/preferences.html\" name=\"tj_setting\">ËÑË÷ÉèÖÃ</a>&nbsp;|&nbsp;<a href=\"http://passport.baidu.com/?login&tpl=mn\" name=\"tj_login\">µÇÂ¼</a></div>\n    5: <div id=\"m\"><p id=\"lg\"><img src=\"http://www.baidu.com/img/baidu_sylogo1.gif\" width=\"270\" height=\"129\" usemap=\"#mp\"><map name=\"mp\"><area shape=\"rect\" coords=\"40,25,230,95\" href=\"http://hi.baidu.com/baidu/\" target=\"_blank\" title=\"µã´Ë½øÈë °Ù¶ÈµÄ¿Õ¼ä\" ></map></p><p id=\"nv\"><a href=\"http://news.baidu.com\">ÐÂ&nbsp;ÎÅ</a>¡¡<b>Íø&nbsp;Ò³</b>¡¡<a href=\"http://tieba.baidu.com\">Ìù&nbsp;°É</a>¡¡<a href=\"http://zhidao.baidu.com\">Öª&nbsp;µÀ</a>¡¡<a href=\"http://mp3.baidu.com\">MP3</a>¡¡<a href=\"http://image.baidu.com\">Í¼&nbsp;Æ¬</a>¡¡<a href=\"http://video.baidu.com\">ÊÓ&nbsp;Æµ</a>¡¡<a href=\"http://map.baidu.com\">µØ&nbsp;Í¼</a></p><div id=\"fm\"><form name=\"f\" action=\"/s\"><input type=\"text\" name=\"wd\" id=\"kw\" maxlength=\"100\"><input type=\"hidden\" name=\"rsv_bp\" value=\"0\"><input type=\"hidden\" name=\"rsv_spt\" value=\"3\"><span class=\"btn_wr\"><input type=\"submit\" value=\"°Ù¶ÈÒ»ÏÂ\" id=\"su\" class=\"btn\" onmousedown=\"this.className='btn btn_h'\" onmouseout=\"this.className='btn'\"></span></form><span class=\"tools\"><span id=\"mHolder\"><div id=\"mCon\"><span>ÊäÈë·¨</span></div></span></span><ul id=\"mMenu\"><li><a href=\"#\" name=\"ime_hw\">ÊÖÐ´</a></li><li><a href=\"#\" name=\"ime_py\">Æ´Òô</a></li><li class=\"ln\"></li><li><a href=\"#\" name=\"ime_cl\">¹Ø±Õ</a></li></ul></div>\n    6  <p id=\"lk\"><a href=\"http://hi.baidu.com\">¿Õ¼ä</a>¡¡<a href=\"http://baike.baidu.com\">°Ù¿Æ</a>¡¡<a href=\"http://www.hao123.com\">hao123</a><span> | <a href=\"/more/\">¸ü¶à&gt;&gt;</a></span></p><p id=\"lm\"></p><p><a id=\"seth\" onClick=\"this.setHomePage('http://www.baidu.com')\" href=\"http://utility.baidu.com/traf/click.php?id=215&url=http://www.baidu.com\" onmousedown=\"return ns_c({'fm':'behs','tab':'homepage','pos':0})\">°Ñ°Ù¶ÈÉèÎªÖ÷Ò³</a><a id=\"setf\" onClick=\"fa(this)\" href=\"javascript:void(0)\" onmousedown=\"return ns_c({'fm':'behs','tab':'favorites','pos':0})\">°Ñ°Ù¶È¼ÓÈëÊÕ²Ø¼Ð</a></p>\n    7  <p id=\"lh\"><a href=\"http://e.baidu.com/?refer=888\">¼ÓÈë°Ù¶ÈÍÆ¹ã</a> | <a href=\"http://top.baidu.com\">ËÑË÷·çÔÆ°ñ</a> | <a href=\"http://home.baidu.com\">¹ØÓÚ°Ù¶È</a> | <a href=\"http://ir.baidu.com\">About Baidu</a></p><p id=\"cp\">&copy;2011 Baidu <a href=\"/duty/\">Ê¹ÓÃ°Ù¶ÈÇ°±Ø¶Á</a> <a href=\"http://www.miibeian.gov.cn\" target=\"_blank\">¾©ICPÖ¤030173ºÅ</a> <img src=\"http://gimg.baidu.com/img/gs.gif\"></p></div></body>\n    8  \n    9: <script>var w=window,d=document,n=navigator,k=d.f.wd,a=d.getElementById(\"nv\").getElementsByTagName(\"a\"),isIE=n.userAgent.indexOf(\"MSIE\")!=-1&&!window.opera;for(var i=0;i<a.length;i++){a[i].onclick=function(){if(k.value.length>0){var C=this,A=C.href,B=encodeURIComponent(k.value);if(A.indexOf(\"q=\")!=-1){C.href=A.replace(/q=[^&\\x24]*/,\"q=\"+B)}else{this.href+=\"?q=\"+B}}}}(function(){if(/q=([^&]+)/.test(location.search)){k.value=decodeURIComponent(RegExp[\"\\x241\"])}})();if(n.cookieEnabled&&!/sug?=0/.test(d.cookie)){d.write(\"<script src=http://www.baidu.com/js/bdsug.js?v=1.0.3.0><\\/script>\")}function addEV(C,B,A){if(w.attachEvent){C.attachEvent(\"on\"+B,A)}else{if(w.addEventListener){C.addEventListener(B,A,false)}}}function G(A){return d.getElementById(A)}function ns_c(E){var F=encodeURIComponent(window.document.location.href),D=\"\",A=\"\",B=\"\",C=window[\"BD_PS_C\"+(new Date()).getTime()]=new Image();for(v in E){A=E[v];D+=v+\"=\"+A+\"&\"}B=\"&mu=\"+F;C.src=\"http://nsclick.baidu.com/v.gif?pid=201&pj=www&\"+D+\"path=\"+F+\"&t=\"+new Date().getTime();return true}if(/\\bbdime=[12]/.test(d.cookie)){document.write(\"<script src=http://www.baidu.com/cache/ime/js/openime-1.0.0.js><\\/script>\")}(function(){var B=G(\"user\"),A=G(\"userMenu\");if(B&&A){addEV(B,\"click\",function(C){A.style.display=A.style.display==\"block\"?\"none\":\"block\";window.event?C.cancelBubble=true:C.stopPropagation()});addEV(document,\"click\",function(){A.style.display=\"none\"})}})();(function(){var E=G(\"u\").getElementsByTagName(\"a\"),C=G(\"nv\").getElementsByTagName(\"a\"),I=G(\"lk\").getElementsByTagName(\"a\"),B=\"\";var A=[\"news\",\"tieba\",\"zhidao\",\"mp3\",\"img\",\"video\",\"map\"];var H=[\"hi\",\"baike\",\"hao123\",\"more\"];if(G(\"un\")&&G(\"un\").innerHTML!=\"\"){B=G(\"un\").innerHTML}function D(J){addEV(J,\"mousedown\",function(L){var L=L||window.event;var K=L.target||L.srcElement;ns_c({fm:\"behs\",tab:K.name||\"tj_user\",un:encodeURIComponent(B)})})}for(var F=0;F<E.length;F++){D(E[F])}for(var F=0;F<C.length;F++){C[F].name=\"tj_\"+A[F];D(C[F])}for(var F=0;F<I.length;F++){I[F].name=\"tj_\"+H[F];D(I[F])}})();addEV(w,\"load\",function(){k.focus()});w.onunload=function(){};</script>\n   10  \n   11  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\greek-test.js:\n   16      variations: ['windows-1253', 'win-1253', 'win1253', 'cp1253', 'cp-1253', 1253],\n   17      encodedStrings: {\n   18:         empty: new Buffer(''),\n   19:         hi: new Buffer('\\xc3\\xe5\\xe9\\xdc!', 'binary'),\n   20:         ascii: new Buffer(baseStrings.ascii, 'binary'),\n   21:         greek: new Buffer('\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xdc\\xdd\\xde\\xdf\\xfc\\xfd\\xfe\\xa2\\xb8\\xb9\\xba\\xbc\\xbe\\xbf\\xfa\\xfb\\xda\\xdb', 'binary'),\n   22      }\n   23  }, {\n   ..\n   25      variations: ['iso-8859-7', 'greek', 'greek8', 'cp28597', 'cp-28597', 28597],\n   26      encodedStrings: {\n   27:         empty: new Buffer(''),\n   28:         hi: new Buffer('\\xc3\\xe5\\xe9\\xdc!', 'binary'),\n   29:         ascii: new Buffer(baseStrings.ascii, 'binary'),\n   30:         greek: new Buffer('\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xdc\\xdd\\xde\\xdf\\xfc\\xfd\\xfe\\xb6\\xb8\\xb9\\xba\\xbc\\xbe\\xbf\\xfa\\xfb\\xda\\xdb', 'binary'),\n   31      }\n   32  }, {\n   ..\n   34      variations: ['cp-737', 737],\n   35      encodedStrings: {\n   36:         empty: new Buffer(''),\n   37:         hi: new Buffer('\\x82\\x9c\\xa0\\xe1!', 'binary'),\n   38:         ascii: new Buffer(baseStrings.ascii, 'binary'),\n   39:         greek: new Buffer('\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xab\\xac\\xad\\xae\\xaf\\xe0\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\xe1\\xe2\\xe3\\xe5\\xe6\\xe7\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xe4\\xe8\\xf4\\xf5', 'binary'),\n   40      }\n   41  }];\n   ..\n   47      var tests = {\n   48          \"Convert to empty buffer\": function() {\n   49:             assert.strictEqual(iconv.toEncoding(\"\", enc).toString('binary'), new Buffer('').toString('binary'));\n   50          },\n   51          \"Convert from empty buffer\": function() {\n   52:             assert.strictEqual(iconv.fromEncoding(new Buffer(''), enc), \"\");\n   53          },\n   54          \"Convert from buffer\": function() {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\main-test.js:\n   12          assert.ok(iconv.toEncoding(testString, \"utf8\") instanceof Buffer);\n   13          \n   14:         var s = iconv.fromEncoding(new Buffer(testString), \"utf8\");\n   15          assert.strictEqual(Object.prototype.toString.call(s), \"[object String]\");\n   16      },\n   ..\n   18          ['utf8', \"UTF-8\", \"UCS2\", \"binary\", \"\"].forEach(function(enc) {\n   19              assert.strictEqual(iconv.toEncoding(testStringLatin1, enc).toString(enc), testStringLatin1);\n   20:             assert.strictEqual(iconv.fromEncoding(new Buffer(testStringLatin1, enc), enc), testStringLatin1);\n   21          });\n   22      },\n   23      \"Base64 correctly encoded/decoded\": function() {    \n   24          assert.strictEqual(iconv.toEncoding(testStringBase64, \"base64\").toString(\"binary\"), testString);\n   25:         assert.strictEqual(iconv.fromEncoding(new Buffer(testString, \"binary\"), \"base64\"), testStringBase64);\n   26      },\n   27      \"Latin1 correctly encoded/decoded\": function() {    \n   28          assert.strictEqual(iconv.toEncoding(testStringLatin1, \"latin1\").toString(\"binary\"), testStringLatin1);\n   29:         assert.strictEqual(iconv.fromEncoding(new Buffer(testStringLatin1, \"binary\"), \"latin1\"), testStringLatin1);\n   30      },\n   31      \"Convert from string, not buffer (binary encoding used)\": function() {\n   ..\n   33      },\n   34      \"Convert to string, not buffer (utf8 used)\": function() {\n   35:         var res = iconv.toEncoding(new Buffer(testStringLatin1, \"utf8\"));\n   36          assert.ok(res instanceof Buffer);\n   37          assert.strictEqual(res.toString(\"utf8\"), testStringLatin1);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\performance.js:\n   14  var str = encodingStrings[encoding];\n   15  if (!str) {\n   16:     throw new Error('Don\\'t support ' + encoding + ' performance test.');\n   17  }\n   18  for (var i = 0; i < 13; i++) {\n   ..\n   24  \n   25  var start = Date.now();\n   26: var converter = new iconv.Iconv(\"utf8\", encoding);\n   27  for (var i = 0; i < convertTimes; i++) {\n   28      var b = converter.convert(str);\n   ..\n   48  \n   49  var start = Date.now();\n   50: var converter = new iconv.Iconv(encoding, \"utf8\");\n   51  for (var i = 0; i < convertTimes; i++) {\n   52      var s = converter.convert(buf).toString();\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\iconv-lite\\test\\turkish-test.js:\n   16      },\n   17      encodedStrings: {\n   18:         empty: new Buffer(''),\n   19:         ascii: new Buffer(ascii, 'binary'),\n   20:         turkish: new Buffer(\n   21              '\\x80\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c' +\n   22              '\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9f' +\n   ..\n   39      },\n   40      encodedStrings: {\n   41:         empty: new Buffer(''),\n   42:         ascii: new Buffer(ascii, 'binary'),\n   43:         turkish: new Buffer(\n   44              '\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf' +\n   45              '\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf' +\n   ..\n   58      var tests = {\n   59          \"Convert to empty buffer\": function() {\n   60:             assert.strictEqual(iconv.toEncoding(\"\", enc).toString('binary'), new Buffer('').toString('binary'));\n   61          },\n   62          \"Convert from empty buffer\": function() {\n   63:             assert.strictEqual(iconv.fromEncoding(new Buffer(''), enc), \"\");\n   64          },\n   65          \"Convert from buffer\": function() {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\HISTORY.md:\n   33  ------------------\n   34  \n   35: * Full rewrite. New architecture. Fast one-stage parsing.\n   36  * Changed custom types API.\n   37  * Added YAML dumper.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\package.json:\n   54      \"node\": \">= 0.6.0\"\n   55    },\n   56:   \"readme\": \"JS-YAML - YAML 1.2 parser and serializer for JavaScript\\n=======================================================\\n\\n[![Build Status](https://secure.travis-ci.org/nodeca/js-yaml.png)](http://travis-ci.org/nodeca/js-yaml)\\n\\n[Online Demo](http://nodeca.github.com/js-yaml/)\\n\\n\\nThis is an implementation of [YAML](http://yaml.org/), a human friendly data\\nserialization language. Started as [PyYAML](http://pyyaml.org/) port, it was\\ncompletely rewritten from scratch. Now it's very fast, and supports 1.2 spec.\\n\\n\\nBreaking changes in 1.x.x -> 2.0.x\\n----------------------------------\\n\\nIf your have not used __custom__ tags or loader classes - no changes needed. Just\\nupgrade library and enjoy high parse speed.\\n\\nIn other case, you should rewrite your tag constructors and custom loader\\nclasses, to conform new schema-based API. See\\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) and\\n[wiki](https://github.com/nodeca/js-yaml/wiki) for details.\\nNote, that parser internals were completely rewritten.\\n\\n\\nInstallation\\n------------\\n\\n### YAML module for node.js\\n\\n```\\nnpm install js-yaml\\n```\\n\\n\\n### CLI executable\\n\\nIf you want to inspect your YAML files from CLI, install js-yaml globally:\\n\\n```\\nnpm install js-yaml -g\\n```\\n\\n#### Usage\\n\\n```\\nusage: js-yaml [-h] [-v] [-c] [-j] [-t] file\\n\\nPositional arguments:\\n  file           File with YAML document(s)\\n\\nOptional arguments:\\n  -h, --help     Show this help message and exit.\\n  -v, --version  Show program's version number and exit.\\n  -c, --compact  Display errors in compact mode\\n  -j, --to-json  Output a non-funky boring JSON\\n  -t, --trace    Show stack trace on error\\n```\\n\\n\\n### Bundled YAML library for browsers\\n\\n``` html\\n<script src=\\\"js-yaml.min.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\nvar doc = jsyaml.load('greeting: hello\\\\nname: world');\\n</script>\\n```\\n\\nBrowser support was done mostly for online demo. If you find any errors - feel\\nfree to send pull requests with fixes. Also note, that IE and other old browsers\\nneeds [es5-shims](https://github.com/kriskowal/es5-shim) to operate.\\n\\n\\nAPI\\n---\\n\\nHere we cover the most 'useful' methods. If you need advanced details (creating\\nyour own tags), see [wiki](https://github.com/nodeca/js-yaml/wiki) and\\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) for more\\ninfo.\\n\\nIn node.js JS-YAML automatically registers handlers for `.yml` and `.yaml`\\nfiles. You can load them just with `require`. That's mostly equivalent to\\ncalling `load()` on fetched content of a file. Just with one string!\\n\\n``` javascript\\nrequire('js-yaml');\\n\\n// Get document, or throw exception on error\\ntry {\\n  var doc = require('/home/ixti/example.yml');\\n  console.log(doc);\\n} catch (e) {\\n  console.log(e);\\n}\\n```\\n\\n\\n### load (string [ , options ])\\n\\nParses `string` as single YAML document. Returns a JavaScript object or throws\\n`YAMLException` on error.\\n\\nNOTE: This function **does not** understands multi-document sources, it throws\\nexception on those.\\n\\noptions:\\n\\n- `filename` _(default: null)_ - string to be used as a file path in\\n  error/warning messages.\\n- `strict` _(default - false)_ makes the loader to throw errors instead of\\n  warnings.\\n- `schema` _(default: `DEFAULT_SCHEMA`)_ - specifies a schema to use.\\n\\n\\n### loadAll (string, iterator [ , options ])\\n\\nSame as `load()`, but understands multi-document sources and apply `iterator` to\\neach document.\\n\\n``` javascript\\nvar yaml = require('js-yaml');\\n\\nyaml.loadAll(data, function (doc) {\\n  console.log(doc);\\n});\\n```\\n\\n\\n### safeLoad (string [ , options ])\\n\\nSame as `load()` but uses `SAFE_SCHEMA` by default - only recommended tags of\\nYAML specification (no JavaScript-specific tags, e.g. `!!js/regexp`).\\n\\n\\n### safeLoadAll (string, iterator [ , options ])\\n\\nSame as `loadAll()` but uses `SAFE_SCHEMA` by default - only recommended tags of\\nYAML specification (no JavaScript-specific tags, e.g. `!!js/regexp`).\\n\\n\\n### dump (object [ , options ])\\n\\nSerializes `object` as YAML document.\\n\\noptions:\\n\\n- `indent` _(default: 2)_ - indentation width to use (in spaces).\\n- `flowLevel` (default: -1) - specifies level of nesting, when to switch from\\n  block to flow style for collections. -1 means block style everwhere\\n- `styles` - \\\"tag\\\" => \\\"style\\\" map. Each tag may have own set of styles.\\n- `schema` _(default: `DEFAULT_SCHEMA`)_ specifies a schema to use.\\n\\nstyles:\\n\\n``` none\\n!!null\\n  \\\"canonical\\\"   => \\\"~\\\"\\n\\n!!int\\n  \\\"binary\\\"      => \\\"0b1\\\", \\\"0b101010\\\", \\\"0b1110001111010\\\"\\n  \\\"octal\\\"       => \\\"01\\\", \\\"052\\\", \\\"016172\\\"\\n  \\\"decimal\\\"     => \\\"1\\\", \\\"42\\\", \\\"7290\\\"\\n  \\\"hexadecimal\\\" => \\\"0x1\\\", \\\"0x2A\\\", \\\"0x1C7A\\\"\\n\\n!!null, !!bool, !!float\\n  \\\"lowercase\\\"   => \\\"null\\\", \\\"true\\\", \\\"false\\\", \\\".nan\\\", '.inf'\\n  \\\"uppercase\\\"   => \\\"NULL\\\", \\\"TRUE\\\", \\\"FALSE\\\", \\\".NAN\\\", '.INF'\\n  \\\"camelcase\\\"   => \\\"Null\\\", \\\"True\\\", \\\"False\\\", \\\".NaN\\\", '.Inf'\\n```\\n\\nBy default, !!int uses `decimal`, and !!null, !!bool, !!float use `lowercase`.\\n\\n\\n### safeDump (object [ , options ])\\n\\nSame as `dump()` but uses `SAFE_SCHEMA` by default - only recommended tags of\\nYAML specification (no JavaScript-specific tags, e.g. `!!js/regexp`).\\n\\n\\nSupported YAML types\\n--------------------\\n\\nThe list of standard YAML tags and corresponding JavaScipt types. See also\\n[YAML tag discussion](http://pyyaml.org/wiki/YAMLTagDiscussion) and\\n[YAML types repository](http://yaml.org/type/).\\n\\n```\\n!!null ''                   # null\\n!!bool 'yes'                # bool\\n!!int '3...'                # number\\n!!float '3.14...'           # number\\n!!binary '...base64...'     # buffer\\n!!timestamp 'YYYY-...'      # date\\n!!omap [ ... ]              # array of key-value pairs\\n!!pairs [ ... ]             # array or array pairs\\n!!set { ... }               # array of objects with given keys and null values\\n!!str '...'                 # string\\n!!seq [ ... ]               # array\\n!!map { ... }               # object\\n```\\n\\n**JavaScript-specific tags**\\n\\n```\\n!!js/regexp /pattern/gim            # RegExp\\n!!js/undefined ''                   # Undefined\\n!!js/function 'function () {...}'   # Function\\n```\\n\\n\\n\\n\\n## Caveats\\n\\nNote, that you use arrays or objects as key in JS-YAML. JS do not allows objects\\nor array as keys, and stringifies (by calling .toString method) them at the\\nmoment of adding them.\\n\\n``` yaml\\n---\\n? [ foo, bar ]\\n: - baz\\n? { foo: bar }\\n: - baz\\n  - baz\\n```\\n\\n``` javascript\\n{ \\\"foo,bar\\\": [\\\"baz\\\"], \\\"[object Object]\\\": [\\\"baz\\\", \\\"baz\\\"] }\\n```\\n\\nAlso, reading of properties on implicit block mapping keys is not supported yet.\\nSo, the following YAML document cannot be loaded.\\n\\n``` yaml\\n&anchor foo:\\n  foo: bar\\n  *anchor: duplicate key\\n  baz: bat\\n  *anchor: duplicate key\\n```\\n\\n## License\\n\\nView the [LICENSE](https://github.com/nodeca/js-yaml/blob/master/LICENSE) file\\n(MIT).\\n\",\n   57    \"readmeFilename\": \"README.md\",\n   58    \"_id\": \"js-yaml@2.0.5\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\README.md:\n   19  \n   20  In other case, you should rewrite your tag constructors and custom loader\n   21: classes, to conform new schema-based API. See\n   22  [examples](https://github.com/nodeca/js-yaml/tree/master/examples) and\n   23  [wiki](https://github.com/nodeca/js-yaml/wiki) for details.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\bin\\js-yaml.js:\n   21  \n   22  \n   23: var cli = new ArgumentParser({\n   24    prog:     'js-yaml',\n   25    version:  require('../package.json').version,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\examples\\custom_types.js:\n   21    if (points) {\n   22      if (!points.every(function (point) { return point instanceof Point; })) {\n   23:       throw new Error('A non-Point inside a points array!');\n   24      }\n   25    }\n   ..\n   34  // Let define YAML types to load and dump our Point/Space objects.\n   35  \n   36: var pointYamlType = new yaml.Type('!point', {\n   37    // The information used to load a Point.\n   38    loader: {\n   ..\n   41        // It must contain exactly tree elements.\n   42        if (3 === object.length) {\n   43:         return new Point(object[0], object[1], object[2]);\n   44  \n   45        // Otherwise, it is NOT a Point.\n   ..\n   61  \n   62  \n   63: var spaceYamlType = new yaml.Type('!space', {\n   64    loader: {\n   65      kind: 'object', // 'object' here means 'mapping' in YAML.\n   66      resolver: function (object) {\n   67:       return new Space(object.height, object.width, object.points);\n   68      }\n   69    },\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\examples\\sample_document.yaml:\n   45      ? Ken Griffey\n   46    # Flow style\n   47:   baseball teams: !!set { Boston Red Sox, Detroit Tigers, New York Yankees }\n   48  \n   49  # http://yaml.org/type/seq.html -----------------------------------------------#\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml.js:\n    8  function deprecated(name) {\n    9    return function () {\n   10:     throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n   11    };\n   12  }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\dumper.js:\n  119      length = 8;\n  120    } else {\n  121:     throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  122    }\n  123  \n  ...\n  361              _result = type.dumper.representer[style](object, style);\n  362            } else {\n  363:             throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n  364            }\n  365  \n  ...\n  369            } else {\n  370              if (explicit) {\n  371:               throw new YAMLException('cannot represent an object of !<' + type.tag + '> type');\n  372              } else {\n  373                continue;\n  ...\n  416        }\n  417      } else {\n  418:       throw new YAMLException('unacceptabe kind of an object to dump (' + kind + ')');\n  419      }\n  420  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\loader.js:\n  146  \n  147    function generateError(message) {\n  148:     return new YAMLException(\n  149        message,\n  150:       new Mark(filename, input, position, line, (position - lineStart)));\n  151    }\n  152  \n  ...\n 1231          allowBlockScalars,\n 1232          allowBlockCollections,\n 1233:         atNewLine  = false,\n 1234          isIndented = true,\n 1235          hasContent = false,\n ....\n 1253      if (allowToSeek) {\n 1254        if (skipSeparationSpace(true, -1)) {\n 1255:         atNewLine = true;\n 1256  \n 1257          if (lineIndent === parentIndent) {\n ....\n 1270        while (readTagProperty() || readAnchorProperty()) {\n 1271          if (skipSeparationSpace(true, -1)) {\n 1272:           atNewLine = true;\n 1273  \n 1274            if (lineIndent > parentIndent) {\n ....\n 1290  \n 1291      if (allowBlockCollections) {\n 1292:       allowBlockCollections = atNewLine || allowCompact;\n 1293      }\n 1294  \n ....\n 1524        received = true;\n 1525      } else {\n 1526:       throw new YAMLException('expected a single document in the stream, but found more');\n 1527      }\n 1528    }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\schema.js:\n   52    this.implicit.forEach(function (type) {\n   53      if (null !== type.loader && 'string' !== type.loader.kind) {\n   54:       throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n   55      }\n   56    });\n   ..\n   80  \n   81    default:\n   82:     throw new YAMLException('Wrong number of arguments for Schema.create function');\n   83    }\n   84  \n   ..\n   87  \n   88    if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n   89:     throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n   90    }\n   91  \n   92    if (!types.every(function (type) { return type instanceof Type; })) {\n   93:     throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n   94    }\n   95  \n   96:   return new Schema({\n   97      include: schemas,\n   98      explicit: types\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type.js:\n   14  \n   15    if (null === this.loader && null === this.dumper) {\n   16:     throw new YAMLException('Incomplete YAML type definition. \"loader\" or \"dumper\" setting must be specified.');\n   17    }\n   18  \n   19    if (null !== this.loader) {\n   20:     this.loader = new Type.Loader(this.loader);\n   21    }\n   22  \n   23    if (null !== this.dumper) {\n   24:     this.dumper = new Type.Dumper(this.dumper);\n   25    }\n   26  }\n   ..\n   36        'array'  !== this.kind &&\n   37        'object' !== this.kind) {\n   38:     throw new YAMLException('Unacceptable \"kind\" setting of a type loader.');\n   39    }\n   40  };\n   ..\n   75        'object'    !== this.kind &&\n   76        'function'  !== this.kind) {\n   77:     throw new YAMLException('Unacceptable \"kind\" setting of a type dumper.');\n   78    }\n   79  };\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\schema\\default.js:\n    5  \n    6  \n    7: module.exports = Schema.DEFAULT = new Schema({\n    8    include: [\n    9      require('./safe')\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\schema\\minimal.js:\n    5  \n    6  \n    7: module.exports = new Schema({\n    8    explicit: [\n    9      require('../type/str'),\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\schema\\safe.js:\n    5  \n    6  \n    7: module.exports = new Schema({\n    8    include: [\n    9      require('./minimal')\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\binary.js:\n   69      return NIL;\n   70    } else {\n   71:     return new NodeBuffer(result);\n   72    }\n   73  }\n   ..\n  106  \n  107  \n  108: module.exports = new Type('tag:yaml.org,2002:binary', {\n  109    loader: {\n  110      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\bool.js:\n   58  \n   59  \n   60: module.exports = new Type('tag:yaml.org,2002:bool', {\n   61    loader: {\n   62      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\float.js:\n    6  \n    7  \n    8: var YAML_FLOAT_PATTERN = new RegExp(\n    9    '^(?:[-+]?(?:[0-9][0-9_]*)\\\\.[0-9_]*(?:[eE][-+][0-9]+)?' +\n   10    '|\\\\.[0-9_]+(?:[eE][-+][0-9]+)?' +\n   ..\n   90  \n   91  \n   92: module.exports = new Type('tag:yaml.org,2002:float', {\n   93    loader: {\n   94      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\int.js:\n    6  \n    7  \n    8: var YAML_INTEGER_PATTERN = new RegExp(\n    9    '^(?:[-+]?0b[0-1_]+' +\n   10    '|[-+]?0[0-7_]+' +\n   ..\n   62  \n   63  \n   64: module.exports = new Type('tag:yaml.org,2002:int', {\n   65    loader: {\n   66      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\map.js:\n    5  \n    6  \n    7: module.exports = new Type('tag:yaml.org,2002:map', {\n    8    loader: {\n    9      kind: 'object'\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\merge.js:\n   11  \n   12  \n   13: module.exports = new Type('tag:yaml.org,2002:merge', {\n   14    loader: {\n   15      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\null.js:\n   19  \n   20  \n   21: module.exports = new Type('tag:yaml.org,2002:null', {\n   22    loader: {\n   23      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\omap.js:\n   46  \n   47  \n   48: module.exports = new Type('tag:yaml.org,2002:omap', {\n   49    loader: {\n   50      kind: 'array',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\pairs.js:\n   12    var index, length, pair, keys, result;\n   13  \n   14:   result = new Array(object.length);\n   15  \n   16    for (index = 0, length = object.length; index < length; index += 1) {\n   ..\n   34  \n   35  \n   36: module.exports = new Type('tag:yaml.org,2002:pairs', {\n   37    loader: {\n   38      kind: 'array',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\seq.js:\n    5  \n    6  \n    7: module.exports = new Type('tag:yaml.org,2002:seq', {\n    8    loader: {\n    9      kind: 'array'\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\set.js:\n   24  \n   25  \n   26: module.exports = new Type('tag:yaml.org,2002:set', {\n   27    loader: {\n   28      kind: 'object',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\str.js:\n    5  \n    6  \n    7: module.exports = new Type('tag:yaml.org,2002:str', {\n    8    loader: {\n    9      kind: 'string'\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\timestamp.js:\n    6  \n    7  \n    8: var YAML_TIMESTAMP_REGEXP = new RegExp(\n    9    '^([0-9][0-9][0-9][0-9])'          + // [1] year\n   10    '-([0-9][0-9]?)'                   + // [2] month\n   ..\n   36  \n   37    if (!match[4]) { // no hour\n   38:     return new Date(Date.UTC(year, month, day));\n   39    }\n   40  \n   ..\n   64    }\n   65  \n   66:   data = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n   67  \n   68    if (delta) {\n   ..\n   79  \n   80  \n   81: module.exports = new Type('tag:yaml.org,2002:timestamp', {\n   82    loader: {\n   83      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\js\\function.js:\n   33      // Esprima's ranges include the first '{' and the last '}' characters on\n   34      // function expressions. So cut them out.\n   35:     return new Function(params, source.slice(body[0]+1, body[1]-1));\n   36    } catch (err) {\n   37      return NIL;\n   ..\n   45  \n   46  \n   47: module.exports = new Type('tag:yaml.org,2002:js/function', {\n   48    loader: {\n   49      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\js\\regexp.js:\n   18  \n   19    try {\n   20:     return new RegExp(regexp, modifiers);\n   21    } catch (error) {\n   22      return NIL;\n   ..\n   44  \n   45  \n   46: module.exports = new Type('tag:yaml.org,2002:js/regexp', {\n   47    loader: {\n   48      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\lib\\js-yaml\\type\\js\\undefined.js:\n   17  \n   18  \n   19: module.exports = new Type('tag:yaml.org,2002:js/undefined', {\n   20    loader: {\n   21      kind: 'string',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\package.json:\n   44      \"node\": \">= 0.6.0\"\n   45    },\n   46:   \"readme\": \"argparse\\n========\\n\\n[![Build Status](https://secure.travis-ci.org/nodeca/argparse.png?branch=master)](http://travis-ci.org/nodeca/argparse)\\n\\nCLI arguments parser for node.js. Javascript port of python's\\n[argparse](http://docs.python.org/dev/library/argparse.html) module\\n(original version 3.2). That's a full port, except some very rare options,\\nrecorded in issue tracker.\\n\\n**NB.** Method names changed to camelCase. See [generated docs](http://nodeca.github.com/argparse/).\\n\\n\\nExample\\n=======\\n\\ntest.js file:\\n\\n```javascript\\n#!/usr/bin/env node\\n'use strict';\\n\\nvar ArgumentParser = require('../lib/argparse').ArgumentParser;\\nvar parser = new ArgumentParser({\\n  version: '0.0.1',\\n  addHelp:true,\\n  description: 'Argparse example'\\n});\\nparser.addArgument(\\n  [ '-f', '--foo' ],\\n  {\\n    help: 'foo bar'\\n  }\\n);\\nparser.addArgument(\\n  [ '-b', '--bar' ],\\n  {\\n    help: 'bar foo'\\n  }\\n);\\nvar args = parser.parseArgs();\\nconsole.dir(args);\\n```\\n\\nDisplay help:\\n\\n```\\n$ ./test.js -h\\nusage: example.js [-h] [-v] [-f FOO] [-b BAR]\\n\\nArgparse example\\n\\nOptional arguments:\\n  -h, --help         Show this help message and exit.\\n  -v, --version      Show program's version number and exit.\\n  -f FOO, --foo FOO  foo bar\\n  -b BAR, --bar BAR  bar foo\\n```\\n\\nParse arguments:\\n\\n```\\n$ ./test.js -f=3 --bar=4\\n{ foo: '3', bar: '4' }\\n```\\n\\nMore [examples](https://github.com/nodeca/argparse/tree/master/examples).\\n\\n\\nArgumentParser objects\\n======================\\n\\n```\\nnew ArgumentParser({paramters hash});\\n```\\n\\nCreates a new ArgumentParser object.\\n\\n**Supported params:**\\n\\n- ```description``` - Text to display before the argument help.\\n- ```epilog``` - Text to display after the argument help.\\n- ```addHelp``` - Add a -h/–help option to the parser. (default: True)\\n- ```argumentDefault``` - Set the global default value for arguments. (default: None)\\n- ```parents``` - A list of ArgumentParser objects whose arguments should also be included.\\n- ```prefixChars``` - The set of characters that prefix optional arguments. (default: ‘-‘)\\n- ```formatterClass``` - A class for customizing the help output.\\n- ```prog``` - The name of the program (default: sys.argv[0])\\n- ```usage``` - The string describing the program usage (default: generated)\\n- ```conflictHandler``` - Usually unnecessary, defines strategy for resolving conflicting optionals.\\n\\n**Not supportied yet**\\n\\n- ```fromfilePrefixChars``` - The set of characters that prefix files from which additional arguments should be read.\\n\\n\\nDetails in [original ArgumentParser guide](http://docs.python.org/dev/library/argparse.html#argumentparser-objects)\\n\\n\\naddArgument() method\\n====================\\n\\n```\\nArgumentParser.addArgument([names or flags], {options})\\n```\\n\\nDefines how a single command-line argument should be parsed.\\n\\n- ```name or flags``` - Either a name or a list of option strings, e.g. foo or -f, --foo.\\n\\nOptions:\\n\\n- ```action``` - The basic type of action to be taken when this argument is encountered at the command line.\\n- ```nargs```- The number of command-line arguments that should be consumed.\\n- ```constant``` - A constant value required by some action and nargs selections.\\n- ```defaultValue``` - The value produced if the argument is absent from the command line.\\n- ```type``` - The type to which the command-line argument should be converted.\\n- ```choices``` - A container of the allowable values for the argument.\\n- ```required``` - Whether or not the command-line option may be omitted (optionals only).\\n- ```help``` - A brief description of what the argument does.\\n- ```metavar``` - A name for the argument in usage messages.\\n- ```dest``` - The name of the attribute to be added to the object returned by parseArgs().\\n\\nDetails in [original add_argument guide](http://docs.python.org/dev/library/argparse.html#the-add-argument-method)\\n\\n\\nAction (some details)\\n================\\n\\nArgumentParser objects associate command-line arguments with actions.\\nThese actions can do just about anything with the command-line arguments associated\\nwith them, though most actions simply add an attribute to the object returned by\\nparseArgs(). The action keyword argument specifies how the command-line arguments\\nshould be handled. The supported actions are:\\n\\n- ```store``` - Just stores the argument’s value. This is the default action.\\n- ```storeConst``` - Stores value, specified by the const keyword argument.\\n  (Note that the const keyword argument defaults to the rather unhelpful None.)\\n  The 'storeConst' action is most commonly used with optional arguments, that\\n  specify some sort of flag.\\n- ```storeTrue``` and ```storeFalse``` - Stores values True and False\\n  respectively. These are special cases of 'storeConst'.\\n- ```append``` - Stores a list, and appends each argument value to the list.\\n  This is useful to allow an option to be specified multiple times.\\n- ```appendConst``` - Stores a list, and appends value, specified by the\\n  const keyword argument to the list. (Note, that the const keyword argument defaults\\n  is None.) The 'appendConst' action is typically used when multiple arguments need\\n  to store constants to the same list.\\n- ```count``` - Counts the number of times a keyword argument occurs. For example,\\n  used for increasing verbosity levels.\\n- ```help``` - Prints a complete help message for all the options in the current\\n  parser and then exits. By default a help action is automatically added to the parser.\\n  See ArgumentParser for details of how the output is created.\\n- ```version``` - Prints version information and exit. Expects a `version=`\\n  keyword argument in the addArgument() call.\\n\\nDetails in [original action guide](http://docs.python.org/dev/library/argparse.html#action)\\n\\n\\nSub-commands\\n============\\n\\nArgumentParser.addSubparsers()\\n\\nMany programs split their functionality into a number of sub-commands, for\\nexample, the svn program can invoke sub-commands like `svn checkout`, `svn update`,\\nand `svn commit`. Splitting up functionality this way can be a particularly good\\nidea when a program performs several different functions which require different\\nkinds of command-line arguments. `ArgumentParser` supports creation of such\\nsub-commands with `addSubparsers()` method. The `addSubparsers()` method is\\nnormally called with no arguments and returns an special action object.\\nThis object has a single method `addParser()`, which takes a command name and\\nany `ArgumentParser` constructor arguments, and returns an `ArgumentParser` object\\nthat can be modified as usual.\\n\\nExample:\\n\\nsub_commands.js\\n```javascript\\n#!/usr/bin/env node\\n'use strict';\\n\\nvar ArgumentParser = require('../lib/argparse').ArgumentParser;\\nvar parser = new ArgumentParser({\\n  version: '0.0.1',\\n  addHelp:true,\\n  description: 'Argparse examples: sub-commands',\\n});\\n\\nvar subparsers = parser.addSubparsers({\\n  title:'subcommands',\\n  dest:\\\"subcommand_name\\\"\\n});\\n\\nvar bar = subparsers.addParser('c1', {addHelp:true});\\nbar.addArgument(\\n  [ '-f', '--foo' ],\\n  {\\n    action: 'store',\\n    help: 'foo3 bar3'\\n  }\\n);\\nvar bar = subparsers.addParser(\\n  'c2',\\n  {aliases:['co'], addHelp:true}\\n);\\nbar.addArgument(\\n  [ '-b', '--bar' ],\\n  {\\n    action: 'store',\\n    type: 'int',\\n    help: 'foo3 bar3'\\n  }\\n);\\n\\nvar args = parser.parseArgs();\\nconsole.dir(args);\\n\\n```\\n\\nDetails in [original sub-commands guide](http://docs.python.org/dev/library/argparse.html#sub-commands)\\n\\n\\nContributors\\n============\\n\\n- [Eugene Shkuropat](https://github.com/shkuropat)\\n- [Paul Jacobson](https://github.com/hpaulj)\\n\\n[others](https://github.com/nodeca/argparse/graphs/contributors)\\n\\nLicense\\n=======\\n\\nCopyright (c) 2012 [Vitaly Puzrin](https://github.com/puzrin).\\nReleased under the MIT license. See\\n[LICENSE](https://github.com/nodeca/argparse/blob/master/LICENSE) for details.\\n\\n\\n\",\n   47    \"readmeFilename\": \"README.md\",\n   48    \"_id\": \"argparse@0.1.15\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\README.md:\n   22  \n   23  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n   24: var parser = new ArgumentParser({\n   25    version: '0.0.1',\n   26    addHelp:true,\n   ..\n   72  \n   73  ```\n   74: new ArgumentParser({paramters hash});\n   75  ```\n   76  \n   77: Creates a new ArgumentParser object.\n   78  \n   79  **Supported params:**\n   ..\n  182  \n  183  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n  184: var parser = new ArgumentParser({\n  185    version: '0.0.1',\n  186    addHelp:true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\arguments.js:\n    3  \n    4  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n    5: var parser = new ArgumentParser({\n    6    version: '0.0.1',\n    7    addHelp: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\choice.js:\n    3  \n    4  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n    5: var parser = new ArgumentParser({\n    6    version: '0.0.1',\n    7    addHelp: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\constants.js:\n    3  \n    4  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n    5: var parser = new ArgumentParser({\n    6    version: '0.0.1',\n    7    addHelp: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\help.js:\n    3  \n    4  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n    5: var parser = new ArgumentParser({\n    6    version: '0.0.1',\n    7    addHelp: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\nargs.js:\n    3  \n    4  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n    5: var parser = new ArgumentParser({\n    6    version: '0.0.1',\n    7    addHelp: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\parents.js:\n    5  \n    6  var args;\n    7: var parent_parser = new ArgumentParser({ addHelp: false });\n    8  // note addHelp:false to prevent duplication of the -h option\n    9  parent_parser.addArgument(\n   ..\n   12  );\n   13  \n   14: var foo_parser = new ArgumentParser({\n   15    parents: [ parent_parser ],\n   16    description: 'child1'\n   ..\n   20  console.log(args);\n   21  \n   22: var bar_parser = new ArgumentParser({\n   23    parents: [ parent_parser ],\n   24    description: 'child2'\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\prefix_chars.js:\n    3  \n    4  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n    5: var parser = new ArgumentParser({\n    6    version: '0.0.1',\n    7    addHelp: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\sub_commands.js:\n    3  \n    4  var ArgumentParser = require('../lib/argparse').ArgumentParser;\n    5: var parser = new ArgumentParser({\n    6    version: '0.0.1',\n    7    addHelp: true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\sum.js:\n    5  \n    6  var ArgumentParser  = require('../lib/argparse').ArgumentParser;\n    7: var parser = new ArgumentParser({ description: 'Process some integers.' });\n    8  \n    9  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\examples\\testformatters.js:\n   15  print(\"TEST argparse.ArgumentDefaultsHelpFormatter\");\n   16  \n   17: parser = new argparse.ArgumentParser({\n   18    debug: true,\n   19    formatterClass: argparse.ArgumentDefaultsHelpFormatter,\n   ..\n   82  print(\"TEST argparse.RawDescriptionHelpFormatter\");\n   83  \n   84: parser = new argparse.ArgumentParser({\n   85    debug: true,\n   86    prog: 'PROG',\n   ..\n  149  print(\"TEST argparse.RawTextHelpFormatter\");\n  150  \n  151: parser = new argparse.ArgumentParser({\n  152    debug: true,\n  153    prog: 'PROG',\n  ...\n  220  print(\"TEST metavar as a tuple\");\n  221  \n  222: parser = new argparse.ArgumentParser({\n  223    prog: 'PROG'\n  224  });\n  ...\n  253  ustring = ustring.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]');\n  254  // print(ustring)\n  255: assert(helptext.match(new RegExp(ustring)));\n  256  \n  257  /*\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action.js:\n   23   * - `version`\n   24   *\n   25:  * Information about action options see [[Action.new]]\n   26   *\n   27   * See also [original guide](http://docs.python.org/dev/library/argparse.html#action)\n   ..\n   37  \n   38  /**\n   39:  * new Action(options)\n   40   *\n   41   * Base class for all actions. Used only for inherits\n   ..\n   85  \n   86    if (!(this.optionStrings instanceof Array)) {\n   87:     throw new Error('optionStrings should be an array');\n   88    }\n   89    if (this.required !== undefined && typeof(this.required) !== 'boolean') {\n   90:     throw new Error('required should be a boolean');\n   91    }\n   92  };\n   ..\n  143   **/\n  144  Action.prototype.call = function () {\n  145:   throw new Error('.call() not defined');// Not Implemented error\n  146  };\n  147  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action_container.js:\n   33  \n   34  /**\n   35:  * new ActionContainer(options)\n   36   *\n   37   * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n   ..\n   84    // determines whether an \"option\" looks like a negative number\n   85    // -1, -1.5 -5e+4\n   86:   this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');\n   87  \n   88    // whether or not there are any optionals that look like negative\n   ..\n  125  /**\n  126   * ActionContainer#setDefaults(options) -> Void\n  127:  * - options (object):hash of options see [[Action.new]]\n  128   *\n  129   * Set defaults\n  ...\n  136  \n  137    // if these defaults match any existing arguments, replace the previous\n  138:   // default on the object with the new one\n  139    this._actions.forEach(function (action) {\n  140      if (action.dest in options) {\n  ...\n  168   * ActionContainer#addArgument(args, options) -> Object\n  169   * - args (Array): array of argument keys\n  170:  * - options (Object): action objects see [[Action.new]]\n  171   *\n  172   * #### Examples\n  ...\n  179  \n  180    if (!_.isArray(args)) {\n  181:     throw new TypeError('addArgument first argument should be an array');\n  182    }\n  183    if (!_.isObject(options) || _.isArray(options)) {\n  184:     throw new TypeError('addArgument second argument should be a hash');\n  185    }\n  186  \n  ...\n  189    if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n  190      if (args && !!options.dest) {\n  191:       throw new Error('dest supplied twice for positional argument');\n  192      }\n  193      options = this._getPositional(args, options);\n  ...\n  211    var ActionClass = this._popActionClass(options);\n  212    if (! _.isFunction(ActionClass)) {\n  213:     throw new Error(format('Unknown action \"%s\".', ActionClass));\n  214    }\n  215:   var action = new ActionClass(options);\n  216  \n  217    // throw an error if the action type is not callable\n  218    var typeFunction = this._registryGet('type', action.type, action.type);\n  219    if (!_.isFunction(typeFunction)) {\n  220:     throw new Error(format('\"%s\" is not callable', typeFunction));\n  221    }\n  222  \n  ...\n  226  /**\n  227   * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n  228:  * - options (Object): hash of options see [[ArgumentGroup.new]]\n  229   *\n  230:  * Create new arguments groups\n  231   **/\n  232  ActionContainer.prototype.addArgumentGroup = function (options) {\n  233:   var group = new ArgumentGroup(this, options);\n  234    this._actionGroups.push(group);\n  235    return group;\n  ...\n  240   * - options (Object): {required: false}\n  241   *\n  242:  * Create new mutual exclusive groups\n  243   **/\n  244  ActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  245:   var group = new MutuallyExclusiveGroup(this, options);\n  246    this._mutuallyExclusiveGroups.push(group);\n  247    return group;\n  ...\n  288    this._actionGroups.forEach(function (group) {\n  289      if (titleGroupMap[group.title]) {\n  290:       throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n  291      }\n  292      titleGroupMap[group.title] = group;\n  ...\n  301    container._actionGroups.forEach(function (group) {\n  302      // if a group with the title exists, use that, otherwise\n  303:     // create a new group matching the container's group\n  304      if (!titleGroupMap[group.title]) {\n  305        titleGroupMap[group.title] = this.addArgumentGroup({\n  ...\n  309      }\n  310  \n  311:     // map the actions to their new group\n  312      group._groupActions.forEach(function (action) {\n  313        groupMap[actionHash(action)] = titleGroupMap[group.title];\n  ...\n  323          required: group.required\n  324        });\n  325:     // map the actions to their new mutex group\n  326      group._groupActions.forEach(function (action) {\n  327        groupMap[actionHash(action)] = mutexGroup;\n  ...\n  348    // make sure required is not specified\n  349    if (options.required) {\n  350:     throw new Error('\"required\" is an invalid argument for positionals.');\n  351    }\n  352  \n  ...\n  375      // error on strings that don't start with an appropriate prefix\n  376      if (prefixChars.indexOf(optionString[0]) < 0) {\n  377:       throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".',\n  378          optionString,\n  379          prefixChars\n  ...\n  397  \n  398      if (dest.length === 0) {\n  399:       throw new Error(\n  400          format('dest= is required for options like \"%s\"', optionStrings.join(', '))\n  401        );\n  ...\n  427    if (typeof func === 'undefined') {\n  428      var msg = \"invalid conflict resolution value: \" + handlerString;\n  429:     throw new Error(msg);\n  430    } else {\n  431      return func;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\argument_parser.js:\n   29  \n   30  /**\n   31:  * new ArgumentParser(options)\n   32   *\n   33:  * Create a new ArgumentParser object.\n   34   *\n   35   * ##### Options:\n   ..\n   89      var result = parseInt(x, 10);\n   90      if (isNaN(result)) {\n   91:       throw new Error(x + ' is not a valid integer.');\n   92      }\n   93      return result;\n   ..\n   96      var result = parseFloat(x);\n   97      if (isNaN(result)) {\n   98:       throw new Error(x + ' is not a valid float.');\n   99      }\n  100      return result;\n  ...\n  145  /**\n  146   * ArgumentParser#addSubparsers(options) -> [[ActionSubparsers]]\n  147:  * - options (object): hash of options see [[ActionSubparsers.new]]\n  148   *\n  149   * See also [subcommands][1]\n  ...\n  187    // create the parsers action and add it to the positionals list\n  188    var ParsersClass = this._popActionClass(options, 'parsers');\n  189:   var action = new ParsersClass(options);\n  190    this._subparsers._addAction(action);\n  191  \n  ...\n  260  \n  261    // default Namespace built from parser defaults\n  262:   namespace = namespace || new Namespace();\n  263  \n  264    self._actions.forEach(function (action) {\n  ...\n  421            actionTuples.push([action, [], optionString]);\n  422            optionString = optionString[0] + explicitArg[0];\n  423:           var newExplicitArg = explicitArg.slice(1) || null;\n  424            var optionalsMap = self._optionStringActions;\n  425  \n  426            if (_.keys(optionalsMap).indexOf(optionString) >= 0) {\n  427              action = optionalsMap[optionString];\n  428:             explicitArg = newExplicitArg;\n  429            }\n  430            else {\n  ...\n  471      // the Optional's string args stopped\n  472      if (actionTuples.length < 1) {\n  473:       throw new Error('length should be > 0');\n  474      }\n  475      for (var i = 0; i < actionTuples.length; i++) {\n  ...\n  613    var _this = this;\n  614    var fs = require('fs');\n  615:   var newArgStrings = [];\n  616    argStrings.forEach(function (argString) {\n  617      if (_this.fromfilePrefixChars.indexOf(argString[0]) < 0) {\n  618        // for regular arguments, just add them back into the list\n  619:       newArgStrings.push(argString);\n  620      } else {\n  621        // replace arguments referencing files with the file content\n  ...\n  631            argstrs = _this._readArgsFromFiles(argstrs);\n  632          });\n  633:         newArgStrings.push.apply(newArgStrings, argstrs);\n  634        } catch (error) {\n  635          return _this.error(error.message);\n  ...\n  637      }\n  638    });\n  639:   return newArgStrings;\n  640  };\n  641  \n  ...\n  647  \n  648    // match the pattern for this action to the arg strings\n  649:   var regexpNargs = new RegExp('^' + this._getNargsPattern(action));\n  650    var matches = regexpArgStrings.match(regexpNargs);\n  651    var message;\n  ...\n  696      }\n  697  \n  698:     pattern = new RegExp('^' + pattern);\n  699      matches = regexpArgStrings.match(pattern);\n  700  \n  ...\n  831    // shouldn't ever get here\n  832    } else {\n  833:     throw new Error(format('Unexpected option string: %s.', optionString));\n  834    }\n  835    // return the collected option tuples\n  ...\n 1066  ArgumentParser.prototype._getFormatter = function () {\n 1067    var FormatterClass = this.formatterClass;\n 1068:   var formatter = new FormatterClass({prog: this.prog});\n 1069    return formatter;\n 1070  };\n ....\n 1157  \n 1158    if (this.debug === true) {\n 1159:     throw new Error(msg);\n 1160    }\n 1161  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\namespace.js:\n   14  \n   15  /**\n   16:  * new Namespace(options)\n   17   * - options(object): predefined propertis for result object\n   18   *\n   ..\n   35   * Namespace#set(key, value) -> self\n   36   * -key (string|number|object): propery name\n   37:  * -value (mixed): new property value\n   38   *\n   39   * Set the property named key with value.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\append.js:\n   18  \n   19  /*:nodoc:*\n   20:  * new ActionAppend(options)\n   21:  * - options (object): options hash see [[Action.new]]\n   22   *\n   23   * Note: options.nargs should be optional for constants\n   ..\n   27    options = options || {};\n   28    if (this.nargs <= 0) {\n   29:     throw new Error('nargs for append actions must be > 0; if arg ' +\n   30          'strings are not supplying the value to append, ' +\n   31          'the append const action may be more appropriate');\n   32    }\n   33    if (!!this.constant && this.nargs !== $$.OPTIONAL) {\n   34:     throw new Error('nargs must be OPTIONAL to supply const');\n   35    }\n   36    Action.call(this, options);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\count.js:\n   15  \n   16  /*:nodoc:*\n   17:  * new ActionCount(options)\n   18:  * - options (object): options hash see [[Action.new]]\n   19   *\n   20   **/\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\help.js:\n   15  \n   16  /*:nodoc:*\n   17:  * new ActionHelp(options)\n   18:  * - options (object): options hash see [[Action.new]]\n   19   *\n   20   **/\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\store.js:\n   18  \n   19  /*:nodoc:*\n   20:  * new ActionStore(options)\n   21:  * - options (object): options hash see [[Action.new]]\n   22   *\n   23   **/\n   ..\n   25    options = options || {};\n   26    if (this.nargs <= 0) {\n   27:     throw new Error('nargs for store actions must be > 0; if you ' +\n   28          'have nothing to store, actions such as store ' +\n   29          'true or store const may be more appropriate');\n   ..\n   31    }\n   32    if (this.constant !== undefined && this.nargs !== $$.OPTIONAL) {\n   33:     throw new Error('nargs must be OPTIONAL to supply const');\n   34    }\n   35    Action.call(this, options);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\subparsers.js:\n   23  \n   24  /*:nodoc:*\n   25:  * new ChoicesPseudoAction(name, help)\n   26   *\n   27   * Create pseudo action for correct help text\n   ..\n   40  \n   41  /**\n   42:  * new ActionSubparsers(options)\n   43:  * - options (object): options hash see [[Action.new]]\n   44   *\n   45   **/\n   ..\n   64   * ActionSubparsers#addParser(name, options) -> ArgumentParser\n   65   * - name (string): sub-command name\n   66:  * - options (object): see [[ArgumentParser.new]]\n   67   *\n   68   *  Note:\n   ..\n   93      delete options.help;\n   94  \n   95:     var choiceAction = new ChoicesPseudoAction(name, help);\n   96      this._choicesActions.push(choiceAction);\n   97    }\n   98  \n   99    // create the parser and add it to the map\n  100:   parser = new this._parserClass(options);\n  101    this._nameParserMap[name] = parser;\n  102  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\version.js:\n   17  \n   18  /*:nodoc:*\n   19:  * new ActionVersion(options)\n   20:  * - options (object): options hash see [[Action.new]]\n   21   *\n   22   **/\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\append\\constant.js:\n   18  \n   19  /*:nodoc:*\n   20:  * new ActionAppendConstant(options)\n   21:  * - options (object): options hash see [[Action.new]]\n   22   *\n   23   **/\n   ..\n   26    options.nargs = 0;\n   27    if (options.constant === undefined) {\n   28:     throw new Error('constant option is required for appendAction');\n   29    }\n   30    Action.call(this, options);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\store\\constant.js:\n   16  \n   17  /*:nodoc:*\n   18:  * new ActionStoreConstant(options)\n   19:  * - options (object): options hash see [[Action.new]]\n   20   *\n   21   **/\n   ..\n   24    options.nargs = 0;\n   25    if (options.constant === undefined) {\n   26:     throw new Error('constant option is required for storeAction');\n   27    }\n   28    Action.call(this, options);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\store\\false.js:\n   15  \n   16  /*:nodoc:*\n   17:  * new ActionStoreFalse(options)\n   18:  * - options (object): hash of options see [[Action.new]]\n   19   *\n   20   **/\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\action\\store\\true.js:\n   14  \n   15  /*:nodoc:*\n   16:  * new ActionStoreTrue(options)\n   17:  * - options (object): options hash see [[Action.new]]\n   18   *\n   19   **/\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\argument\\error.js:\n   45    }\n   46  \n   47:   err = new TypeError(errMessage);\n   48    err.code = ERR_CODE;\n   49    return err;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\argument\\exclusive.js:\n   18  \n   19  /**\n   20:  * new MutuallyExclusiveGroup(container, options)\n   21   * - container (object): main container\n   22   * - options (object): options.required -> true/false\n   ..\n   40    if (action.required) {\n   41      msg = 'mutually exclusive arguments must be optional';\n   42:     throw new Error(msg);\n   43    }\n   44    action = this._container._addAction(action);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\argument\\group.js:\n   19  \n   20  /**\n   21:  * new ArgumentGroup(container, options)\n   22   * - container (object): main container\n   23   * - options (object): hash of group options\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\help\\added_formatters.js:\n   11  \n   12  /**\n   13:  * new RawDescriptionHelpFormatter(options)\n   14:  * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n   15   *\n   16   * Help message formatter which adds default values to argument help.\n   ..\n   42  \n   43  /**\n   44:  * new RawDescriptionHelpFormatter(options)\n   45:  * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n   46   *\n   47   * Help message formatter which retains any formatting in descriptions.\n   ..\n   67  \n   68  /**\n   69:  * new RawTextHelpFormatter(options)\n   70:  * new ArgumentParser({formatterClass: argparse.RawTextHelpFormatter, ...})\n   71   *\n   72   * Help message formatter which retains formatting of all help text.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\lib\\help\\formatter.js:\n   22  \n   23  /*:nodoc:* internal\n   24:  * new Support(parent, heding)\n   25   * - parent (object): parent section\n   26   * - heading (string): header string\n   ..\n   84    }\n   85  \n   86:   // join the section-initialize newline, the heading and the help\n   87    return formatter._joinParts([$$.EOL, heading, itemHelp, $$.EOL]);\n   88  };\n   89  \n   90  /**\n   91:  * new HelpFormatter(options)\n   92   *\n   93   * #### Options:\n   ..\n  111    this._actionMaxLength = 0;\n  112  \n  113:   this._rootSection = new Section(null);\n  114    this._currentSection = this._rootSection;\n  115  \n  116:   this._whitespaceMatcher = new RegExp('\\\\s+', 'g');\n  117:   this._longBreakMatcher = new RegExp($$.EOL + $$.EOL + $$.EOL + '+', 'g');\n  118  };\n  119  \n  ...\n  127    this._level -= 1;\n  128    if (this._currentIndent < 0) {\n  129:     throw new Error('Indent decreased below 0.');\n  130    }\n  131  };\n  ...\n  143   * - heading (string): header string\n  144   *\n  145:  * Start new help section\n  146   *\n  147   * See alse [code example][1]\n  ...\n  157  HelpFormatter.prototype.startSection = function (heading) {\n  158    this._indent();\n  159:   var section = new Section(this._currentSection, heading);\n  160    var func = section.formatHelp.bind(section);\n  161    this._addItem(func, [this]);\n  ...\n  243        action._getSubactions().forEach(function (subaction) {\n  244  \n  245:         var invocationNew = self._formatActionInvocation(subaction);\n  246:         invocations.push(invocationNew);\n  247:         invocationLength = Math.max(invocationLength, invocationNew.length);\n  248  \n  249        });\n  ...\n  354  \n  355        // break usage into wrappable parts\n  356:       var regexpPart = new RegExp('\\\\(.*?\\\\)+|\\\\[.*?\\\\]+|\\\\S+', 'g');\n  357        var optionalUsage = this._formatActionsUsage(optionals, groups);\n  358        var positionalUsage = this._formatActionsUsage(positionals, groups);\n  ...\n  363  \n  364        if (optionalParts.join(' ') !== optionalUsage) {\n  365:         throw new Error('assert \"optionalParts.join(\\' \\') === optionalUsage\"');\n  366        }\n  367        if (positionalParts.join(' ') !== positionalUsage) {\n  368:         throw new Error('assert \"positionalParts.join(\\' \\') === positionalUsage\"');\n  369        }\n  370  \n  ...\n  577    var actionHeader = this._formatActionInvocation(action);\n  578  \n  579:   // no help; start on same line and add a final newline\n  580    if (!action.help) {\n  581      actionHeader = _.str.repeat(' ', this._currentIndent) + actionHeader + $$.EOL;\n  ...\n  607      });\n  608  \n  609:   // or add a newline if the description doesn't end with one\n  610    } else if (actionHeader.charAt(actionHeader.length - 1) !== $$.EOL) {\n  611      parts.push($$.EOL);\n  ...\n  756    var lines = [];\n  757    var delimiters = [\" \", \".\", \",\", \"!\", \"?\"];\n  758:   var re = new RegExp('[' + delimiters.join('') + '][^' + delimiters.join('') + ']*$');\n  759  \n  760    text = text.replace(/[\\n\\|\\t]/g, ' ');\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore\\CONTRIBUTING.md:\n    7  * Use the same coding style as the rest of the [codebase](https://github.com/documentcloud/underscore/blob/master/underscore.js).\n    8  \n    9: * In your pull request, do not add documentation or re-build the minified `underscore-min.js` file. We'll do those things before cutting a new release.\n   10  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore\\index.html:\n  422          <span class=\"alias\">Alias: <b>collect</b></span>\n  423          <br />\n  424:         Produces a new array of values by mapping each value in <b>list</b>\n  425          through a transformation function (<b>iterator</b>). If the native <b>map</b> method\n  426          exists, it will be used instead. If <b>list</b> is a JavaScript object,\n  ...\n  510        </p>\n  511        <pre>\n  512: _.findWhere(publicServicePulitzers, {newsroom: \"The New York Times\"});\n  513: =&gt; {year: 1918, newsroom: \"The New York Times\",\n  514    reason: \"For its public service in publishing in full so many official reports,\n  515    documents and speeches by European statesmen relating to the progress and\n  ...\n 1022          <b class=\"header\">throttle</b><code>_.throttle(function, wait)</code>\n 1023          <br />\n 1024:         Creates and returns a new, throttled version of the passed function,\n 1025          that, when invoked repeatedly, will only actually call the original function\n 1026          at most once per every <b>wait</b>\n ....\n 1036          <b class=\"header\">debounce</b><code>_.debounce(function, wait, [immediate])</code>\n 1037          <br />\n 1038:         Creates and returns a new debounced version of the passed function that\n 1039          will postpone its execution until after\n 1040          <b>wait</b> milliseconds have elapsed since the last time it\n ....\n 1399        </p>\n 1400        <pre>\n 1401: _.isDate(new Date());\n 1402  =&gt; true\n 1403  </pre>\n ....\n 2134            </li>\n 2135            <li>\n 2136:             A new <tt>_.initial</tt> function was added, as a mirror of <tt>_.rest</tt>,\n 2137              which returns all the initial values of a list (except the last N).\n 2138            </li>\n ....\n 2222          This is a backwards-incompatible change. <tt>_.template</tt> may now be\n 2223          called with no arguments, and preserves whitespace. <tt>_.contains</tt>\n 2224:         is a new alias for <tt>_.include</tt>.\n 2225        </p>\n 2226  \n ....\n 2263          Major release. Incorporates a number of\n 2264          <a href=\"http://github.com/ratbeard\">Mile Frawley's</a> refactors for\n 2265:         safer duck-typing on collection functions, and cleaner internals. A new\n 2266          <tt>_.mixin</tt> method that allows you to extend Underscore with utility\n 2267          functions of your own. Added <tt>_.times</tt>, which works the same as in\n ....\n 2306        <p>\n 2307          <b class=\"header\">0.5.2</b><br />\n 2308:         New implementations of <tt>isArray</tt>, <tt>isDate</tt>, <tt>isFunction</tt>,\n 2309          <tt>isNumber</tt>, <tt>isRegExp</tt>, and <tt>isString</tt>, thanks to\n 2310          a suggestion from\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore\\underscore-min.js:\n    1: (function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,d=e.filter,g=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,_=Object.keys,j=i.bind,w=function(n){return n instanceof w?n:this instanceof w?(this._wrapped=n,void 0):new w(n)};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=w),exports._=w):n._=w,w.VERSION=\"1.4.4\";var A=w.each=w.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a in n)if(w.has(n,a)&&t.call(e,n[a],a,n)===r)return};w.map=w.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e[e.length]=t.call(r,n,u,i)}),e)};var O=\"Reduce of empty array with no initial value\";w.reduce=w.foldl=w.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=w.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(O);return r},w.reduceRight=w.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=w.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=w.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(O);return r},w.find=w.detect=function(n,t,r){var e;return E(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},w.filter=w.select=function(n,t,r){var e=[];return null==n?e:d&&n.filter===d?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&(e[e.length]=n)}),e)},w.reject=function(n,t,r){return w.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},w.every=w.all=function(n,t,e){t||(t=w.identity);var u=!0;return null==n?u:g&&n.every===g?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var E=w.some=w.any=function(n,t,e){t||(t=w.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};w.contains=w.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:E(n,function(n){return n===t})},w.invoke=function(n,t){var r=o.call(arguments,2),e=w.isFunction(t);return w.map(n,function(n){return(e?t:n[t]).apply(n,r)})},w.pluck=function(n,t){return w.map(n,function(n){return n[t]})},w.where=function(n,t,r){return w.isEmpty(t)?r?null:[]:w[r?\"find\":\"filter\"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},w.findWhere=function(n,t){return w.where(n,t,!0)},w.max=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.max.apply(Math,n);if(!t&&w.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>=e.computed&&(e={value:n,computed:a})}),e.value},w.min=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.min.apply(Math,n);if(!t&&w.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;e.computed>a&&(e={value:n,computed:a})}),e.value},w.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=w.random(r++),e[r-1]=e[t],e[t]=n}),e};var k=function(n){return w.isFunction(n)?n:function(t){return t[n]}};w.sortBy=function(n,t,r){var e=k(t);return w.pluck(w.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index<t.index?-1:1}),\"value\")};var F=function(n,t,r,e){var u={},i=k(t||w.identity);return A(n,function(t,a){var o=i.call(r,t,a,n);e(u,o,t)}),u};w.groupBy=function(n,t,r){return F(n,t,r,function(n,t,r){(w.has(n,t)?n[t]:n[t]=[]).push(r)})},w.countBy=function(n,t,r){return F(n,t,r,function(n,t){w.has(n,t)||(n[t]=0),n[t]++})},w.sortedIndex=function(n,t,r,e){r=null==r?w.identity:k(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;u>r.call(e,n[o])?i=o+1:a=o}return i},w.toArray=function(n){return n?w.isArray(n)?o.call(n):n.length===+n.length?w.map(n,w.identity):w.values(n):[]},w.size=function(n){return null==n?0:n.length===+n.length?n.length:w.keys(n).length},w.first=w.head=w.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},w.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},w.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},w.rest=w.tail=w.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},w.compact=function(n){return w.filter(n,w.identity)};var R=function(n,t,r){return A(n,function(n){w.isArray(n)?t?a.apply(r,n):R(n,t,r):r.push(n)}),r};w.flatten=function(n,t){return R(n,t,[])},w.without=function(n){return w.difference(n,o.call(arguments,1))},w.uniq=w.unique=function(n,t,r,e){w.isFunction(t)&&(e=r,r=t,t=!1);var u=r?w.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:w.contains(a,r))||(a.push(r),i.push(n[e]))}),i},w.union=function(){return w.uniq(c.apply(e,arguments))},w.intersection=function(n){var t=o.call(arguments,1);return w.filter(w.uniq(n),function(n){return w.every(t,function(t){return w.indexOf(t,n)>=0})})},w.difference=function(n){var t=c.apply(e,o.call(arguments,1));return w.filter(n,function(n){return!w.contains(t,n)})},w.zip=function(){for(var n=o.call(arguments),t=w.max(w.pluck(n,\"length\")),r=Array(t),e=0;t>e;e++)r[e]=w.pluck(n,\"\"+e);return r},w.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},w.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if(\"number\"!=typeof r)return e=w.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},w.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},w.range=function(n,t,r){1>=arguments.length&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=Array(e);e>u;)i[u++]=n,n+=r;return i},w.bind=function(n,t){if(n.bind===j&&j)return j.apply(n,o.call(arguments,1));var r=o.call(arguments,2);return function(){return n.apply(t,r.concat(o.call(arguments)))}},w.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},w.bindAll=function(n){var t=o.call(arguments,1);return 0===t.length&&(t=w.functions(n)),A(t,function(t){n[t]=w.bind(n[t],n)}),n},w.memoize=function(n,t){var r={};return t||(t=w.identity),function(){var e=t.apply(this,arguments);return w.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},w.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},w.defer=function(n){return w.delay.apply(w,[n,1].concat(o.call(arguments,1)))},w.throttle=function(n,t){var r,e,u,i,a=0,o=function(){a=new Date,u=null,i=n.apply(r,e)};return function(){var c=new Date,l=t-(c-a);return r=this,e=arguments,0>=l?(clearTimeout(u),u=null,a=c,i=n.apply(r,e)):u||(u=setTimeout(o,l)),i}},w.debounce=function(n,t,r){var e,u;return function(){var i=this,a=arguments,o=function(){e=null,r||(u=n.apply(i,a))},c=r&&!e;return clearTimeout(e),e=setTimeout(o,t),c&&(u=n.apply(i,a)),u}},w.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},w.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},w.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},w.after=function(n,t){return 0>=n?t():function(){return 1>--n?t.apply(this,arguments):void 0}},w.keys=_||function(n){if(n!==Object(n))throw new TypeError(\"Invalid object\");var t=[];for(var r in n)w.has(n,r)&&(t[t.length]=r);return t},w.values=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push(n[r]);return t},w.pairs=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push([r,n[r]]);return t},w.invert=function(n){var t={};for(var r in n)w.has(n,r)&&(t[n[r]]=r);return t},w.functions=w.methods=function(n){var t=[];for(var r in n)w.isFunction(n[r])&&t.push(r);return t.sort()},w.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},w.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},w.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)w.contains(r,u)||(t[u]=n[u]);return t},w.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)null==n[r]&&(n[r]=t[r])}),n},w.clone=function(n){return w.isObject(n)?w.isArray(n)?n.slice():w.extend({},n):n},w.tap=function(n,t){return t(n),n};var I=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof w&&(n=n._wrapped),t instanceof w&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case\"[object String]\":return n==t+\"\";case\"[object Number]\":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case\"[object Date]\":case\"[object Boolean]\":return+n==+t;case\"[object RegExp]\":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if(\"object\"!=typeof n||\"object\"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;r.push(n),e.push(t);var a=0,o=!0;if(\"[object Array]\"==u){if(a=n.length,o=a==t.length)for(;a--&&(o=I(n[a],t[a],r,e)););}else{var c=n.constructor,f=t.constructor;if(c!==f&&!(w.isFunction(c)&&c instanceof c&&w.isFunction(f)&&f instanceof f))return!1;for(var s in n)if(w.has(n,s)&&(a++,!(o=w.has(t,s)&&I(n[s],t[s],r,e))))break;if(o){for(s in t)if(w.has(t,s)&&!a--)break;o=!a}}return r.pop(),e.pop(),o};w.isEqual=function(n,t){return I(n,t,[],[])},w.isEmpty=function(n){if(null==n)return!0;if(w.isArray(n)||w.isString(n))return 0===n.length;for(var t in n)if(w.has(n,t))return!1;return!0},w.isElement=function(n){return!(!n||1!==n.nodeType)},w.isArray=x||function(n){return\"[object Array]\"==l.call(n)},w.isObject=function(n){return n===Object(n)},A([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\"],function(n){w[\"is\"+n]=function(t){return l.call(t)==\"[object \"+n+\"]\"}}),w.isArguments(arguments)||(w.isArguments=function(n){return!(!n||!w.has(n,\"callee\"))}),\"function\"!=typeof/./&&(w.isFunction=function(n){return\"function\"==typeof n}),w.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},w.isNaN=function(n){return w.isNumber(n)&&n!=+n},w.isBoolean=function(n){return n===!0||n===!1||\"[object Boolean]\"==l.call(n)},w.isNull=function(n){return null===n},w.isUndefined=function(n){return n===void 0},w.has=function(n,t){return f.call(n,t)},w.noConflict=function(){return n._=t,this},w.identity=function(n){return n},w.times=function(n,t,r){for(var e=Array(n),u=0;n>u;u++)e[u]=t.call(r,u);return e},w.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var M={escape:{\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"/\":\"&#x2F;\"}};M.unescape=w.invert(M.escape);var S={escape:RegExp(\"[\"+w.keys(M.escape).join(\"\")+\"]\",\"g\"),unescape:RegExp(\"(\"+w.keys(M.unescape).join(\"|\")+\")\",\"g\")};w.each([\"escape\",\"unescape\"],function(n){w[n]=function(t){return null==t?\"\":(\"\"+t).replace(S[n],function(t){return M[n][t]})}}),w.result=function(n,t){if(null==n)return null;var r=n[t];return w.isFunction(r)?r.call(n):r},w.mixin=function(n){A(w.functions(n),function(t){var r=w[t]=n[t];w.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),D.call(this,r.apply(w,n))}})};var N=0;w.uniqueId=function(n){var t=++N+\"\";return n?n+t:t},w.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var T=/(.)^/,q={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},B=/\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;w.template=function(n,t,r){var e;r=w.defaults({},r,w.templateSettings);var u=RegExp([(r.escape||T).source,(r.interpolate||T).source,(r.evaluate||T).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(B,function(n){return\"\\\\\"+q[n]}),r&&(a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\"),e&&(a+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\"),u&&(a+=\"';\\n\"+u+\"\\n__p+='\"),i=o+t.length,t}),a+=\"';\\n\",r.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{e=Function(r.variable||\"obj\",\"_\",a)}catch(o){throw o.source=a,o}if(t)return e(t,w);var c=function(n){return e.call(this,n,w)};return c.source=\"function(\"+(r.variable||\"obj\")+\"){\\n\"+a+\"}\",c},w.chain=function(n){return w(n).chain()};var D=function(n){return this._chain?w(n).chain():n};w.mixin(w),A([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=e[n];w.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),\"shift\"!=n&&\"splice\"!=n||0!==r.length||delete r[0],D.call(this,r)}}),A([\"concat\",\"join\",\"slice\"],function(n){var t=e[n];w.prototype[n]=function(){return D.call(this,t.apply(this._wrapped,arguments))}}),w.extend(w.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore\\underscore.js:\n   47    var _ = function(obj) {\n   48      if (obj instanceof _) return obj;\n   49:     if (!(this instanceof _)) return new _(obj);\n   50      this._wrapped = obj;\n   51    };\n   ..\n  121        }\n  122      });\n  123:     if (!initial) throw new TypeError(reduceError);\n  124      return memo;\n  125    };\n  ...\n  148        }\n  149      });\n  150:     if (!initial) throw new TypeError(reduceError);\n  151      return memo;\n  152    };\n  ...\n  493      var args = slice.call(arguments);\n  494      var length = _.max(_.pluck(args, 'length'));\n  495:     var results = new Array(length);\n  496      for (var i = 0; i < length; i++) {\n  497        results[i] = _.pluck(args, \"\" + i);\n  ...\n  562      var len = Math.max(Math.ceil((stop - start) / step), 0);\n  563      var idx = 0;\n  564:     var range = new Array(len);\n  565  \n  566      while(idx < len) {\n  ...\n  633      var previous = 0;\n  634      var later = function() {\n  635:       previous = new Date;\n  636        timeout = null;\n  637        result = func.apply(context, args);\n  638      };\n  639      return function() {\n  640:       var now = new Date;\n  641        var remaining = wait - (now - previous);\n  642        context = this;\n  ...\n  727    // Delegates to **ECMAScript 5**'s native `Object.keys`\n  728    _.keys = nativeKeys || function(obj) {\n  729:     if (obj !== Object(obj)) throw new TypeError('Invalid object');\n  730      var keys = [];\n  731      for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n  ...\n  839        case '[object String]':\n  840          // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n  841:         // equivalent to `new String(\"5\")`.\n  842          return a == String(b);\n  843        case '[object Number]':\n  ...\n 1042    // Regexes containing the keys and values listed immediately above.\n 1043    var entityRegexes = {\n 1044:     escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n 1045:     unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n 1046    };\n 1047  \n ....\n 1119  \n 1120      // Combine delimiters into one regular expression via alternation.\n 1121:     var matcher = new RegExp([\n 1122        (settings.escape || noMatch).source,\n 1123        (settings.interpolate || noMatch).source,\n ....\n 1154  \n 1155      try {\n 1156:       render = new Function(settings.variable || 'obj', '_', source);\n 1157      } catch (e) {\n 1158        e.source = source;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\package.json:\n   67      }\n   68    ],\n   69:   \"readme\": \"# Underscore.string [![Build Status](https://secure.travis-ci.org/epeli/underscore.string.png?branch=master)](http://travis-ci.org/epeli/underscore.string) #\\n\\n\\n\\nJavascript lacks complete string manipulation operations.\\nThis an attempt to fill that gap. List of build-in methods can be found\\nfor example from [Dive Into JavaScript][d].\\n\\n[d]: http://www.diveintojavascript.com/core-javascript-reference/the-string-object\\n\\n\\nAs name states this an extension for [Underscore.js][u], but it can be used\\nindependently from **_s**-global variable. But with Underscore.js you can\\nuse Object-Oriented style and chaining:\\n\\n[u]: http://documentcloud.github.com/underscore/\\n\\n```javascript\\n_(\\\"   epeli  \\\").chain().trim().capitalize().value()\\n=> \\\"Epeli\\\"\\n```\\n\\n## Download ##\\n\\n  * [Development version](https://raw.github.com/epeli/underscore.string/master/lib/underscore.string.js) *Uncompressed with Comments 18kb*\\n  * [Production version](https://github.com/epeli/underscore.string/raw/master/dist/underscore.string.min.js) *Minified 7kb*\\n\\n\\n## Node.js installation ##\\n\\n**npm package**\\n\\n    npm install underscore.string\\n\\n**Standalone usage**:\\n\\n```javascript\\nvar _s = require('underscore.string');\\n```\\n\\n**Integrate with Underscore.js**:\\n\\n```javascript\\nvar _  = require('underscore');\\n\\n// Import Underscore.string to separate object, because there are conflict functions (include, reverse, contains)\\n_.str = require('underscore.string');\\n\\n// Mix in non-conflict functions to Underscore namespace if you want\\n_.mixin(_.str.exports());\\n\\n// All functions, include conflict, will be available through _.str object\\n_.str.include('Underscore.string', 'string'); // => true\\n```\\n\\n**Or Integrate with Underscore.js without module loading**\\n\\nRun the following expression after Underscore.js and Underscore.string are loaded\\n```javascript\\n// _.str becomes a global variable if no module loading is detected\\n// Mix in non-conflict functions to Underscore namespace\\n_.mixin(_.str.exports());\\n```\\n\\n## String Functions ##\\n\\nFor availability of functions in this way you need to mix in Underscore.string functions:\\n\\n```javascript\\n_.mixin(_.string.exports());\\n```\\n\\notherwise functions from examples will be available through _.string or _.str objects:\\n\\n```javascript\\n_.str.capitalize('epeli')\\n=> \\\"Epeli\\\"\\n```\\n\\n**numberFormat** _.numberFormat(number, [ decimals=0, decimalSeparator='.', orderSeparator=','])\\n\\nFormats the numbers.\\n\\n```javascript\\n_.numberFormat(1000, 2)\\n=> \\\"1,000.00\\\"\\n\\n_.numberFormat(123456789.123, 5, '.', ',')\\n=> \\\"123,456,789.12300\\\"\\n```\\n\\n\\n**levenshtein** _.levenshtein(string1, string2)\\n\\nCalculates [Levenshtein distance][ld] between two strings.\\n[ld]: http://en.wikipedia.org/wiki/Levenshtein_distance\\n\\n```javascript\\n_.levenshtein('kitten', 'kittah')\\n=> 2\\n```\\n\\n**capitalize** _.capitalize(string)\\n\\nConverts first letter of the string to uppercase.\\n\\n```javascript\\n_.capitalize(\\\"foo Bar\\\")\\n=> \\\"Foo Bar\\\"\\n```\\n\\n**chop** _.chop(string, step)\\n\\n```javascript\\n_.chop('whitespace', 3)\\n=> ['whi','tes','pac','e']\\n```\\n\\n**clean** _.clean(str)\\n\\nCompress some whitespaces to one.\\n\\n```javascript\\n_.clean(\\\" foo    bar   \\\")\\n=> 'foo bar'\\n```\\n\\n**chars** _.chars(str)\\n\\n```javascript\\n_.chars('Hello')\\n=> ['H','e','l','l','o']\\n```\\n\\n**swapCase** _.swapCase(str)\\n\\nReturns a copy of the string in which all the case-based characters have had their case swapped.\\n\\n```javascript\\n_.swapCase('hELLO')\\n=> 'Hello'\\n```\\n\\n**include** available only through _.str object, because Underscore has function with the same name.\\n\\n```javascript\\n_.str.include(\\\"foobar\\\", \\\"ob\\\")\\n=> true\\n```\\n\\n(removed) **includes** _.includes(string, substring)\\n\\nTests if string contains a substring.\\n\\n```javascript\\n_.includes(\\\"foobar\\\", \\\"ob\\\")\\n=> true\\n```\\n\\n**includes** function was removed\\n\\nBut you can create it in this way, for compatibility with previous versions:\\n\\n```javascript\\n_.includes = _.str.include\\n```\\n\\n**count** _.count(string, substring)\\n\\n```javascript\\n_('Hello world').count('l')\\n=> 3\\n```\\n\\n**escapeHTML** _.escapeHTML(string)\\n\\nConverts HTML special characters to their entity equivalents.\\n\\n```javascript\\n_('<div>Blah blah blah</div>').escapeHTML();\\n=> '&lt;div&gt;Blah blah blah&lt;/div&gt;'\\n```\\n\\n**unescapeHTML** _.unescapeHTML(string)\\n\\nConverts entity characters to HTML equivalents.\\n\\n```javascript\\n_('&lt;div&gt;Blah blah blah&lt;/div&gt;').unescapeHTML();\\n=> '<div>Blah blah blah</div>'\\n```\\n\\n**insert** _.insert(string, index, substing)\\n\\n```javascript\\n_('Hello ').insert(6, 'world')\\n=> 'Hello world'\\n```\\n\\n**isBlank** _.isBlank(string)\\n\\n```javascript\\n_('').isBlank(); // => true\\n_('\\\\n').isBlank(); // => true\\n_(' ').isBlank(); // => true\\n_('a').isBlank(); // => false\\n```\\n\\n**join** _.join(separator, *strings)\\n\\nJoins strings together with given separator\\n\\n```javascript\\n_.join(\\\" \\\", \\\"foo\\\", \\\"bar\\\")\\n=> \\\"foo bar\\\"\\n```\\n\\n**lines** _.lines(str)\\n\\n```javascript\\n_.lines(\\\"Hello\\\\nWorld\\\")\\n=> [\\\"Hello\\\", \\\"World\\\"]\\n```\\n\\n**reverse** available only through _.str object, because Underscore has function with the same name.\\n\\nReturn reversed string:\\n\\n```javascript\\n_.str.reverse(\\\"foobar\\\")\\n=> 'raboof'\\n```\\n\\n**splice**  _.splice(string, index, howmany, substring)\\n\\nLike a array splice.\\n\\n```javascript\\n_('https://edtsech@bitbucket.org/edtsech/underscore.strings').splice(30, 7, 'epeli')\\n=> 'https://edtsech@bitbucket.org/epeli/underscore.strings'\\n```\\n\\n**startsWith** _.startsWith(string, starts)\\n\\nThis method checks whether string starts with starts.\\n\\n```javascript\\n_(\\\"image.gif\\\").startsWith(\\\"image\\\")\\n=> true\\n```\\n\\n**endsWith** _.endsWith(string, ends)\\n\\nThis method checks whether string ends with ends.\\n\\n```javascript\\n_(\\\"image.gif\\\").endsWith(\\\"gif\\\")\\n=> true\\n```\\n\\n**succ**  _.succ(str)\\n\\nReturns the successor to str.\\n\\n```javascript\\n_('a').succ()\\n=> 'b'\\n\\n_('A').succ()\\n=> 'B'\\n```\\n\\n**supplant**\\n\\nSupplant function was removed, use Underscore.js [template function][p].\\n\\n[p]: http://documentcloud.github.com/underscore/#template\\n\\n**strip** alias for *trim*\\n\\n**lstrip** alias for *ltrim*\\n\\n**rstrip** alias for *rtrim*\\n\\n**titleize** _.titleize(string)\\n\\n```javascript\\n_('my name is epeli').titleize()\\n=> 'My Name Is Epeli'\\n```\\n\\n**camelize** _.camelize(string)\\n\\nConverts underscored or dasherized string to a camelized one\\n\\n```javascript\\n_('-moz-transform').camelize()\\n=> 'MozTransform'\\n```\\n\\n**classify** _.classify(string)\\n\\nConverts string to camelized class name\\n\\n```javascript\\n_('some_class_name').classify()\\n=> 'SomeClassName'\\n```\\n\\n**underscored** _.underscored(string)\\n\\nConverts a camelized or dasherized string into an underscored one\\n\\n```javascript\\n_('MozTransform').underscored()\\n=> 'moz_transform'\\n```\\n\\n**dasherize** _.dasherize(string)\\n\\nConverts a underscored or camelized string into an dasherized one\\n\\n```javascript\\n_('MozTransform').dasherize()\\n=> '-moz-transform'\\n```\\n\\n**humanize** _.humanize(string)\\n\\nConverts an underscored, camelized, or dasherized string into a humanized one.\\nAlso removes beginning and ending whitespace, and removes the postfix '_id'.\\n\\n```javascript\\n_('  capitalize dash-CamelCase_underscore trim  ').humanize()\\n=> 'Capitalize dash camel case underscore trim'\\n```\\n\\n**trim** _.trim(string, [characters])\\n\\ntrims defined characters from begining and ending of the string.\\nDefaults to whitespace characters.\\n\\n```javascript\\n_.trim(\\\"  foobar   \\\")\\n=> \\\"foobar\\\"\\n\\n_.trim(\\\"_-foobar-_\\\", \\\"_-\\\")\\n=> \\\"foobar\\\"\\n```\\n\\n\\n**ltrim** _.ltrim(string, [characters])\\n\\nLeft trim. Similar to trim, but only for left side.\\n\\n\\n**rtrim** _.rtrim(string, [characters])\\n\\nRight trim. Similar to trim, but only for right side.\\n\\n**truncate** _.truncate(string, length, truncateString)\\n\\n```javascript\\n_('Hello world').truncate(5)\\n=> 'Hello...'\\n\\n_('Hello').truncate(10)\\n=> 'Hello'\\n```\\n\\n**prune** _.prune(string, length, pruneString)\\n\\nElegant version of truncate.\\nMakes sure the pruned string does not exceed the original length.\\nAvoid half-chopped words when truncating.\\n\\n```javascript\\n_('Hello, world').prune(5)\\n=> 'Hello...'\\n\\n_('Hello, world').prune(8)\\n=> 'Hello...'\\n\\n_('Hello, world').prune(5, ' (read a lot more)')\\n=> 'Hello, world' (as adding \\\"(read a lot more)\\\" would be longer than the original string)\\n\\n_('Hello, cruel world').prune(15)\\n=> 'Hello, cruel...'\\n\\n_('Hello').prune(10)\\n=> 'Hello'\\n```\\n\\n**words** _.words(str, delimiter=/\\\\s+/)\\n\\nSplit string by delimiter (String or RegExp), /\\\\s+/ by default.\\n\\n```javascript\\n_.words(\\\"   I   love   you   \\\")\\n=> [\\\"I\\\",\\\"love\\\",\\\"you\\\"]\\n\\n_.words(\\\"I_love_you\\\", \\\"_\\\")\\n=> [\\\"I\\\",\\\"love\\\",\\\"you\\\"]\\n\\n_.words(\\\"I-love-you\\\", /-/)\\n=> [\\\"I\\\",\\\"love\\\",\\\"you\\\"]\\n\\n_.words(\\\"   \\\")\\n=> []\\n```\\n\\n**sprintf** _.sprintf(string format, *arguments)\\n\\nC like string formatting.\\nCredits goes to [Alexandru Marasteanu][o].\\nFor more detailed documentation, see the [original page][o].\\n\\n[o]: http://www.diveintojavascript.com/projects/sprintf-for-javascript\\n\\n```javascript\\n_.sprintf(\\\"%.1f\\\", 1.17)\\n\\\"1.2\\\"\\n```\\n\\n**pad** _.pad(str, length, [padStr, type])\\n\\npads the `str` with characters until the total string length is equal to the passed `length` parameter. By default, pads on the **left** with the space char (`\\\" \\\"`). `padStr` is truncated to a single character if necessary.\\n\\n```javascript\\n_.pad(\\\"1\\\", 8)\\n-> \\\"       1\\\";\\n\\n_.pad(\\\"1\\\", 8, '0')\\n-> \\\"00000001\\\";\\n\\n_.pad(\\\"1\\\", 8, '0', 'right')\\n-> \\\"10000000\\\";\\n\\n_.pad(\\\"1\\\", 8, '0', 'both')\\n-> \\\"00001000\\\";\\n\\n_.pad(\\\"1\\\", 8, 'bleepblorp', 'both')\\n-> \\\"bbbb1bbb\\\";\\n```\\n\\n**lpad** _.lpad(str, length, [padStr])\\n\\nleft-pad a string. Alias for `pad(str, length, padStr, 'left')`\\n\\n```javascript\\n_.lpad(\\\"1\\\", 8, '0')\\n-> \\\"00000001\\\";\\n```\\n\\n**rpad** _.rpad(str, length, [padStr])\\n\\nright-pad a string. Alias for `pad(str, length, padStr, 'right')`\\n\\n```javascript\\n_.rpad(\\\"1\\\", 8, '0')\\n-> \\\"10000000\\\";\\n```\\n\\n**lrpad** _.lrpad(str, length, [padStr])\\n\\nleft/right-pad a string. Alias for `pad(str, length, padStr, 'both')`\\n\\n```javascript\\n_.lrpad(\\\"1\\\", 8, '0')\\n-> \\\"00001000\\\";\\n```\\n\\n**center** alias for **lrpad**\\n\\n**ljust** alias for *rpad*\\n\\n**rjust** alias for *lpad*\\n\\n**toNumber**  _.toNumber(string, [decimals])\\n\\nParse string to number. Returns NaN if string can't be parsed to number.\\n\\n```javascript\\n_('2.556').toNumber()\\n=> 3\\n\\n_('2.556').toNumber(1)\\n=> 2.6\\n```\\n\\n**strRight**  _.strRight(string, pattern)\\n\\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strRight('_')\\n=> \\\"is_a_test_string\\\";\\n```\\n\\n**strRightBack**  _.strRightBack(string, pattern)\\n\\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strRightBack('_')\\n=> \\\"string\\\";\\n```\\n\\n**strLeft**  _.strLeft(string, pattern)\\n\\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strLeft('_')\\n=> \\\"This\\\";\\n```\\n\\n**strLeftBack**  _.strLeftBack(string, pattern)\\n\\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strLeftBack('_')\\n=> \\\"This_is_a_test\\\";\\n```\\n\\n**stripTags**\\n\\nRemoves all html tags from string.\\n\\n```javascript\\n_('a <a href=\\\"#\\\">link</a>').stripTags()\\n=> 'a link'\\n\\n_('a <a href=\\\"#\\\">link</a><script>alert(\\\"hello world!\\\")</script>').stripTags()\\n=> 'a linkalert(\\\"hello world!\\\")'\\n```\\n\\n**toSentence**  _.toSentence(array, [delimiter, lastDelimiter])\\n\\nJoin an array into a human readable sentence.\\n\\n```javascript\\n_.toSentence(['jQuery', 'Mootools', 'Prototype'])\\n=> 'jQuery, Mootools and Prototype';\\n\\n_.toSentence(['jQuery', 'Mootools', 'Prototype'], ', ', ' unt ')\\n=> 'jQuery, Mootools unt Prototype';\\n```\\n\\n**toSentenceSerial**  _.toSentenceSerial(array, [delimiter, lastDelimiter])\\n\\nThe same as `toSentence`, but adjusts delimeters to use [Serial comma](http://en.wikipedia.org/wiki/Serial_comma).\\n\\n```javascript\\n_.toSentenceSerial(['jQuery', 'Mootools'])\\n=> 'jQuery and Mootools';\\n\\n_.toSentenceSerial(['jQuery', 'Mootools', 'Prototype'])\\n=> 'jQuery, Mootools, and Prototype'\\n\\n_.toSentenceSerial(['jQuery', 'Mootools', 'Prototype'], ', ', ' unt ');\\n=> 'jQuery, Mootools, unt Prototype';\\n```\\n\\n**repeat** _.repeat(string, count, [separator])\\n\\nRepeats a string count times.\\n\\n```javascript\\n_.repeat(\\\"foo\\\", 3)\\n=> 'foofoofoo';\\n\\n_.repeat(\\\"foo\\\", 3, \\\"bar\\\")\\n=> 'foobarfoobarfoo'\\n```\\n\\n**surround** _.surround(string, wrap)\\n\\nSurround a string with another string.\\n\\n```javascript\\n_.surround(\\\"foo\\\", \\\"ab\\\")\\n=> 'abfooab';\\n```\\n\\n**quote** _.quote(string, quoteChar) or _.q(string, quoteChar)\\n\\nQuotes a string. `quoteChar` defaults to `\\\"`.\\n\\n```javascript\\n_.quote('foo', quoteChar)\\n=> '\\\"foo\\\"';\\n```\\n**unquote** _.unquote(string, quoteChar)\\n\\nUnquotes a string. `quoteChar` defaults to `\\\"`.\\n\\n```javascript\\n_.unquote('\\\"foo\\\"')\\n=> 'foo';\\n_.unquote(\\\"'foo'\\\", \\\"'\\\")\\n=> 'foo';\\n```\\n\\n\\n**slugify** _.slugify(string)\\n\\nTransform text into a URL slug. Replaces whitespaces, accentuated, and special characters with a dash.\\n\\n```javascript\\n_.slugify(\\\"Un éléphant à l'orée du bois\\\")\\n=> 'un-elephant-a-loree-du-bois';\\n```\\n\\n***Caution: this function is charset dependent***\\n\\n**naturalCmp** array.sort(_.naturalCmp)\\n\\nNaturally sort strings like humans would do.\\n\\n```javascript\\n['foo20', 'foo5'].sort(_.naturalCmp)\\n=> [ 'foo5', 'foo20' ]\\n```\\n\\n**toBoolean** _.toBoolean(string) or _.toBool(string)\\n\\nTurn strings that can be commonly considered as booleas to real booleans. Such as \\\"true\\\", \\\"false\\\", \\\"1\\\" and \\\"0\\\". This function is case insensitive.\\n\\n```javascript\\n_.toBoolean(\\\"true\\\")\\n=> true\\n_.toBoolean(\\\"FALSE\\\")\\n=> false\\n_.toBoolean(\\\"random\\\")\\n=> undefined\\n```\\n\\nIt can be customized by giving arrays of truth and falsy value matcher as parameters. Matchers can be also RegExp objects.\\n\\n```javascript\\n_.toBoolean(\\\"truthy\\\", [\\\"truthy\\\"], [\\\"falsy\\\"])\\n=> true\\n_.toBoolean(\\\"true only at start\\\", [/^true/])\\n=> true\\n```\\n\\n## Roadmap ##\\n\\nAny suggestions or bug reports are welcome. Just email me or more preferably open an issue.\\n\\n#### Problems\\n\\nWe lose two things for `include` and `reverse` methods from `_.string`:\\n\\n* Calls like `_('foobar').include('bar')` aren't available;\\n* Chaining isn't available too.\\n\\nBut if you need this functionality you can create aliases for conflict functions which will be convenient for you:\\n\\n```javascript\\n_.mixin({\\n    includeString: _.str.include,\\n    reverseString: _.str.reverse\\n})\\n\\n// Now wrapper calls and chaining are available.\\n_('foobar').chain().reverseString().includeString('rab').value()\\n```\\n\\n#### Standalone Usage\\n\\nIf you are using Underscore.string without Underscore. You also have `_.string` namespace for it and `_.str` alias\\nBut of course you can just reassign `_` variable with `_.string`\\n\\n```javascript\\n_ = _.string\\n```\\n\\n## Changelog ##\\n\\n### 2.3.3 ###\\n\\n* Add `toBoolean`\\n* Add `unquote`\\n* Add quote char option to `quote`\\n* Support dash-separated words in `titleize`\\n\\n### 2.3.2 ###\\n\\n* Add `naturalCmp`\\n* Bug fix to `camelize`\\n* Add ă, ș, ț and ś to `slugify`\\n* Doc updates\\n* Add support for [component](http://component.io/)\\n* [Full changelog](https://github.com/epeli/underscore.string/compare/v2.3.1...v2.3.2)\\n\\n### 2.3.1 ###\\n\\n* Bug fixes to `escapeHTML`, `classify`, `substr`\\n* Faster `count`\\n* Documentation fixes\\n* [Full changelog](https://github.com/epeli/underscore.string/compare/v2.3.0...v2.3.1)\\n\\n### 2.3.0 ###\\n\\n* Added `numberformat` method\\n* Added `levenshtein` method (Levenshtein distance calculation)\\n* Added `swapCase` method\\n* Changed default behavior of `words` method\\n* Added `toSentenceSerial` method\\n* Added `surround` and `quote` methods\\n\\n### 2.2.1 ###\\n\\n* Same as 2.2.0 (2.2.0rc on npm) to fix some npm drama\\n\\n### 2.2.0 ###\\n\\n* Capitalize method behavior changed\\n* Various perfomance tweaks\\n\\n### 2.1.1###\\n\\n* Fixed words method bug\\n* Added classify method\\n\\n### 2.1.0 ###\\n\\n* AMD support\\n* Added toSentence method\\n* Added slugify method\\n* Lots of speed optimizations\\n\\n### 2.0.0 ###\\n\\n* Added prune, humanize functions\\n* Added _.string (_.str) namespace for Underscore.string library\\n* Removed includes function\\n\\nFor upgrading to this version you need to mix in Underscore.string library to Underscore object:\\n\\n```javascript\\n_.mixin(_.string.exports());\\n```\\n\\nand all non-conflict Underscore.string functions will be available through Underscore object.\\nAlso function `includes` has been removed, you should replace this function by `_.str.include`\\nor create alias `_.includes = _.str.include` and all your code will work fine.\\n\\n### 1.1.6 ###\\n\\n* Fixed reverse and truncate\\n* Added isBlank, stripTags, inlude(alias for includes)\\n* Added uglifier compression\\n\\n### 1.1.5 ###\\n\\n* Added strRight, strRightBack, strLeft, strLeftBack\\n\\n### 1.1.4 ###\\n\\n* Added pad, lpad, rpad, lrpad methods and aliases center, ljust, rjust\\n* Integration with Underscore 1.1.6\\n\\n### 1.1.3 ###\\n\\n* Added methods: underscored, camelize, dasherize\\n* Support newer version of npm\\n\\n### 1.1.2 ###\\n\\n* Created functions: lines, chars, words functions\\n\\n### 1.0.2 ###\\n\\n* Created integration test suite with underscore.js 1.1.4 (now it's absolutely compatible)\\n* Removed 'reverse' function, because this function override underscore.js 'reverse'\\n\\n## Contribute ##\\n\\n* Fork & pull request. Don't forget about tests.\\n* If you planning add some feature please create issue before.\\n\\nOtherwise changes will be rejected.\\n\\n## Contributors list ##\\n[Can be found here](https://github.com/epeli/underscore.string/graphs/contributors).\\n\\n\\n## Licence ##\\n\\nThe MIT License\\n\\nCopyright (c) 2011 Esa-Matti Suuronen esa-matti@suuronen.org\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n\",\n   70    \"readmeFilename\": \"README.markdown\",\n   71    \"_id\": \"underscore.string@2.3.3\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\README.markdown:\n  768  \n  769  * Added methods: underscored, camelize, dasherize\n  770: * Support newer version of npm\n  771  \n  772  ### 1.1.2 ###\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\dist\\underscore.string.min.js:\n    1: !function(e,n){\"use strict\";function r(e,n){var r,t,u=e.toLowerCase();for(n=[].concat(n),r=0;n.length>r;r+=1)if(t=n[r]){if(t.test&&t.test(e))return!0;if(t.toLowerCase()===u)return!0}}var t=n.prototype.trim,u=n.prototype.trimRight,i=n.prototype.trimLeft,l=function(e){return 1*e||0},o=function(e,n){if(1>n)return\"\";for(var r=\"\";n>0;)1&n&&(r+=e),n>>=1,e+=e;return r},a=[].slice,c=function(e){return null==e?\"\\\\s\":e.source?e.source:\"[\"+g.escapeRegExp(e)+\"]\"},s={lt:\"<\",gt:\">\",quot:'\"',amp:\"&\",apos:\"'\"},f={};for(var p in s)f[s[p]]=p;f[\"'\"]=\"#39\";var h=function(){function e(e){return Object.prototype.toString.call(e).slice(8,-1).toLowerCase()}var r=o,t=function(){return t.cache.hasOwnProperty(arguments[0])||(t.cache[arguments[0]]=t.parse(arguments[0])),t.format.call(null,t.cache[arguments[0]],arguments)};return t.format=function(t,u){var i,l,o,a,c,s,f,p=1,g=t.length,d=\"\",m=[];for(l=0;g>l;l++)if(d=e(t[l]),\"string\"===d)m.push(t[l]);else if(\"array\"===d){if(a=t[l],a[2])for(i=u[p],o=0;a[2].length>o;o++){if(!i.hasOwnProperty(a[2][o]))throw new Error(h('[_.sprintf] property \"%s\" does not exist',a[2][o]));i=i[a[2][o]]}else i=a[1]?u[a[1]]:u[p++];if(/[^s]/.test(a[8])&&\"number\"!=e(i))throw new Error(h(\"[_.sprintf] expecting number but found %s\",e(i)));switch(a[8]){case\"b\":i=i.toString(2);break;case\"c\":i=n.fromCharCode(i);break;case\"d\":i=parseInt(i,10);break;case\"e\":i=a[7]?i.toExponential(a[7]):i.toExponential();break;case\"f\":i=a[7]?parseFloat(i).toFixed(a[7]):parseFloat(i);break;case\"o\":i=i.toString(8);break;case\"s\":i=(i=n(i))&&a[7]?i.substring(0,a[7]):i;break;case\"u\":i=Math.abs(i);break;case\"x\":i=i.toString(16);break;case\"X\":i=i.toString(16).toUpperCase()}i=/[def]/.test(a[8])&&a[3]&&i>=0?\"+\"+i:i,s=a[4]?\"0\"==a[4]?\"0\":a[4].charAt(1):\" \",f=a[6]-n(i).length,c=a[6]?r(s,f):\"\",m.push(a[5]?i+c:c+i)}return m.join(\"\")},t.cache={},t.parse=function(e){for(var n=e,r=[],t=[],u=0;n;){if(null!==(r=/^[^\\x25]+/.exec(n)))t.push(r[0]);else if(null!==(r=/^\\x25{2}/.exec(n)))t.push(\"%\");else{if(null===(r=/^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(n)))throw new Error(\"[_.sprintf] huh?\");if(r[2]){u|=1;var i=[],l=r[2],o=[];if(null===(o=/^([a-z_][a-z_\\d]*)/i.exec(l)))throw new Error(\"[_.sprintf] huh?\");for(i.push(o[1]);\"\"!==(l=l.substring(o[0].length));)if(null!==(o=/^\\.([a-z_][a-z_\\d]*)/i.exec(l)))i.push(o[1]);else{if(null===(o=/^\\[(\\d+)\\]/.exec(l)))throw new Error(\"[_.sprintf] huh?\");i.push(o[1])}r[2]=i}else u|=2;if(3===u)throw new Error(\"[_.sprintf] mixing positional and named placeholders is not (yet) supported\");t.push(r)}n=n.substring(r[0].length)}return t},t}(),g={VERSION:\"2.3.0\",isBlank:function(e){return null==e&&(e=\"\"),/^\\s*$/.test(e)},stripTags:function(e){return null==e?\"\":n(e).replace(/<\\/?[^>]+>/g,\"\")},capitalize:function(e){return e=null==e?\"\":n(e),e.charAt(0).toUpperCase()+e.slice(1)},chop:function(e,r){return null==e?[]:(e=n(e),r=~~r,r>0?e.match(new RegExp(\".{1,\"+r+\"}\",\"g\")):[e])},clean:function(e){return g.strip(e).replace(/\\s+/g,\" \")},count:function(e,r){if(null==e||null==r)return 0;e=n(e),r=n(r);for(var t=0,u=0,i=r.length;;){if(u=e.indexOf(r,u),-1===u)break;t++,u+=i}return t},chars:function(e){return null==e?[]:n(e).split(\"\")},swapCase:function(e){return null==e?\"\":n(e).replace(/\\S/g,function(e){return e===e.toUpperCase()?e.toLowerCase():e.toUpperCase()})},escapeHTML:function(e){return null==e?\"\":n(e).replace(/[&<>\"']/g,function(e){return\"&\"+f[e]+\";\"})},unescapeHTML:function(e){return null==e?\"\":n(e).replace(/\\&([^;]+);/g,function(e,r){var t;return r in s?s[r]:(t=r.match(/^#x([\\da-fA-F]+)$/))?n.fromCharCode(parseInt(t[1],16)):(t=r.match(/^#(\\d+)$/))?n.fromCharCode(~~t[1]):e})},escapeRegExp:function(e){return null==e?\"\":n(e).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g,\"\\\\$1\")},splice:function(e,n,r,t){var u=g.chars(e);return u.splice(~~n,~~r,t),u.join(\"\")},insert:function(e,n,r){return g.splice(e,n,0,r)},include:function(e,r){return\"\"===r?!0:null==e?!1:-1!==n(e).indexOf(r)},join:function(){var e=a.call(arguments),n=e.shift();return null==n&&(n=\"\"),e.join(n)},lines:function(e){return null==e?[]:n(e).split(\"\\n\")},reverse:function(e){return g.chars(e).reverse().join(\"\")},startsWith:function(e,r){return\"\"===r?!0:null==e||null==r?!1:(e=n(e),r=n(r),e.length>=r.length&&e.slice(0,r.length)===r)},endsWith:function(e,r){return\"\"===r?!0:null==e||null==r?!1:(e=n(e),r=n(r),e.length>=r.length&&e.slice(e.length-r.length)===r)},succ:function(e){return null==e?\"\":(e=n(e),e.slice(0,-1)+n.fromCharCode(e.charCodeAt(e.length-1)+1))},titleize:function(e){return null==e?\"\":(e=n(e).toLowerCase(),e.replace(/(?:^|\\s|-)\\S/g,function(e){return e.toUpperCase()}))},camelize:function(e){return g.trim(e).replace(/[-_\\s]+(.)?/g,function(e,n){return n?n.toUpperCase():\"\"})},underscored:function(e){return g.trim(e).replace(/([a-z\\d])([A-Z]+)/g,\"$1_$2\").replace(/[-\\s]+/g,\"_\").toLowerCase()},dasherize:function(e){return g.trim(e).replace(/([A-Z])/g,\"-$1\").replace(/[-_\\s]+/g,\"-\").toLowerCase()},classify:function(e){return g.titleize(n(e).replace(/[\\W_]/g,\" \")).replace(/\\s/g,\"\")},humanize:function(e){return g.capitalize(g.underscored(e).replace(/_id$/,\"\").replace(/_/g,\" \"))},trim:function(e,r){return null==e?\"\":!r&&t?t.call(e):(r=c(r),n(e).replace(new RegExp(\"^\"+r+\"+|\"+r+\"+$\",\"g\"),\"\"))},ltrim:function(e,r){return null==e?\"\":!r&&i?i.call(e):(r=c(r),n(e).replace(new RegExp(\"^\"+r+\"+\"),\"\"))},rtrim:function(e,r){return null==e?\"\":!r&&u?u.call(e):(r=c(r),n(e).replace(new RegExp(r+\"+$\"),\"\"))},truncate:function(e,r,t){return null==e?\"\":(e=n(e),t=t||\"...\",r=~~r,e.length>r?e.slice(0,r)+t:e)},prune:function(e,r,t){if(null==e)return\"\";if(e=n(e),r=~~r,t=null!=t?n(t):\"...\",r>=e.length)return e;var u=function(e){return e.toUpperCase()!==e.toLowerCase()?\"A\":\" \"},i=e.slice(0,r+1).replace(/.(?=\\W*\\w*$)/g,u);return i=i.slice(i.length-2).match(/\\w\\w/)?i.replace(/\\s*\\S+$/,\"\"):g.rtrim(i.slice(0,i.length-1)),(i+t).length>e.length?e:e.slice(0,i.length)+t},words:function(e,n){return g.isBlank(e)?[]:g.trim(e,n).split(n||/\\s+/)},pad:function(e,r,t,u){e=null==e?\"\":n(e),r=~~r;var i=0;switch(t?t.length>1&&(t=t.charAt(0)):t=\" \",u){case\"right\":return i=r-e.length,e+o(t,i);case\"both\":return i=r-e.length,o(t,Math.ceil(i/2))+e+o(t,Math.floor(i/2));default:return i=r-e.length,o(t,i)+e}},lpad:function(e,n,r){return g.pad(e,n,r)},rpad:function(e,n,r){return g.pad(e,n,r,\"right\")},lrpad:function(e,n,r){return g.pad(e,n,r,\"both\")},sprintf:h,vsprintf:function(e,n){return n.unshift(e),h.apply(null,n)},toNumber:function(e,n){return e?(e=g.trim(e),e.match(/^-?\\d+(?:\\.\\d+)?$/)?l(l(e).toFixed(~~n)):0/0):0},numberFormat:function(e,n,r,t){if(isNaN(e)||null==e)return\"\";e=e.toFixed(~~n),t=\"string\"==typeof t?t:\",\";var u=e.split(\".\"),i=u[0],l=u[1]?(r||\".\")+u[1]:\"\";return i.replace(/(\\d)(?=(?:\\d{3})+$)/g,\"$1\"+t)+l},strRight:function(e,r){if(null==e)return\"\";e=n(e),r=null!=r?n(r):r;var t=r?e.indexOf(r):-1;return~t?e.slice(t+r.length,e.length):e},strRightBack:function(e,r){if(null==e)return\"\";e=n(e),r=null!=r?n(r):r;var t=r?e.lastIndexOf(r):-1;return~t?e.slice(t+r.length,e.length):e},strLeft:function(e,r){if(null==e)return\"\";e=n(e),r=null!=r?n(r):r;var t=r?e.indexOf(r):-1;return~t?e.slice(0,t):e},strLeftBack:function(e,n){if(null==e)return\"\";e+=\"\",n=null!=n?\"\"+n:n;var r=e.lastIndexOf(n);return~r?e.slice(0,r):e},toSentence:function(e,n,r,t){n=n||\", \",r=r||\" and \";var u=e.slice(),i=u.pop();return e.length>2&&t&&(r=g.rtrim(n)+r),u.length?u.join(n)+r+i:i},toSentenceSerial:function(){var e=a.call(arguments);return e[3]=!0,g.toSentence.apply(g,e)},slugify:function(e){if(null==e)return\"\";var r=\"ąàáäâãåæăćęèéëêìíïîłńòóöôõøśșțùúüûñçżź\",t=\"aaaaaaaaaceeeeeiiiilnoooooosstuuuunczz\",u=new RegExp(c(r),\"g\");return e=n(e).toLowerCase().replace(u,function(e){var n=r.indexOf(e);return t.charAt(n)||\"-\"}),g.dasherize(e.replace(/[^\\w\\s-]/g,\"\"))},surround:function(e,n){return[n,e,n].join(\"\")},quote:function(e,n){return g.surround(e,n||'\"')},unquote:function(e,n){return n=n||'\"',e[0]===n&&e[e.length-1]===n?e.slice(1,e.length-1):e},exports:function(){var e={};for(var n in this)this.hasOwnProperty(n)&&!n.match(/^(?:include|contains|reverse)$/)&&(e[n]=this[n]);return e},repeat:function(e,r,t){if(null==e)return\"\";if(r=~~r,null==t)return o(n(e),r);for(var u=[];r>0;u[--r]=e);return u.join(t)},naturalCmp:function(e,r){if(e==r)return 0;if(!e)return-1;if(!r)return 1;for(var t=/(\\.\\d+)|(\\d+)|(\\D+)/g,u=n(e).toLowerCase().match(t),i=n(r).toLowerCase().match(t),l=Math.min(u.length,i.length),o=0;l>o;o++){var a=u[o],c=i[o];if(a!==c){var s=parseInt(a,10);if(!isNaN(s)){var f=parseInt(c,10);if(!isNaN(f)&&s-f)return s-f}return c>a?-1:1}}return u.length===i.length?u.length-i.length:r>e?-1:1},levenshtein:function(e,r){if(null==e&&null==r)return 0;if(null==e)return n(r).length;if(null==r)return n(e).length;e=n(e),r=n(r);for(var t,u,i=[],l=0;r.length>=l;l++)for(var o=0;e.length>=o;o++)u=l&&o?e.charAt(o-1)===r.charAt(l-1)?t:Math.min(i[o],i[o-1],t)+1:l+o,t=i[o],i[o]=u;return i.pop()},toBoolean:function(e,n,t){return\"number\"==typeof e&&(e=\"\"+e),\"string\"!=typeof e?!!e:(e=g.trim(e),r(e,n||[\"true\",\"1\"])?!0:r(e,t||[\"false\",\"0\"])?!1:void 0)}};g.strip=g.trim,g.lstrip=g.ltrim,g.rstrip=g.rtrim,g.center=g.lrpad,g.rjust=g.lpad,g.ljust=g.rpad,g.contains=g.include,g.q=g.quote,g.toBool=g.toBoolean,\"undefined\"!=typeof exports&&(\"undefined\"!=typeof module&&module.exports&&(module.exports=g),exports._s=g),\"function\"==typeof define&&define.amd&&define(\"underscore.string\",[],function(){return g}),e._=e._||{},e._.string=e._.str=g}(this,String);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\lib\\underscore.string.js:\n   95              for (k = 0; k < match[2].length; k++) {\n   96                if (!arg.hasOwnProperty(match[2][k])) {\n   97:                 throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));\n   98                }\n   99                arg = arg[match[2][k]];\n  ...\n  107  \n  108            if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {\n  109:             throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));\n  110            }\n  111            switch (match[8]) {\n  ...\n  156                  }\n  157                  else {\n  158:                   throw new Error('[_.sprintf] huh?');\n  159                  }\n  160                }\n  161              }\n  162              else {\n  163:               throw new Error('[_.sprintf] huh?');\n  164              }\n  165              match[2] = field_list;\n  ...\n  169            }\n  170            if (arg_names === 3) {\n  171:             throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');\n  172            }\n  173            parse_tree.push(match);\n  174          }\n  175          else {\n  176:           throw new Error('[_.sprintf] huh?');\n  177          }\n  178          _fmt = _fmt.substring(match[0].length);\n  ...\n  211        str = String(str);\n  212        step = ~~step;\n  213:       return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\n  214      },\n  215  \n  ...\n  361        if (!characters && nativeTrim) return nativeTrim.call(str);\n  362        characters = defaultToWhiteSpace(characters);\n  363:       return String(str).replace(new RegExp('\\^' + characters + '+|' + characters + '+$', 'g'), '');\n  364      },\n  365  \n  ...\n  368        if (!characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n  369        characters = defaultToWhiteSpace(characters);\n  370:       return String(str).replace(new RegExp('^' + characters + '+'), '');\n  371      },\n  372  \n  ...\n  375        if (!characters && nativeTrimRight) return nativeTrimRight.call(str);\n  376        characters = defaultToWhiteSpace(characters);\n  377:       return String(str).replace(new RegExp(characters + '+$'), '');\n  378      },\n  379  \n  ...\n  526        var from  = \"ąàáäâãåæăćęèéëêìíïîłńòóöôõøśșțùúüûñçżź\",\n  527            to    = \"aaaaaaaaaceeeeeiiiilnoooooosstuuuunczz\",\n  528:           regex = new RegExp(defaultToWhiteSpace(from), 'g');\n  529  \n  530        str = String(str).toLowerCase().replace(regex, function(c){\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\run-qunit.js:\n    1  function waitFor(test, complete, timeout) {\n    2:   var result, start = new Date().getTime()\n    3    setInterval(function interval() {\n    4:     if ((new Date().getTime() - start < timeout) && !result) {\n    5        result = test()\n    6      } else {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\strings.js:\n  527      equal(_.numberFormat(null, '.', ','), '');\n  528      equal(_.numberFormat(undefined, '.', ','), '');\n  529:     equal(_.numberFormat(new Number(5000)), '5,000');\n  530    });\n  531  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\underscore.js:\n   48    var _ = function(obj) {\n   49      if (obj instanceof _) return obj;\n   50:     if (!(this instanceof _)) return new _(obj);\n   51      this._wrapped = obj;\n   52    };\n   ..\n  120        }\n  121      });\n  122:     if (!initial) throw new TypeError('Reduce of empty array with no initial value');\n  123      return memo;\n  124    };\n  ...\n  147        }\n  148      });\n  149:     if (!initial) throw new TypeError('Reduce of empty array with no initial value');\n  150      return memo;\n  151    };\n  ...\n  481      var args = slice.call(arguments);\n  482      var length = _.max(_.pluck(args, 'length'));\n  483:     var results = new Array(length);\n  484      for (var i = 0; i < length; i++) {\n  485        results[i] = _.pluck(args, \"\" + i);\n  ...\n  550      var len = Math.max(Math.ceil((stop - start) / step), 0);\n  551      var idx = 0;\n  552:     var range = new Array(len);\n  553  \n  554      while(idx < len) {\n  ...\n  573      var bound, args;\n  574      if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n  575:     if (!_.isFunction(func)) throw new TypeError;\n  576      args = slice.call(arguments, 2);\n  577      return bound = function() {\n  578        if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n  579        ctor.prototype = func.prototype;\n  580:       var self = new ctor;\n  581        var result = func.apply(self, args.concat(slice.call(arguments)));\n  582        if (Object(result) === result) return result;\n  ...\n  623      var previous = 0;\n  624      var later = function() {\n  625:       previous = new Date;\n  626        timeout = null;\n  627        result = func.apply(context, args);\n  628      };\n  629      return function() {\n  630:       var now = new Date;\n  631        var remaining = wait - (now - previous);\n  632        context = this;\n  ...\n  716    // Delegates to **ECMAScript 5**'s native `Object.keys`\n  717    _.keys = nativeKeys || function(obj) {\n  718:     if (obj !== Object(obj)) throw new TypeError('Invalid object');\n  719      var keys = [];\n  720      for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n  ...\n  824        case '[object String]':\n  825          // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n  826:         // equivalent to `new String(\"5\")`.\n  827          return a == String(b);\n  828        case '[object Number]':\n  ...\n 1025    // Regexes containing the keys and values listed immediately above.\n 1026    var entityRegexes = {\n 1027:     escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n 1028:     unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n 1029    };\n 1030  \n ....\n 1101  \n 1102      // Combine delimiters into one regular expression via alternation.\n 1103:     var matcher = new RegExp([\n 1104        (settings.escape || noMatch).source,\n 1105        (settings.interpolate || noMatch).source,\n ....\n 1129  \n 1130      try {\n 1131:       var render = new Function(settings.variable || 'obj', '_', source);\n 1132      } catch (e) {\n 1133        e.source = source;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\collections.js:\n  282      equal(Infinity, _.min([]), 'Minimum value of an empty array');\n  283  \n  284:     var now = new Date(9999999999);\n  285:     var then = new Date(0);\n  286      equal(_.min([now, then]), then);\n  287  \n  ...\n  307  \n  308      var collection = [\n  309:       new Pair(1, 1), new Pair(1, 2),\n  310:       new Pair(1, 3), new Pair(1, 4),\n  311:       new Pair(1, 5), new Pair(1, 6),\n  312:       new Pair(2, 1), new Pair(2, 2),\n  313:       new Pair(2, 3), new Pair(2, 4),\n  314:       new Pair(2, 5), new Pair(2, 6),\n  315:       new Pair(undefined, 1), new Pair(undefined, 2),\n  316:       new Pair(undefined, 3), new Pair(undefined, 4),\n  317:       new Pair(undefined, 5), new Pair(undefined, 6)\n  318      ];\n  319  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\functions.js:\n   35      var F = function () { return this; };\n   36      var Boundf = _.bind(F, {hello: \"moe curly\"});\n   37:     equal(new Boundf().hello, undefined, \"function should not be bound to the context, to comply with ECMAScript 5\");\n   38:     equal(Boundf().hello, \"moe curly\", \"When called without the new operator, it's OK to be bound to the context\");\n   39    });\n   40  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\objects.js:\n   40      var Animal = function(){};\n   41      Animal.prototype.run = function(){};\n   42:     equal(_.functions(new Animal).join(''), 'run', 'also looks up functions on the prototype');\n   43    });\n   44  \n   ..\n   67      var Obj = function(){};\n   68      Obj.prototype = {a: 1, b: 2, c: 3};\n   69:     ok(_.isEqual(_.pick(new Obj, 'a', 'c'), {a:1, c: 3}), 'include prototype props');\n   70    });\n   71  \n   ..\n   81      var Obj = function(){};\n   82      Obj.prototype = {a: 1, b: 2, c: 3};\n   83:     ok(_.isEqual(_.omit(new Obj, 'b'), {a:1, c: 3}), 'include prototype props');\n   84    });\n   85  \n   ..\n   96      equal(options.empty, \"\", 'value exists');\n   97      ok(_.isNaN(options.nan), \"NaN isn't overridden\");\n   98:     equal(options.word, \"word\", 'new value is added, first one wins');\n   99    });\n  100  \n  ...\n  136      // String object and primitive comparisons.\n  137      ok(_.isEqual(\"Curly\", \"Curly\"), \"Identical string primitives are equal\");\n  138:     ok(_.isEqual(new String(\"Curly\"), new String(\"Curly\")), \"String objects with identical primitive values are equal\");\n  139:     ok(_.isEqual(new String(\"Curly\"), \"Curly\"), \"String primitives and their corresponding object wrappers are equal\");\n  140:     ok(_.isEqual(\"Curly\", new String(\"Curly\")), \"Commutative equality is implemented for string objects and primitives\");\n  141  \n  142      ok(!_.isEqual(\"Curly\", \"Larry\"), \"String primitives with different values are not equal\");\n  143:     ok(!_.isEqual(new String(\"Curly\"), new String(\"Larry\")), \"String objects with different primitive values are not equal\");\n  144:     ok(!_.isEqual(new String(\"Curly\"), {toString: function(){ return \"Curly\"; }}), \"String objects and objects with a custom `toString` method are not equal\");\n  145  \n  146      // Number object and primitive comparisons.\n  147      ok(_.isEqual(75, 75), \"Identical number primitives are equal\");\n  148:     ok(_.isEqual(new Number(75), new Number(75)), \"Number objects with identical primitive values are equal\");\n  149:     ok(_.isEqual(75, new Number(75)), \"Number primitives and their corresponding object wrappers are equal\");\n  150:     ok(_.isEqual(new Number(75), 75), \"Commutative equality is implemented for number objects and primitives\");\n  151:     ok(!_.isEqual(new Number(0), -0), \"`new Number(0)` and `-0` are not equal\");\n  152:     ok(!_.isEqual(0, new Number(-0)), \"Commutative equality is implemented for `new Number(0)` and `-0`\");\n  153  \n  154:     ok(!_.isEqual(new Number(75), new Number(63)), \"Number objects with different primitive values are not equal\");\n  155:     ok(!_.isEqual(new Number(63), {valueOf: function(){ return 63; }}), \"Number objects and objects with a `valueOf` method are not equal\");\n  156  \n  157      // Comparisons involving `NaN`.\n  158      ok(_.isEqual(NaN, NaN), \"`NaN` is equal to `NaN`\");\n  159      ok(!_.isEqual(61, NaN), \"A number primitive is not equal to `NaN`\");\n  160:     ok(!_.isEqual(new Number(79), NaN), \"A number object is not equal to `NaN`\");\n  161      ok(!_.isEqual(Infinity, NaN), \"`Infinity` is not equal to `NaN`\");\n  162  \n  163      // Boolean object and primitive comparisons.\n  164      ok(_.isEqual(true, true), \"Identical boolean primitives are equal\");\n  165:     ok(_.isEqual(new Boolean, new Boolean), \"Boolean objects with identical primitive values are equal\");\n  166:     ok(_.isEqual(true, new Boolean(true)), \"Boolean primitives and their corresponding object wrappers are equal\");\n  167:     ok(_.isEqual(new Boolean(true), true), \"Commutative equality is implemented for booleans\");\n  168:     ok(!_.isEqual(new Boolean(true), new Boolean), \"Boolean objects with different primitive values are not equal\");\n  169  \n  170      // Common type coercions.\n  171:     ok(!_.isEqual(true, new Boolean(false)), \"Boolean objects are not equal to the boolean primitive `true`\");\n  172      ok(!_.isEqual(\"75\", 75), \"String and number primitives with like values are not equal\");\n  173:     ok(!_.isEqual(new Number(63), new String(63)), \"String and number objects with like values are not equal\");\n  174      ok(!_.isEqual(75, \"75\"), \"Commutative equality is implemented for like string and number values\");\n  175      ok(!_.isEqual(0, \"\"), \"Number and string primitives with like values are not equal\");\n  176      ok(!_.isEqual(1, true), \"Number and boolean primitives with like values are not equal\");\n  177:     ok(!_.isEqual(new Boolean(false), new Number(0)), \"Boolean and number objects with like values are not equal\");\n  178:     ok(!_.isEqual(false, new String(\"\")), \"Boolean primitives and string objects with like values are not equal\");\n  179:     ok(!_.isEqual(12564504e5, new Date(2009, 9, 25)), \"Dates and their corresponding numeric primitive values are not equal\");\n  180  \n  181      // Dates.\n  182:     ok(_.isEqual(new Date(2009, 9, 25), new Date(2009, 9, 25)), \"Date objects referencing identical times are equal\");\n  183:     ok(!_.isEqual(new Date(2009, 9, 25), new Date(2009, 11, 13)), \"Date objects referencing different times are not equal\");\n  184:     ok(!_.isEqual(new Date(2009, 11, 13), {\n  185        getTime: function(){\n  186          return 12606876e5;\n  187        }\n  188      }), \"Date objects and objects with a `getTime` method are not equal\");\n  189:     ok(!_.isEqual(new Date(\"Curly\"), new Date(\"Curly\")), \"Invalid dates are not equal\");\n  190  \n  191      // Functions.\n  ...\n  211      // Arrays with primitive and object values.\n  212      ok(_.isEqual([1, \"Larry\", true], [1, \"Larry\", true]), \"Arrays containing identical primitives are equal\");\n  213:     ok(_.isEqual([(/Moe/g), new Date(2009, 9, 25)], [(/Moe/g), new Date(2009, 9, 25)]), \"Arrays containing equivalent elements are equal\");\n  214  \n  215      // Multi-dimensional arrays.\n  216:     var a = [new Number(47), false, \"Larry\", /Moe/, new Date(2009, 11, 13), ['running', 'biking', new String('programming')], {a: 47}];\n  217:     var b = [new Number(47), false, \"Larry\", /Moe/, new Date(2009, 11, 13), ['running', 'biking', new String('programming')], {a: 47}];\n  218      ok(_.isEqual(a, b), \"Arrays containing nested arrays and objects are recursively compared\");\n  219  \n  ...\n  236      // Simple objects.\n  237      ok(_.isEqual({a: \"Curly\", b: 1, c: true}, {a: \"Curly\", b: 1, c: true}), \"Objects containing identical primitives are equal\");\n  238:     ok(_.isEqual({a: /Curly/g, b: new Date(2009, 11, 13)}, {a: /Curly/g, b: new Date(2009, 11, 13)}), \"Objects containing equivalent members are equal\");\n  239      ok(!_.isEqual({a: 63, b: 75}, {a: 61, b: 55}), \"Objects of identical sizes with different values are not equal\");\n  240      ok(!_.isEqual({a: 63, b: 75}, {a: 61, c: 55}), \"Objects of identical sizes with different property names are not equal\");\n  ...\n  245      // `A` contains nested objects and arrays.\n  246      a = {\n  247:       name: new String(\"Moe Howard\"),\n  248:       age: new Number(77),\n  249        stooge: true,\n  250        hobbies: [\"acting\"],\n  251        film: {\n  252          name: \"Sing a Song of Six Pants\",\n  253:         release: new Date(1947, 9, 30),\n  254:         stars: [new String(\"Larry Fine\"), \"Shemp Howard\"],\n  255:         minutes: new Number(16),\n  256          seconds: 54\n  257        }\n  ...\n  260      // `B` contains equivalent nested objects and arrays.\n  261      b = {\n  262:       name: new String(\"Moe Howard\"),\n  263:       age: new Number(77),\n  264        stooge: true,\n  265        hobbies: [\"acting\"],\n  266        film: {\n  267          name: \"Sing a Song of Six Pants\",\n  268:         release: new Date(1947, 9, 30),\n  269:         stars: [new String(\"Larry Fine\"), \"Shemp Howard\"],\n  270:         minutes: new Number(16),\n  271          seconds: 54\n  272        }\n  ...\n  275  \n  276      // Instances.\n  277:     ok(_.isEqual(new First, new First), \"Object instances are equal\");\n  278:     ok(!_.isEqual(new First, new Second), \"Objects with different constructors and identical own properties are not equal\");\n  279:     ok(!_.isEqual({value: 1}, new First), \"Object instances and objects sharing equivalent properties are not equal\");\n  280:     ok(!_.isEqual({value: 2}, new Second), \"The prototype chain of objects should not be examined\");\n  281  \n  282      // Circular Arrays.\n  ...\n  284      (b = []).push(b);\n  285      ok(_.isEqual(a, b), \"Arrays containing circular references are equal\");\n  286:     a.push(new String(\"Larry\"));\n  287:     b.push(new String(\"Larry\"));\n  288      ok(_.isEqual(a, b), \"Arrays containing circular references and equivalent properties are equal\");\n  289      a.push(\"Shemp\");\n  ...\n  306      b.def = 75;\n  307      ok(_.isEqual(a, b), \"Objects containing circular references and equivalent properties are equal\");\n  308:     a.def = new Number(75);\n  309:     b.def = new Number(63);\n  310      ok(!_.isEqual(a, b), \"Objects containing circular references and different properties are not equal\");\n  311  \n  ...\n  325      b[0].def = \"Larry\";\n  326      ok(_.isEqual(a, b), \"Cyclic structures containing equivalent properties are equal\");\n  327:     a[0].def = new String(\"Larry\");\n  328:     b[0].def = new String(\"Curly\");\n  329      ok(!_.isEqual(a, b), \"Cyclic structures containing different properties are not equal\");\n  330  \n  ...\n  358      ok(!_.isEmpty({one : 1}), '{one : 1} is not empty');\n  359      ok(_.isEmpty({}), '{} is empty');\n  360:     ok(_.isEmpty(new RegExp('')), 'objects with prototype properties are empty');\n  361      ok(_.isEmpty(null), 'null is empty');\n  362      ok(_.isEmpty(), 'undefined is empty');\n  ...\n  378        parent.iArguments = (function(){ return arguments; })(1, 2, 3);\\\n  379        parent.iArray     = [1, 2, 3];\\\n  380:       parent.iString    = new String('hello');\\\n  381:       parent.iNumber    = new Number(100);\\\n  382        parent.iFunction  = (function(){});\\\n  383:       parent.iDate      = new Date();\\\n  384        parent.iRegExp    = /hi/;\\\n  385        parent.iNaN       = NaN;\\\n  386        parent.iNull      = null;\\\n  387:       parent.iBoolean   = new Boolean(false);\\\n  388        parent.iUndefined = undefined;\\\n  389        parent.iObject     = {};\\\n  ...\n  420      ok(!_.isObject(12), 'and not number');\n  421      ok(!_.isObject(true), 'and not boolean');\n  422:     ok(_.isObject(new String('string')), 'but new String()');\n  423    });\n  424  \n  ...\n  470      ok(!_.isDate(100), 'numbers are not dates');\n  471      ok(!_.isDate({}), 'objects are not dates');\n  472:     ok(_.isDate(new Date()), 'but dates are');\n  473      ok(_.isDate(iDate), 'even from another frame');\n  474    });\n  ...\n  487      ok(!_.isFinite(-Infinity), '-Infinity is not Finite');\n  488      ok(!_.isFinite('12'), 'Strings are not numbers');\n  489:     var obj = new Number(5);\n  490      ok(_.isFinite(obj), 'Number instances can be finite');\n  491      ok(_.isFinite(0), '0 is Finite');\n  ...\n  500      ok(_.isNaN(NaN), 'but NaN is');\n  501      ok(_.isNaN(iNaN), 'even from another frame');\n  502:     ok(_.isNaN(new Number(NaN)), 'wrapped NaN is still NaN');\n  503    });\n  504  \n  ...\n  522    if (window.ActiveXObject) {\n  523      test(\"IE host objects\", function() {\n  524:       var xml = new ActiveXObject(\"Msxml2.DOMDocument.3.0\");\n  525        ok(!_.isNumber(xml));\n  526        ok(!_.isBoolean(xml));\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\utility.js:\n   18      var instance = _([]);\n   19      ok(_(instance) === instance);\n   20:     ok(new _(instance) === instance);\n   21    });\n   22  \n   ..\n  113      equal(quoteInStatementAndBody({foo: \"bar\"}), \"Statement quotes and 'quotes'.\");\n  114  \n  115:     var withNewlinesAndTabs = _.template('This\\n\\t\\tis: <%= x %>.\\n\\tok.\\nend.');\n  116:     equal(withNewlinesAndTabs({x: 'that'}), 'This\\n\\t\\tis: that.\\n\\tok.\\nend.');\n  117  \n  118      var template = _.template(\"<i><%- value %></i>\");\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\jquery.js:\n   25  var jQuery = function( selector, context ) {\n   26  		// The jQuery object is actually just the init constructor 'enhanced'\n   27: 		return new jQuery.fn.init( selector, context, rootjQuery );\n   28  	},\n   29  \n   ..\n  238  \n  239  	// Take an array of elements and push it onto the stack\n  240: 	// (returning the new matched element set)\n  241  	pushStack: function( elems, name, selector ) {\n  242: 		// Build a new jQuery matched element set\n  243  		var ret = this.constructor();\n  244  \n  ...\n  261  		}\n  262  \n  263: 		// Return the newly-formed element set\n  264  		return ret;\n  265  	},\n  ...\n  549  \n  550  	error: function( msg ) {\n  551: 		throw new Error( msg );\n  552  	},\n  553  \n  ...\n  571  			.replace( rvalidbraces, \"\")) ) {\n  572  \n  573: 			return ( new Function( \"return \" + data ) )();\n  574  \n  575  		}\n  ...\n  585  		try {\n  586  			if ( window.DOMParser ) { // Standard\n  587: 				tmp = new DOMParser();\n  588  				xml = tmp.parseFromString( data , \"text/xml\" );\n  589  			} else { // IE\n  590: 				xml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n  591  				xml.async = \"false\";\n  592  				xml.loadXML( data );\n  ...\n  877  \n  878  	now: function() {\n  879: 		return ( new Date() ).getTime();\n  880  	},\n  881  \n  ...\n  896  	sub: function() {\n  897  		function jQuerySub( selector, context ) {\n  898: 			return new jQuerySub.fn.init( selector, context );\n  899  		}\n  900  		jQuery.extend( true, jQuerySub, this );\n  ...\n 1250  				},\n 1251  				pipe: function( fnDone, fnFail, fnProgress ) {\n 1252: 					return jQuery.Deferred(function( newDefer ) {\n 1253  						jQuery.each( {\n 1254  							done: [ fnDone, \"resolve\" ],\n ....\n 1263  									returned = fn.apply( this, arguments );\n 1264  									if ( returned && jQuery.isFunction( returned.promise ) ) {\n 1265: 										returned.promise().then( newDefer.resolve, newDefer.reject, newDefer.notify );\n 1266  									} else {\n 1267: 										newDefer[ action + \"With\" ]( this === deferred ? newDefer : this, [ returned ] );\n 1268  									}\n 1269  								});\n 1270  							} else {\n 1271: 								deferred[ handler ]( newDefer[ action ] );\n 1272  							}\n 1273  						});\n ....\n 1316  			i = 0,\n 1317  			length = args.length,\n 1318: 			pValues = new Array( length ),\n 1319  			count = length,\n 1320  			pCount = length,\n ....\n 1720  \n 1721  		if ( !id ) {\n 1722: 			// Only DOM nodes need a new unique ID for each element since their data\n 1723  			// ends up in the global cache\n 1724  			if ( isNode ) {\n ....\n 2756  		},\n 2757  		set: function( elem, value, name ) {\n 2758: 			// Set the existing or create a new attribute node\n 2759  			var ret = elem.getAttributeNode( name );\n 2760  			if ( !ret ) {\n ....\n 2883  			// [ _, tag, id, class ]\n 2884  			quick[1] = ( quick[1] || \"\" ).toLowerCase();\n 2885: 			quick[3] = quick[3] && new RegExp( \"(?:^|\\\\s)\" + quick[3] + \"(?:\\\\s|$)\" );\n 2886  		}\n 2887  		return quick;\n ....\n 2961  			type = ( selector ? special.delegateType : special.bindType ) || type;\n 2962  \n 2963: 			// Update special based on newly reset type\n 2964  			special = jQuery.event.special[ type ] || {};\n 2965  \n ....\n 3049  			eventType = events[ type ] || [];\n 3050  			origCount = eventType.length;\n 3051: 			namespaces = namespaces ? new RegExp(\"(^|\\\\.)\" + namespaces.split(\".\").sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\") : null;\n 3052  \n 3053  			// Remove matching events\n ....\n 3141  			event[ jQuery.expando ] ? event :\n 3142  			// Object literal\n 3143: 			new jQuery.Event( type, event ) :\n 3144  			// Just the event type (string)\n 3145: 			new jQuery.Event( type );\n 3146  \n 3147  		event.type = type;\n ....\n 3149  		event.exclusive = exclusive;\n 3150  		event.namespace = namespaces.join( \".\" );\n 3151: 		event.namespace_re = event.namespace? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\") : null;\n 3152  		ontype = type.indexOf( \":\" ) < 0 ? \"on\" + type : \"\";\n 3153  \n ....\n 3477  		// simulated event prevents default then we do the same on the donor.\n 3478  		var e = jQuery.extend(\n 3479: 			new jQuery.Event(),\n 3480  			event,\n 3481  			{ type: type,\n ....\n 3512  \n 3513  jQuery.Event = function( src, props ) {\n 3514: 	// Allow instantiation without the 'new' keyword\n 3515  	if ( !(this instanceof jQuery.Event) ) {\n 3516: 		return new jQuery.Event( src, props );\n 3517  	}\n 3518  \n ....\n 4265  \n 4266  Sizzle.error = function( msg ) {\n 4267: 	throw new Error( \"Syntax error, unrecognized expression: \" + msg );\n 4268  };\n 4269  \n ....\n 4604  		text: function( elem ) {\n 4605  			var attr = elem.getAttribute( \"type\" ), type = elem.type;\n 4606: 			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n 4607  			// use getAttribute instead to test this case\n 4608  			return elem.nodeName.toLowerCase() === \"input\" && \"text\" === type && ( attr === type || attr === null );\n ....\n 4844  \n 4845  for ( var type in Expr.match ) {\n 4846: 	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\\[]*\\])(?![^\\(]*\\))/.source) );\n 4847: 	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, fescape) );\n 4848  }\n 4849  // Expose origPOS\n ....\n 4996  	// We're going to inject a fake input element with a specified name\n 4997  	var form = document.createElement(\"div\"),\n 4998: 		id = \"script\" + (new Date()).getTime(),\n 4999  		root = document.documentElement;\n 5000  \n ....\n 5742  	rnoInnerhtml = /<(?:script|style)/i,\n 5743  	rnocache = /<(?:script|object|embed|option|style)/i,\n 5744: 	rnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\n 5745  	// checked=\"checked\" or checked\n 5746  	rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n ....\n 6027  			parent = value && value.parentNode;\n 6028  \n 6029: 			// If we're in a fragment, just use that instead of building a new one\n 6030  			if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {\n 6031  				results = { fragment: parent };\n ....\n 6187  \n 6188  	// Clear flags for bubbling special change/submit events, they must\n 6189: 	// be reattached when the newly cloned events are first activated\n 6190  	dest.removeAttribute( \"_submit_attached\" );\n 6191  	dest.removeAttribute( \"_change_attached\" );\n ....\n 6698  			ret, name;\n 6699  \n 6700: 		// Remember the old values, and insert the new ones\n 6701  		for ( name in options ) {\n 6702  			old[ name ] = elem.style[ name ];\n ....\n 6771  			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;\n 6772  \n 6773: 			// Put in the new values to get a computed value out\n 6774  			if ( rsLeft ) {\n 6775  				elem.runtimeStyle.left = elem.currentStyle.left;\n ....\n 6900  			}\n 6901  \n 6902: 			// otherwise, set new filter values\n 6903  			style.filter = ralpha.test( filter ) ?\n 6904  				filter.replace( ralpha, opacity ) :\n ....\n 7624  		s.hasContent = !rnoContent.test( s.type );\n 7625  \n 7626: 		// Watch for a new set of requests\n 7627  		if ( fireGlobals && jQuery.active++ === 0 ) {\n 7628  			jQuery.event.trigger( \"ajaxStart\" );\n ....\n 8149  function createStandardXHR() {\n 8150  	try {\n 8151: 		return new window.XMLHttpRequest();\n 8152  	} catch( e ) {}\n 8153  }\n ....\n 8155  function createActiveXHR() {\n 8156  	try {\n 8157: 		return new window.ActiveXObject( \"Microsoft.XMLHTTP\" );\n 8158  	} catch( e ) {}\n 8159  }\n ....\n 8194  				send: function( headers, complete ) {\n 8195  \n 8196: 					// Get a new xhr\n 8197  					var xhr = s.xhr(),\n 8198  						handle,\n ....\n 8575  \n 8576  			for ( p in prop ) {\n 8577: 				e = new jQuery.fx( this, opt, p );\n 8578  				val = prop[ p ];\n 8579  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\jslitmus.js:\n   35    // Detect OS\n   36    var oses = ['Windows','iPhone OS','(Intel |PPC )?Mac OS X','Linux'].join('|');\n   37:   var pOS = new RegExp('((' + oses + ') [^ \\);]*)').test(ua) ? RegExp.$1 : null;\n   38:   if (!pOS) pOS = new RegExp('((' + oses + ')[^ \\);]*)').test(ua) ? RegExp.$1 : null;\n   39  \n   40    // Detect browser\n   ..\n   42  \n   43    // Detect version\n   44:   var vre = new RegExp('(Version|' + pName + ')[ \\/]([^ ;]*)');\n   45    var pVersion = (pName && vre.test(ua)) ? RegExp.$2 : null;\n   46    var platform = (pOS && pName && pVersion) ? pName + ' '  + pVersion + ' on ' + pOS : 'unknown platform';\n   ..\n  134    */\n  135    var Test = function (name, f) {\n  136:     if (!f) throw new Error('Undefined test function');\n  137      if (!(/function[^\\(]*\\(([^,\\)]*)/).test(f.toString())) {\n  138:       throw new Error('\"' + name + '\" test: Test is not a valid Function object');\n  139      }\n  140      this.loopArg = RegExp.$1;\n  ...\n  146      /** Calibration tests for establishing iteration loop overhead */\n  147      CALIBRATIONS: [\n  148:       new Test('calibrating loop', function(count) {while (count--);}),\n  149:       new Test('calibrating function', jsl.F)\n  150      ],\n  151  \n  ...\n  222  \n  223          // Start the timer\n  224:         start = new Date();\n  225  \n  226          // Now for the money shot.  If this is a looping function ...\n  ...\n  234  \n  235          // Get time test took (in secs)\n  236:         this.time = Math.max(1,new Date() - start)/1000;\n  237  \n  238          // Store iteration count and per-operation time taken\n  ...\n  250            count *= pow;\n  251            if (count > this.MAX_COUNT) {\n  252:             throw new Error('Max count exceeded.  If this test uses a looping function, make sure the iteration loop is working properly.');\n  253            }\n  254          }\n  ...\n  498       */\n  499      renderTest: function(test) {\n  500:       // Make a new row if needed\n  501        if (!test._row) {\n  502          var trow = jsl.$('test_row_template');\n  ...\n  541  \n  542      /**\n  543:      * Create a new test\n  544       */\n  545      test: function(name, f) {\n  546        // Create the Test object\n  547:       var test = new Test(name, f);\n  548        JSLitmus._tests.push(test);\n  549  \n  ...\n  558        };\n  559  \n  560:       // Render the new test\n  561        this.renderTest(test);\n  562      },\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\qunit.js:\n  333  		}\n  334  \n  335: 		test = new Test({\n  336  			name: name,\n  337  			testName: testName,\n  ...\n  417  	ok: function( result, msg ) {\n  418  		if ( !config.current ) {\n  419: 			throw new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace(2) );\n  420  		}\n  421  		result = !!result;\n  ...\n  564  	function F() {}\n  565  	F.prototype = QUnit;\n  566: 	QUnit = new F();\n  567  	// Make F QUnit's constructor so that we can add to the prototype later\n  568  	QUnit.constructor = F;\n  ...\n  601  			id: \"noglobals\",\n  602  			label: \"Check for Globals\",\n  603: 			tooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n  604  		},\n  605  		{\n  ...\n  675  			stats: { all: 0, bad: 0 },\n  676  			moduleStats: { all: 0, bad: 0 },\n  677: 			started: +new Date(),\n  678  			updateRate: 1000,\n  679  			blocking: false,\n  ...\n  782  	push: function( result, actual, expected, message ) {\n  783  		if ( !config.current ) {\n  784: 			throw new Error( \"assertion outside test context, was \" + sourceFromStacktrace() );\n  785  		}\n  786  \n  ...\n  829  	pushFailure: function( message, source, actual ) {\n  830  		if ( !config.current ) {\n  831: 			throw new Error( \"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2) );\n  832  		}\n  833  \n  ...\n 1099  		banner = id( \"qunit-banner\" ),\n 1100  		tests = id( \"qunit-tests\" ),\n 1101: 		runtime = +new Date() - config.started,\n 1102  		passed = config.stats.all - config.stats.bad,\n 1103  		html = [\n ....\n 1237  function sourceFromStacktrace( offset ) {\n 1238  	try {\n 1239: 		throw new Error();\n 1240  	} catch ( e ) {\n 1241  		return extractStacktrace( e, offset );\n ....\n 1270  		process( last );\n 1271  	}\n 1272: 	var start = new Date().getTime();\n 1273  	config.depth = config.depth ? config.depth + 1 : 1;\n 1274  \n 1275  	while ( config.queue.length && !config.blocking ) {\n 1276: 		if ( !defined.setTimeout || config.updateRate <= 0 || ( ( new Date().getTime() - start ) < config.updateRate ) ) {\n 1277  			config.queue.shift()();\n 1278  		} else {\n ....\n 1302  \n 1303  function checkPollution( name ) {\n 1304: 	var newGlobals,\n 1305  		deletedGlobals,\n 1306  		old = config.pollution;\n ....\n 1308  	saveGlobal();\n 1309  \n 1310: 	newGlobals = diff( config.pollution, old );\n 1311: 	if ( newGlobals.length > 0 ) {\n 1312: 		QUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n 1313  	}\n 1314  \n ....\n 1319  }\n 1320  \n 1321: // returns a new Array with the elements that are in a but not in b\n 1322  function diff( a, b ) {\n 1323  	var i, j,\n ....\n 1416  			function useStrictEquality( b, a ) {\n 1417  				if ( b instanceof a.constructor || a instanceof b.constructor ) {\n 1418: 					// to catch short annotaion VS 'new' annotation of a\n 1419  					// declaration\n 1420  					// e.g. var i = 1;\n 1421: 					// var j = new Number(1);\n 1422  					return a == b;\n 1423  				} else {\n ....\n 1600  	}\n 1601  	function array( arr, stack ) {\n 1602: 		var i = arr.length, ret = new Array(i);\n 1603  		this.up();\n 1604  		while ( i-- ) {\n ....\n 1673  					chr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n 1674  				}\n 1675: 				return new Array( this._depth_ + (extra||0) ).join(chr);\n 1676  			},\n 1677  			up: function( a ) {\n ....\n 1756  					}\n 1757  \n 1758: 					args = new Array(l);\n 1759  					while ( l-- ) {\n 1760  						args[l] = String.fromCharCode(97+l);//97 is 'a'\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\esprima.js:\n  114          LogicalExpression: 'LogicalExpression',\n  115          MemberExpression: 'MemberExpression',\n  116:         NewExpression: 'NewExpression',\n  117          ObjectExpression: 'ObjectExpression',\n  118          Program: 'Program',\n  ...\n  147          UnexpectedReserved:  'Unexpected reserved word',\n  148          UnexpectedEOS:  'Unexpected end of input',\n  149:         NewlineAfterThrow:  'Illegal newline after throw',\n  150          InvalidRegExp: 'Invalid regular expression',\n  151          UnterminatedRegExp:  'Invalid regular expression: missing /',\n  ...\n  178      // See also tools/generate-unicode-regex.py.\n  179      Regex = {\n  180:         NonAsciiIdentifierStart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]'),\n  181:         NonAsciiIdentifierPart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1\\u0cf2\\u0d02\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200c\\u200d\\u203f\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]')\n  182      };\n  183  \n  ...\n  189      function assert(condition, message) {\n  190          if (!condition) {\n  191:             throw new Error('ASSERT: ' + message);\n  192          }\n  193      }\n  ...\n  296              break;\n  297          case 3:\n  298:             keyword = (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n  299              break;\n  300          case 4:\n  ...\n 1034  \n 1035          try {\n 1036:             value = new RegExp(pattern, flags);\n 1037          } catch (e) {\n 1038              throwError({}, Messages.InvalidRegExp);\n ....\n 1154  \n 1155          if (typeof token.lineNumber === 'number') {\n 1156:             error = new Error('Line ' + token.lineNumber + ': ' + msg);\n 1157              error.index = token.range[0];\n 1158              error.lineNumber = token.lineNumber;\n 1159              error.column = token.range[0] - lineStart + 1;\n 1160          } else {\n 1161:             error = new Error('Line ' + lineNumber + ': ' + msg);\n 1162              error.index = index;\n 1163              error.lineNumber = lineNumber;\n ....\n 1621      }\n 1622  \n 1623:     function parseNewExpression() {\n 1624          var expr;\n 1625  \n 1626:         expectKeyword('new');\n 1627  \n 1628          expr = {\n 1629:             type: Syntax.NewExpression,\n 1630              callee: parseLeftHandSideExpression(),\n 1631              'arguments': []\n ....\n 1642          var expr;\n 1643  \n 1644:         expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n 1645  \n 1646          while (match('.') || match('[') || match('(')) {\n ....\n 1675          var expr;\n 1676  \n 1677:         expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n 1678  \n 1679          while (match('.') || match('[')) {\n ....\n 2641  \n 2642          if (peekLineTerminator()) {\n 2643:             throwError({}, Messages.NewlineAfterThrow);\n 2644          }\n 2645  \n ....\n 3469          marker = createLocationMarker();\n 3470  \n 3471:         expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n 3472  \n 3473          while (match('.') || match('[')) {\n ....\n 3502          marker = createLocationMarker();\n 3503  \n 3504:         expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n 3505  \n 3506          while (match('.') || match('[') || match('(')) {\n ....\n 3671              extra.parseLogicalORExpression = parseLogicalORExpression;\n 3672              extra.parseMultiplicativeExpression = parseMultiplicativeExpression;\n 3673:             extra.parseNewExpression = parseNewExpression;\n 3674              extra.parseNonComputedProperty = parseNonComputedProperty;\n 3675              extra.parseObjectProperty = parseObjectProperty;\n ....\n 3707              parseLogicalORExpression = wrapTracking(extra.parseLogicalORExpression);\n 3708              parseMultiplicativeExpression = wrapTracking(extra.parseMultiplicativeExpression);\n 3709:             parseNewExpression = wrapTracking(extra.parseNewExpression);\n 3710              parseNonComputedProperty = wrapTracking(extra.parseNonComputedProperty);\n 3711              parseObjectProperty = wrapTracking(extra.parseObjectProperty);\n ....\n 3765              parseLogicalORExpression = extra.parseLogicalORExpression;\n 3766              parseMultiplicativeExpression = extra.parseMultiplicativeExpression;\n 3767:             parseNewExpression = extra.parseNewExpression;\n 3768              parseNonComputedProperty = extra.parseNonComputedProperty;\n 3769              parseObjectProperty = extra.parseObjectProperty;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\package.json:\n   50      \"benchmark-quick\": \"node test/benchmarks.js quick\"\n   51    },\n   52:   \"readme\": \"**Esprima** ([esprima.org](http://esprima.org)) is a high performance,\\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\\nparser written in ECMAScript (also popularly known as\\n[JavaScript](http://en.wikipedia.org/wiki/JavaScript>JavaScript)).\\nEsprima is created and maintained by [Ariya Hidayat](http://twitter.com/ariyahidayat),\\nwith the help of [many contributors](https://github.com/ariya/esprima/contributors).\\n\\nEsprima runs on web browsers (IE 6+, Firefox 1+, Safari 3+, Chrome 1+, Konqueror 4.6+, Opera 8+) as well as\\n[Node.js](http://nodejs.org).\\n\\n### Features\\n\\n- Full support for [ECMAScript 5.1](http://www.ecma-international.org/publications/standards/Ecma-262.htm)(ECMA-262)\\n- Sensible [syntax tree format](http://esprima.org/doc/index.html#ast) compatible with Mozilla\\n[Parser AST](https://developer.mozilla.org/en/SpiderMonkey/Parser_API)\\n- Heavily tested (> 550 [unit tests](http://esprima.org/test/) with solid 100% statement coverage)\\n- Optional tracking of syntax node location (index-based and line-column)\\n- Experimental support for ES6/Harmony (module, class, destructuring, ...)\\n\\nEsprima is blazing fast (see the [benchmark suite](http://esprima.org/test/benchmarks.html)).\\nIt is up to 3x faster than UglifyJS v1 and it is still [competitive](http://esprima.org/test/compare.html)\\nwith the new generation of fast parsers.\\n\\n### Applications\\n\\nEsprima serves as the basis for many popular JavaScript development tools:\\n\\n- Code coverage analysis: [node-cover](https://github.com/itay/node-cover), [Istanbul](https://github.com/yahoo/Istanbul)\\n- Documentation tool: [JFDoc](https://github.com/thejohnfreeman/jfdoc), [JSDuck](https://github.com/senchalabs/jsduck)\\n- Language extension: [LLJS](http://mbebenita.github.com/LLJS/) (low-level JS),\\n[Sweet.js](http://sweetjs.org/) (macro)\\n- ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\\n- Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\\n- Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\\n- Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\\n\\n### Questions?\\n- [Documentation](http://esprima.org/doc)\\n- [Issue tracker](http://issues.esprima.org): [known problems](http://code.google.com/p/esprima/issues/list?q=Defect)\\nand [future plans](http://code.google.com/p/esprima/issues/list?q=Enhancement)\\n- [Mailing list](http://groups.google.com/group/esprima)\\n- [Contribution guide](http://esprima.org/doc/index.html#contribution)\\n\\nFollow [@Esprima](http://twitter.com/Esprima) on Twitter to get the\\ndevelopment updates.\\nFeedback and contribution are welcomed!\\n\\n### License\\n\\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\\n and other contributors.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n  * Redistributions of source code must retain the above copyright\\n    notice, this list of conditions and the following disclaimer.\\n\\n  * Redistributions in binary form must reproduce the above copyright\\n    notice, this list of conditions and the following disclaimer in the\\n    documentation and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n\",\n   53    \"readmeFilename\": \"README.md\",\n   54    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\README.md:\n   20  Esprima is blazing fast (see the [benchmark suite](http://esprima.org/test/benchmarks.html)).\n   21  It is up to 3x faster than UglifyJS v1 and it is still [competitive](http://esprima.org/test/compare.html)\n   22: with the new generation of fast parsers.\n   23  \n   24  ### Applications\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\test\\compat.js:\n  179              var tick, context = getContext(esprima, reportCase, reportFailure);\n  180  \n  181:             tick = new Date();\n  182              testReflect(context.Reflect, context.Pattern);\n  183:             tick = (new Date()) - tick;\n  184  \n  185              if (failures > 0) {\n  ...\n  218          context = getContext(esprima, reportCase, reportFailure);\n  219  \n  220:         tick = new Date();\n  221          require('./reflect').testReflect(context.Reflect, context.Pattern);\n  222:         tick = (new Date()) - tick;\n  223  \n  224          header = total + ' tests. ' + failures.length + ' failures. ' +\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\test\\reflect.js:\n   97  function condExpr(test, cons, alt) { return Pattern({ type: \"ConditionalExpression\", test: test, consequent: cons, alternate: alt }) }\n   98  function seqExpr(exprs) { return Pattern({ type: \"SequenceExpression\", expressions: exprs }) }\n   99: function newExpr(callee, args) { return Pattern({ type: \"NewExpression\", callee: callee, arguments: args }) }\n  100  function callExpr(callee, args) { return Pattern({ type: \"CallExpression\", callee: callee, arguments: args }) }\n  101  function arrExpr(elts) { return Pattern({ type: \"ArrayExpression\", elements: elts }) }\n  ...\n  176          return;\n  177      }\n  178:     throw new Error(\"expected \" + errorType.name + \" for \" + uneval(src));\n  179  }\n  180  \n  ...\n  277  assertExpr(\"(x,y,z)\", seqExpr([ident(\"x\"),ident(\"y\"),ident(\"z\")]))\n  278  assertExpr(\"(a,b,c,d,e,f,g)\", seqExpr([ident(\"a\"),ident(\"b\"),ident(\"c\"),ident(\"d\"),ident(\"e\"),ident(\"f\"),ident(\"g\")]));\n  279: assertExpr(\"(new Object)\", newExpr(ident(\"Object\"), []));\n  280: assertExpr(\"(new Object())\", newExpr(ident(\"Object\"), []));\n  281: assertExpr(\"(new Object(42))\", newExpr(ident(\"Object\"), [lit(42)]));\n  282: assertExpr(\"(new Object(1,2,3))\", newExpr(ident(\"Object\"), [lit(1),lit(2),lit(3)]));\n  283  assertExpr(\"(String())\", callExpr(ident(\"String\"), []));\n  284  assertExpr(\"(String(42))\", callExpr(ident(\"String\"), [lit(42)]));\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\test\\runner.js:\n   51      this.actual = actual;\n   52  }\n   53: NotMatchingError.prototype = new Error();\n   54  \n   55  function errorToObject(e) {\n   ..\n  116  \n  117          // Only to ensure that there is no error when using string object.\n  118:         esprima.parse(new StringObject(code), options);\n  119  \n  120      } catch (e) {\n  121:         throw new NotMatchingError(expected, e.toString());\n  122      }\n  123      if (expected !== actual) {\n  124:         throw new NotMatchingError(expected, actual);\n  125      }\n  126  \n  ...\n  153          actual = JSON.stringify(tree, filter, 4);\n  154      } catch (e) {\n  155:         throw new NotMatchingError(expected, e.toString());\n  156      }\n  157      if (expected !== actual) {\n  158:         throw new NotMatchingError(expected, actual);\n  159      }\n  160  }\n  ...\n  177      handleInvalidRegexFlag = false;\n  178      try {\n  179:         'test'.match(new RegExp('[a-z]', 'x'));\n  180      } catch (e) {\n  181          handleInvalidRegexFlag = true;\n  ...\n  201              }\n  202  \n  203:             throw new NotMatchingError(expected, actual);\n  204          }\n  205  \n  ...\n  220          actual = JSON.stringify(res, adjustRegexLiteral, 4);\n  221      } catch (e) {\n  222:         throw new NotMatchingError(expected, e.toString());\n  223      }\n  224      if (expected !== actual) {\n  225:         throw new NotMatchingError(expected, actual);\n  226      }\n  227  }\n  ...\n  312          setText(document.getElementById('version'), esprima.version);\n  313  \n  314:         tick = new Date();\n  315          for (category in testFixture) {\n  316              if (testFixture.hasOwnProperty(category)) {\n  ...\n  332              }\n  333          }\n  334:         tick = (new Date()) - tick;\n  335  \n  336          if (failures > 0) {\n  ...\n  351              total = 0,\n  352              failures = [],\n  353:             tick = new Date(),\n  354              expected,\n  355              header;\n  ...\n  369              });\n  370          });\n  371:         tick = (new Date()) - tick;\n  372  \n  373          header = total + ' tests. ' + failures.length + ' failures. ' +\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\test\\test.js:\n 4742                      init: {\n 4743                          type: 'Literal',\n 4744:                         value: new RegExp('[\\\\]/]').toString(),\n 4745                          raw: '/[\\\\]/]/',\n 4746                          range: [8, 15],\n ....\n 5119      'Left-Hand-Side Expression': {\n 5120  \n 5121:         'new Button': {\n 5122              type: 'ExpressionStatement',\n 5123              expression: {\n 5124:                 type: 'NewExpression',\n 5125                  callee: {\n 5126                      type: 'Identifier',\n ....\n 5146          },\n 5147  \n 5148:         'new Button()': {\n 5149              type: 'ExpressionStatement',\n 5150              expression: {\n 5151:                 type: 'NewExpression',\n 5152                  callee: {\n 5153                      type: 'Identifier',\n ....\n 5173          },\n 5174  \n 5175:         'new new foo': {\n 5176              type: 'ExpressionStatement',\n 5177              expression: {\n 5178:                 type: 'NewExpression',\n 5179                  callee: {\n 5180:                     type: 'NewExpression',\n 5181                      callee: {\n 5182                          type: 'Identifier',\n ....\n 5209          },\n 5210  \n 5211:         'new new foo()': {\n 5212              type: 'ExpressionStatement',\n 5213              expression: {\n 5214:                 type: 'NewExpression',\n 5215                  callee: {\n 5216:                     type: 'NewExpression',\n 5217                      callee: {\n 5218                          type: 'Identifier',\n ....\n 5245          },\n 5246  \n 5247:         'new foo().bar()': {\n 5248              type: 'ExpressionStatement',\n 5249              expression: {\n ....\n 5253                      computed: false,\n 5254                      object: {\n 5255:                         type: 'NewExpression',\n 5256                          callee: {\n 5257                              type: 'Identifier',\n ....\n 5299          },\n 5300  \n 5301:         'new foo[bar]': {\n 5302              type: 'ExpressionStatement',\n 5303              expression: {\n 5304:                 type: 'NewExpression',\n 5305                  callee: {\n 5306                      type: 'MemberExpression',\n ....\n 5344          },\n 5345  \n 5346:         'new foo.bar()': {\n 5347              type: 'ExpressionStatement',\n 5348              expression: {\n 5349:                 type: 'NewExpression',\n 5350                  callee: {\n 5351                      type: 'MemberExpression',\n ....\n 5389          },\n 5390  \n 5391:         '( new foo).bar()': {\n 5392              type: 'ExpressionStatement',\n 5393              expression: {\n ....\n 5397                      computed: false,\n 5398                      object: {\n 5399:                         type: 'NewExpression',\n 5400                          callee: {\n 5401                              type: 'Identifier',\n ....\n 16120              lineNumber: 1,\n 16121              column: 6,\n 16122:             message: 'Error: Line 1: Illegal newline after throw'\n 16123          },\n 16124  \n .....\n 16271          },\n 16272  \n 16273:         'new X().\"s\"': {\n 16274              index: 8,\n 16275              lineNumber: 1,\n .....\n 17099          },\n 17100  \n 17101:         'parse(new String(\"test\"))': {\n 17102              call: 'parse',\n 17103:             args: [new String('test')],\n 17104              result: {\n 17105                  type: 'Program',\n .....\n 17114          },\n 17115  \n 17116:         'parse(new Number(42))': {\n 17117              call: 'parse',\n 17118:             args: [new Number(42)],\n 17119              result: {\n 17120                  type: 'Program',\n .....\n 17129          },\n 17130  \n 17131:         'parse(new Boolean(true))': {\n 17132              call: 'parse',\n 17133:             args: [new Boolean(true)],\n 17134              result: {\n 17135                  type: 'Program',\n .....\n 17170                  LogicalExpression: 'LogicalExpression',\n 17171                  MemberExpression: 'MemberExpression',\n 17172:                 NewExpression: 'NewExpression',\n 17173                  ObjectExpression: 'ObjectExpression',\n 17174                  Program: 'Program',\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\lodash\\lodash.js:\n   20    var arrayRef = [],\n   21        // avoid a Closure Compiler bug by creatively creating an object\n   22:       objectRef = new function(){};\n   23  \n   24    /** Used to generate unique IDs */\n   ..\n   35  \n   36    /** Used to detect template delimiter values that require a with-statement */\n   37:   var reComplexDelimiter = /[-?+=!~*%&^<>|{(\\/]|\\[\\D|\\b(?:delete|in|instanceof|new|typeof|void)\\b/;\n   38  \n   39    /** Used to match HTML entities */\n   ..\n  148      function ctor() { this.x = 1; }\n  149      ctor.prototype = { 'valueOf': 1, 'y': 1 };\n  150:     for (var prop in new ctor) { props.push(prop); }\n  151      for (prop in arguments) { noArgsEnum = !prop; }\n  152  \n  ...\n  245        return value;\n  246      }\n  247:     // allow invoking `lodash` without the `new` operator\n  248      if (!(this instanceof lodash)) {\n  249:       return new lodash(value);\n  250      }\n  251      this.__wrapped__ = value;\n  ...\n  533     * @param {Mixed} [thisArg] The `this` binding of `func`.\n  534     * @param {Array} partialArgs An array of arguments to be partially applied.\n  535:    * @returns {Function} Returns the new bound function.\n  536     */\n  537    function createBound(func, thisArg, partialArgs) {\n  ...\n  560        }\n  561        if (this instanceof bound) {\n  562:         // get `func` instance if `bound` is invoked in a `new` expression\n  563          noop.prototype = func.prototype;\n  564:         thisBinding = new noop;\n  565  \n  566          // mimic the constructor's `return` behavior\n  ...\n  747     * };\n  748     *\n  749:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  750     *   alert(key);\n  751     * });\n  ...\n  827     * @private\n  828     * @param {Object} object The object to inspect.\n  829:    * @returns {Array} Returns a new array of property names.\n  830     */\n  831    function shimKeys(object) {\n  ...\n  924        case boolClass:\n  925        case dateClass:\n  926:         return new ctor(+value);\n  927  \n  928        case numberClass:\n  929        case stringClass:\n  930:         return new ctor(value);\n  931  \n  932        case regexpClass:\n  ...\n 1008     * @category Objects\n 1009     * @param {Object} object The object to inspect.\n 1010:    * @returns {Array} Returns a new array of property names that have function values.\n 1011     * @example\n 1012     *\n ....\n 1111     * @example\n 1112     *\n 1113:    * _.isDate(new Date);\n 1114     * // => true\n 1115     */\n ....\n 1389    /**\n 1390     * Checks if `value` is the language type of Object.\n 1391:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1392     *\n 1393     * @static\n ....\n 1432     * // => true\n 1433     *\n 1434:    * _.isNaN(new Number(NaN));\n 1435     * // => true\n 1436     *\n ....\n 1500     * }\n 1501     *\n 1502:    * _.isPlainObject(new Stooge('moe', 40));\n 1503     * // => false\n 1504     *\n ....\n 1580     * @category Objects\n 1581     * @param {Object} object The object to inspect.\n 1582:    * @returns {Array} Returns a new array of property names.\n 1583     * @example\n 1584     *\n ....\n 1722     * @category Objects\n 1723     * @param {Object} object The object to inspect.\n 1724:    * @returns {Array} Returns new array of key-value pairs.\n 1725     * @example\n 1726     *\n ....\n 1792     * @category Objects\n 1793     * @param {Object} object The object to inspect.\n 1794:    * @returns {Array} Returns a new array of property values.\n 1795     * @example\n 1796     *\n ....\n 1939     * @param {Function} [callback=identity] The function called per iteration.\n 1940     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1941:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 1942     * @example\n 1943     *\n ....\n 2061     *  the function invoked per iteration.\n 2062     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 2063:    * @returns {Array} Returns a new array of the results of each invoked method.\n 2064     * @example\n 2065     *\n ....\n 2093     * @param {Function} [callback=identity] The function called per iteration.\n 2094     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2095:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 2096     * @example\n 2097     *\n ....\n 2227     * @param {Array|Object|String} collection The collection to iterate over.\n 2228     * @param {String} property The property to pluck.\n 2229:    * @returns {Array} Returns a new array of property values.\n 2230     * @example\n 2231     *\n ....\n 2326     * @param {Function} [callback=identity] The function called per iteration.\n 2327     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2328:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 2329     *  callback check.\n 2330     * @example\n ....\n 2348     * @category Collections\n 2349     * @param {Array|Object|String} collection The collection to shuffle.\n 2350:    * @returns {Array} Returns a new shuffled collection.\n 2351     * @example\n 2352     *\n ....\n 2445     *  or property name to sort by.\n 2446     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2447:    * @returns {Array} Returns a new array of sorted elements.\n 2448     * @example\n 2449     *\n ....\n 2483     * @category Collections\n 2484     * @param {Array|Object|String} collection The collection to convert.\n 2485:    * @returns {Array} Returns the new converted array.\n 2486     * @example\n 2487     *\n ....\n 2507     * @param {Array|Object|String} collection The collection to iterate over.\n 2508     * @param {Object} properties The object of property values to filter by.\n 2509:    * @returns {Array} Returns a new array of elements that contain the given `properties`.\n 2510     * @example\n 2511     *\n ....\n 2546     * @category Arrays\n 2547     * @param {Array} array The array to compact.\n 2548:    * @returns {Array} Returns a new filtered array.\n 2549     * @example\n 2550     *\n ....\n 2575     * @param {Array} array The array to process.\n 2576     * @param {Array} [array1, array2, ...] Arrays to check.\n 2577:    * @returns {Array} Returns a new array of `array` elements not present in the\n 2578     *  other arrays.\n 2579     * @example\n ....\n 2632     * @param {Array} array The array to compact.\n 2633     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 2634:    * @returns {Array} Returns a new flattened array.\n 2635     * @example\n 2636     *\n ....\n 2732     * @category Arrays\n 2733     * @param {Array} [array1, array2, ...] Arrays to process.\n 2734:    * @returns {Array} Returns a new array of unique elements, in order, that are\n 2735     *  present in **all** of the arrays.\n 2736     * @example\n ....\n 2861     * @param {Number} end The end of the range.\n 2862     * @param {Number} [step=1] The value to increment or descrement by.\n 2863:    * @returns {Array} Returns a new range array.\n 2864     * @example\n 2865     *\n ....\n 2988     * @category Arrays\n 2989     * @param {Array} [array1, array2, ...] Arrays to process.\n 2990:    * @returns {Array} Returns a new array of unique values, in order, that are\n 2991     *  present in one or more of the arrays.\n 2992     * @example\n ....\n 3081     * @param {Array} array The array to filter.\n 3082     * @param {Mixed} [value1, value2, ...] Values to remove.\n 3083:    * @returns {Array} Returns a new filtered array.\n 3084     * @example\n 3085     *\n ....\n 3112     * @category Arrays\n 3113     * @param {Array} [array1, array2, ...] Arrays to process.\n 3114:    * @returns {Array} Returns a new array of grouped elements.\n 3115     * @example\n 3116     *\n ....\n 3142     * it is executed.\n 3143     * @param {Function} func The function to restrict.\n 3144:    * @returns {Function} Returns the new restricted function.\n 3145     * @example\n 3146     *\n ....\n 3173     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 3174     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3175:    * @returns {Function} Returns the new bound function.\n 3176     * @example\n 3177     *\n ....\n 3236     * @category Functions\n 3237     * @param {Function} [func1, func2, ...] Functions to compose.\n 3238:    * @returns {Function} Returns the new composed function.\n 3239     * @example\n 3240     *\n ....\n 3272     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 3273     *  edge of the timeout.\n 3274:    * @returns {Function} Returns the new debounced function.\n 3275     * @example\n 3276     *\n ....\n 3359     * @param {String} methodName The method name.\n 3360     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3361:    * @returns {Function} Returns the new bound function.\n 3362     * @example\n 3363     *\n ....\n 3396     * @param {Function} func The function to have its output memoized.\n 3397     * @param {Function} [resolver] A function used to resolve the cache key.\n 3398:    * @returns {Function} Returns the new memoizing function.\n 3399     * @example\n 3400     *\n ....\n 3422     * @category Functions\n 3423     * @param {Function} func The function to restrict.\n 3424:    * @returns {Function} Returns the new restricted function.\n 3425     * @example\n 3426     *\n ....\n 3449    /**\n 3450     * Creates a function that, when called, invokes `func` with any additional\n 3451:    * `partial` arguments prepended to those passed to the new function. This\n 3452     * method is similar to `bind`, except it does **not** alter the `this` binding.\n 3453     *\n ....\n 3457     * @param {Function} func The function to partially apply arguments to.\n 3458     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3459:    * @returns {Function} Returns the new partially applied function.\n 3460     * @example\n 3461     *\n ....\n 3481     * @param {Function} func The function to throttle.\n 3482     * @param {Number} wait The number of milliseconds to throttle executions to.\n 3483:    * @returns {Function} Returns the new throttled function.\n 3484     * @example\n 3485     *\n ....\n 3495  \n 3496      function trailingCall() {\n 3497:       lastCalled = new Date;\n 3498        timeoutId = null;\n 3499        result = func.apply(thisArg, args);\n 3500      }\n 3501      return function() {\n 3502:       var now = new Date,\n 3503            remaining = wait - (now - lastCalled);\n 3504  \n ....\n 3529     * @param {Mixed} value The value to wrap.\n 3530     * @param {Function} wrapper The wrapper function.\n 3531:    * @returns {Function} Returns the new function.\n 3532     * @example\n 3533     *\n ....\n 3619          var result = func.apply(lodash, args);\n 3620          if (this.__chain__) {\n 3621:           result = new lodash(result);\n 3622            result.__chain__ = true;\n 3623          }\n ....\n 3897     * @param {Function} callback The function called per iteration.\n 3898     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 3899:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 3900     * @example\n 3901     *\n ....\n 3984     */\n 3985    function chain(value) {\n 3986:     value = new lodash(value);\n 3987      value.__chain__ = true;\n 3988      return value;\n ....\n 4201        }\n 4202        if (this.__chain__) {\n 4203:         value = new lodash(value);\n 4204          value.__chain__ = true;\n 4205        }\n ....\n 4217  \n 4218        if (this.__chain__) {\n 4219:         result = new lodash(result);\n 4220          result.__chain__ = true;\n 4221        }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\lodash\\lodash.min.js:\n    3   Underscore.js 1.4.2 underscorejs.org/LICENSE\n    4  */\n    5: ;(function(n,t){function r(n){return n&&n.__wrapped__?n:this instanceof r?(this.__wrapped__=n,void 0):new r(n)}function e(n,t,r){t||(t=0);var e=n.length,u=e-t>=(r||nt);if(u)for(var o={},r=t-1;++r<e;){var i=n[r]+\"\";(bt.call(o,i)?o[i]:o[i]=[]).push(n[r])}return function(r){if(u){var e=r+\"\";return bt.call(o,e)&&-1<D(o[e],r)}return-1<D(n,r,t)}}function u(n){return n.charCodeAt(0)}function o(n,r){var e=n.b,u=r.b,n=n.a,r=r.a;if(n!==r){if(n>r||n===t)return 1;if(n<r||r===t)return-1}return e<u?-1:1}function i(n,t,r){function e(){var a=arguments,c=o?this:t;\n    6: return u||(n=t[i]),r.length&&(a=a.length?r.concat(kt.call(a)):r),this instanceof e?(s.prototype=n.prototype,c=new s,a=n.apply(c,a),w(a)?a:c):n.apply(c,a)}var u=b(n),o=!r,i=n;return o&&(r=t),e}function a(n,r){return n?typeof n!=\"function\"?function(t){return t[n]}:r!==t?function(t,e,u){return n.call(r,t,e,u)}:n:L}function c(){for(var n,t={b:\"\",c:\"\",e:Q,f:Qt,g:\"\",h:Lt,i:Gt,j:gt,k:\"\",l:V},r=0;n=arguments[r];r++)for(var e in n)t[e]=n[e];if(n=t.a,t.d=/^[^,]+/.exec(n)[0],r=\"var h,v,k=\"+t.d+\",s=\"+t.d+\";if(!\"+t.d+\")return s;\"+t.k+\";\",t.b?(r+=\"var l=k.length;h=-1;if(typeof l=='number'){\",t.i&&(r+=\"if(j(k)){k=k.split('')}\"),r+=\"while(++h<l){v=k[h];\"+t.b+\"}}else {\"):t.h&&(r+=\"var l=k.length;h=-1;if(l&&i(k)){while(++h<l){v=k[h+=''];\"+t.g+\"}}else {\"),t.e||(r+=\"var t=typeof k=='function'&&r.call(k,'prototype');\"),t.f&&t.l?(r+=\"var p=-1,q=o[typeof k]?m(k):[],l=q.length;while(++p<l){h=q[p];\",t.e||(r+=\"if(!(t&&h=='prototype')){\"),r+=\"v=k[h];\"+t.g,t.e||(r+=\"}\")):(r+=\"for(h in k){\",(!t.e||t.l)&&(r+=\"if(\",t.e||(r+=\"!(t&&h=='prototype')\"),!t.e&&t.l&&(r+=\"&&\"),t.l&&(r+=\"g.call(k,h)\"),r+=\"){\"),r+=\"v=k[h];\"+t.g+\";\",(!t.e||t.l)&&(r+=\"}\")),r+=\"}\",t.e)for(r+=\"var f=k.constructor;\",e=0;7>e;e++)r+=\"h='\"+t.j[e]+\"';if(\",\"constructor\"==t.j[e]&&(r+=\"!(f&&f.prototype===k)&&\"),r+=\"g.call(k,h)){v=k[h];\"+t.g+\"}\";\n    7  return(t.b||t.h)&&(r+=\"}\"),r+=t.c+\";return s\",Function(\"e,g,i,j,o,m,r\",\"return function(\"+n+\"){\"+r+\"}\")(a,bt,h,j,Xt,$t,jt)}function f(n){return\"\\\\\"+Yt[n]}function l(n){return ur[n]}function s(){}function p(n){return or[n]}function h(n){return xt.call(n)==It}function v(n){var t=H;if(!n||typeof n!=\"object\"||h(n))return t;var r=n.constructor;return Ht&&typeof n.toString!=\"function\"&&typeof(n+\"\")==\"string\"||b(r)&&!(r instanceof r)?t:W?(rr(n,function(n,r,e){return t=!bt.call(e,r),H}),t===H):(rr(n,function(n,r){t=r\n    8: }),t===H||bt.call(n,t))}function g(n){var t=[];return er(n,function(n,r){t.push(r)}),t}function _(n,t,r,e,u){if(n==G)return n;if(r&&(t=H),r=w(n)){var o=xt.call(n);if(!Wt[o]||Ut&&h(n))return n;var i=o==Rt,r=i||(o==Mt?fr(n):r)}if(!r||!t)return r?i?kt.call(n):ar({},n):n;switch(r=n.constructor,o){case Tt:case Bt:return new r(+n);case Dt:case zt:return new r(n);case Pt:return r(n.source,at.exec(n))}for(e||(e=[]),u||(u=[]),o=e.length;o--;)if(e[o]==n)return u[o];var a=i?r(n.length):{};return e.push(n),u.push(a),(i?sr:er)(n,function(n,r){a[r]=_(n,t,G,e,u)\n    9  }),a}function y(n){var t=[];return rr(n,function(n,r){b(n)&&t.push(r)}),t.sort()}function m(n){var t={};return er(n,function(n,r){t[n]=r}),t}function d(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(n==G||t==G)return n===t;var u=xt.call(n);if(u!=xt.call(t))return H;switch(u){case Tt:case Bt:return+n==+t;case Dt:return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case Pt:case zt:return n==t+\"\"}var o=u==Rt||u==It;if(Ut&&!o&&(o=h(n))&&!h(t))return H;if(!o){if(n.__wrapped__||t.__wrapped__)return d(n.__wrapped__||n,t.__wrapped__||t);\n   10  if(u!=Mt||Ht&&(typeof n.toString!=\"function\"&&typeof(n+\"\")==\"string\"||typeof t.toString!=\"function\"&&typeof(t+\"\")==\"string\"))return H;var u=n.constructor,i=t.constructor;if(u!=i&&(!b(u)||!(u instanceof u&&b(i)&&i instanceof i)))return H}for(r||(r=[]),e||(e=[]),u=r.length;u--;)if(r[u]==n)return e[u]==t;var u=-1,i=V,a=0;if(r.push(n),e.push(t),o){if(a=n.length,i=a==t.length)for(;a--&&(i=d(n[a],t[a],r,e)););return i}for(var c in n)if(bt.call(n,c)&&(a++,!bt.call(t,c)||!d(n[c],t[c],r,e)))return H;for(c in t)if(bt.call(t,c)&&!a--)return H;\n   ..\n   14  return sr(n,function(n,e,o){r=u?(u=H,n):t(r,n,e,o)}),r}function I(n,t,r,e){var u=n,o=n?n.length:0,i=3>arguments.length;if(typeof o!=\"number\")var a=lr(n),o=a.length;else Gt&&j(n)&&(u=n.split(\"\"));return sr(n,function(n,c,f){c=a?a[--o]:--o,r=i?(i=H,u[c]):t.call(e,r,u[c],c,f)}),r}function R(n,t,r){var e,t=a(t,r);if(cr(n))for(var r=-1,u=n.length;++r<u&&!(e=t(n[r],r,n)););else sr(n,function(n,r,u){return!(e=t(n,r,u))});return!!e}function T(n,t,r){return n?t==G||r?n[0]:kt.call(n,0,t):void 0}function B(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var o=n[r];\n   15  cr(o)?wt.apply(u,t?o:B(o)):u.push(o)}return u}function D(n,t,r){var e=-1,u=n?n.length:0;if(typeof r==\"number\")e=(0>r?qt(0,u+r):r||0)-1;else if(r)return e=P(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function M(n,t,r){return n?kt.call(n,t==G||r?1:t):[]}function P(n,t,r,e){for(var u=0,o=n?n.length:u,r=r?a(r,e):L,t=r(t);u<o;)e=u+o>>>1,r(n[e])<t?u=e+1:o=e;return u}function z(n,t,r,e){var u=-1,o=n?n.length:0,i=[],c=i;typeof t==\"function\"&&(e=r,r=t,t=H);var f=!t&&74<o;if(f)var l={};for(r&&(c=[],r=a(r,e));++u<o;){var e=n[u],s=r?r(e,u,n):e;\n   16: f&&(c=bt.call(l,s+\"\")?l[s]:l[s]=[]),(t?!u||c[c.length-1]!==s:0>D(c,s))&&((r||f)&&c.push(s),i.push(e))}return i}function C(n,t){return Kt||Ot&&2<arguments.length?Ot.call.apply(Ot,arguments):i(n,t,kt.call(arguments,2))}function L(n){return n}function U(n){sr(y(n),function(t){var e=r[t]=n[t];r.prototype[t]=function(){var n=[this.__wrapped__];return wt.apply(n,arguments),n=e.apply(r,n),this.__chain__&&(n=new r(n),n.__chain__=V),n}})}var V=!0,G=null,H=!1,J=typeof exports==\"object\"&&exports,K=typeof global==\"object\"&&global;\n   17: K.global===K&&(n=K);var Q,W,X=[],Y=new function(){},Z=0,nt=30,tt=n._,rt=/[-?+=!~*%&^<>|{(\\/]|\\[\\D|\\b(?:delete|in|instanceof|new|typeof|void)\\b/,et=/&(?:amp|lt|gt|quot|#x27);/g,ut=/\\b__p\\+='';/g,ot=/\\b(__p\\+=)''\\+/g,it=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,at=/\\w*$/,ct=/(?:__e|__t=)\\(\\s*(?![\\d\\s\"']|this\\.)/g,ft=RegExp(\"^\"+(Y.valueOf+\"\").replace(/[.*+?^=!:${}()|[\\]\\/\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),lt=/\\$\\{((?:(?=\\\\?)\\\\?[\\s\\S])*?)}/g,st=/<%=([\\s\\S]+?)%>/g,pt=/($^)/,ht=/[&<>\"']/g,vt=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,gt=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \"),_t=Math.ceil,yt=X.concat,mt=Math.floor,dt=ft.test(dt=Object.getPrototypeOf)&&dt,bt=Y.hasOwnProperty,wt=X.push,jt=Y.propertyIsEnumerable,kt=X.slice,xt=Y.toString,Ot=ft.test(Ot=kt.bind)&&Ot,At=ft.test(At=Array.isArray)&&At,St=n.isFinite,Et=n.isNaN,$t=ft.test($t=Object.keys)&&$t,qt=Math.max,Nt=Math.min,Ft=Math.random,It=\"[object Arguments]\",Rt=\"[object Array]\",Tt=\"[object Boolean]\",Bt=\"[object Date]\",Dt=\"[object Number]\",Mt=\"[object Object]\",Pt=\"[object RegExp]\",zt=\"[object String]\",Ct=(Ct={0:1,length:1},X.splice.call(Ct,0,1),Ct[0]),Lt=V;\n   18: (function(){function n(){this.x=1}var t=[];n.prototype={valueOf:1,y:1};for(var r in new n)t.push(r);for(r in arguments)Lt=!r;Q=!/valueOf/.test(t),W=\"x\"!=t[0]})(1);var Ut=!h(arguments),Vt=\"x\"!=kt.call(\"x\")[0],Gt=\"xx\"!=\"x\"[0]+Object(\"x\")[0];try{var Ht=xt.call(n.document||0)==Mt}catch(Jt){}var Kt=Ot&&/\\n|Opera/.test(Ot+xt.call(n.opera)),Qt=$t&&/^.+$|true/.test($t+!!n.attachEvent),Wt={};Wt[It]=Wt[\"[object Function]\"]=H,Wt[Rt]=Wt[Tt]=Wt[Bt]=Wt[Dt]=Wt[Mt]=Wt[Pt]=Wt[zt]=V;var Xt={\"boolean\":H,\"function\":V,object:V,number:H,string:H,undefined:H},Yt={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};\n   19  r.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:st,variable:\"\"};var Zt={a:\"d,c,u\",k:\"c=e(c,u)\",b:\"if(c(v,h,d)===false)return s\",g:\"if(c(v,h,d)===false)return s\"},nr={l:H,a:\"n\",k:\"for(var a=1,b=arguments.length;a<b;a++){if(k=arguments[a]){\",g:\"s[h]=v\",c:\"}}\"},tr={b:G};Ut&&(h=function(n){return n?bt.call(n,\"callee\"):H});var rr=c(Zt,tr,{l:H}),er=c(Zt,tr),ur={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\"},or=m(ur),ir=c(nr,{g:\"if(s[h]==null)\"+nr.g}),ar=c(nr),cr=At||function(n){return xt.call(n)==Rt\n   20  };b(/x/)&&(b=function(n){return\"[object Function]\"==xt.call(n)});var fr=dt?function(n){if(!n||typeof n!=\"object\")return H;var t=n.valueOf,r=typeof t==\"function\"&&(r=dt(t))&&dt(r);return r?n==r||dt(n)==r&&!h(n):v(n)}:v,lr=$t?function(n){return typeof n==\"function\"&&jt.call(n,\"prototype\")?g(n):w(n)?$t(n):[]}:g,sr=c(Zt);r.VERSION=\"0.9.2\",r.after=function(n,t){return 1>n?t():function(){return 1>--n?t.apply(this,arguments):void 0}},r.bind=C,r.bindAll=function(n){for(var t=arguments,r=1<t.length?0:(t=y(n),-1),e=t.length;++r<e;){var u=t[r];\n   21: n[u]=C(n[u],n)}return n},r.chain=function(n){return n=new r(n),n.__chain__=V,n},r.clone=_,r.compact=function(n){for(var t=-1,r=n?n.length:0,e=[];++t<r;){var u=n[t];u&&e.push(u)}return e},r.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length;r--;)t=[n[r].apply(this,t)];return t[0]}},r.contains=O,r.countBy=function(n,t,r){var e={},t=a(t,r);return sr(n,function(n,r,u){r=t(n,r,u),bt.call(e,r)?e[r]++:e[r]=1}),e},r.debounce=function(n,t,r){function e(){a=G,r||(o=n.apply(i,u))\n   22  }var u,o,i,a;return function(){var c=r&&!a;return u=arguments,i=this,clearTimeout(a),a=setTimeout(e,t),c&&(o=n.apply(i,u)),o}},r.defaults=ir,r.defer=function(n){var r=kt.call(arguments,1);return setTimeout(function(){n.apply(t,r)},1)},r.delay=function(n,r){var e=kt.call(arguments,2);return setTimeout(function(){n.apply(t,e)},r)},r.difference=function(n){for(var t=-1,r=n?n.length:0,u=yt.apply(X,arguments),u=e(u,r),o=[];++t<r;){var i=n[t];u(i)||o.push(i)}return o},r.escape=function(n){return n==G?\"\":(n+\"\").replace(ht,l)\n   23  },r.every=A,r.extend=ar,r.filter=S,r.find=E,r.first=T,r.flatten=B,r.forEach=sr,r.forIn=rr,r.forOwn=er,r.functions=y,r.groupBy=function(n,t,r){var e={},t=a(t,r);return sr(n,function(n,r,u){r=t(n,r,u),(bt.call(e,r)?e[r]:e[r]=[]).push(n)}),e},r.has=function(n,t){return n?bt.call(n,t):H},r.identity=L,r.indexOf=D,r.initial=function(n,t,r){return n?kt.call(n,0,-(t==G||r?1:t)):[]},r.intersection=function(n){var t=arguments,r=t.length,u={},o=[];return sr(n,function(n){if(0>D(o,n)){for(var i=r;--i;)if(!(u[i]||(u[i]=e(t[i])))(n))return;\n   ..\n   29  return sr(n,function(n){var e=mt(Ft()*(++t+1));r[t]=r[e],r[e]=n}),r},r.size=function(n){var t=n?n.length:0;return typeof t==\"number\"?t:lr(n).length},r.some=R,r.sortBy=function(n,t,r){var e=[],t=a(t,r);for(sr(n,function(n,r,u){e.push({a:t(n,r,u),b:r,c:n})}),n=e.length,e.sort(o);n--;)e[n]=e[n].c;return e},r.sortedIndex=P,r.tap=function(n,t){return t(n),n},r.template=function(n,t,e){n||(n=\"\"),e||(e={});var u,o,i=r.templateSettings,a=0,c=e.interpolate||i.interpolate||pt,l=\"__p += '\",s=e.variable||i.variable,p=s;\n   30  n.replace(RegExp((e.escape||i.escape||pt).source+\"|\"+c.source+\"|\"+(c===st?lt:pt).source+\"|\"+(e.evaluate||i.evaluate||pt).source+\"|$\",\"g\"),function(t,r,e,o,i,c){e||(e=o),l+=n.slice(a,c).replace(vt,f),l+=r?\"'+__e(\"+r+\")+'\":i?\"';\"+i+\";__p+='\":e?\"'+((__t=(\"+e+\"))==null?'':__t)+'\":\"\",u||(u=i||rt.test(r||e)),a=c+t.length}),l+=\"';\",p||(s=\"obj\",u?l=\"with(\"+s+\"){\"+l+\"}\":(e=RegExp(\"(\\\\(\\\\s*)\"+s+\"\\\\.\"+s+\"\\\\b\",\"g\"),l=l.replace(ct,\"$&\"+s+\".\").replace(e,\"$1__d\"))),l=(u?l.replace(ut,\"\"):l).replace(ot,\"$1\").replace(it,\"$1;\"),l=\"function(\"+s+\"){\"+(p?\"\":s+\"||(\"+s+\"={});\")+\"var __t,__p='',__e=_.escape\"+(u?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":(p?\"\":\",__d=\"+s+\".\"+s+\"||\"+s)+\";\")+l+\"return __p}\";\n   31: try{o=Function(\"_\",\"return \"+l)(r)}catch(h){throw h.source=l,h}return t?o(t):(o.source=l,o)},r.throttle=function(n,t){function r(){a=new Date,i=G,u=n.apply(o,e)}var e,u,o,i,a=0;return function(){var c=new Date,f=t-(c-a);return e=arguments,o=this,0<f?i||(i=setTimeout(r,f)):(clearTimeout(i),a=c,u=n.apply(o,e)),u}},r.times=function(n,t,r){for(var n=+n||0,e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);return u},r.toArray=function(n){return n&&typeof n.length==\"number\"?(Vt?j(n):typeof n==\"string\")?n.split(\"\"):kt.call(n):x(n)\n   32  },r.unescape=function(n){return n==G?\"\":(n+\"\").replace(et,p)},r.union=function(){return z(yt.apply(X,arguments))},r.uniq=z,r.uniqueId=function(n){var t=Z++;return n?n+t:t},r.values=x,r.where=function(n,t){var r=[];return rr(t,function(n,t){r.push(t)}),S(n,function(n){for(var e=r.length;e--;){var u=n[r[e]]===t[r[e]];if(!u)break}return!!u})},r.without=function(n){for(var t=-1,r=n?n.length:0,u=e(arguments,1,20),o=[];++t<r;){var i=n[t];u(i)||o.push(i)}return o},r.wrap=function(n,t){return function(){var r=[n];\n   33  return wt.apply(r,arguments),t.apply(this,r)}},r.zip=function(n){for(var t=-1,r=n?q(N(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=N(arguments,t);return e},r.all=A,r.any=R,r.collect=$,r.detect=E,r.drop=M,r.each=sr,r.foldl=F,r.foldr=I,r.head=T,r.include=O,r.inject=F,r.methods=y,r.select=S,r.tail=M,r.take=T,r.unique=z,U(r),r.prototype.chain=function(){return this.__chain__=V,this},r.prototype.value=function(){return this.__wrapped__},sr(\"pop push reverse shift sort splice unshift\".split(\" \"),function(n){var t=X[n];\n   34: r.prototype[n]=function(){var n=this.__wrapped__;return t.apply(n,arguments),Ct&&0===n.length&&delete n[0],this.__chain__&&(n=new r(n),n.__chain__=V),n}}),sr([\"concat\",\"join\",\"slice\"],function(n){var t=X[n];r.prototype[n]=function(){var n=t.apply(this.__wrapped__,arguments);return this.__chain__&&(n=new r(n),n.__chain__=V),n}}),typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?(n._=r,define(function(){return r})):J?typeof module==\"object\"&&module&&module.exports==J?(module.exports=r)._=r:J._=r:n._=r\n   35  })(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\lodash\\lodash.underscore.js:\n   20    var arrayRef = [],\n   21        // avoid a Closure Compiler bug by creatively creating an object\n   22:       objectRef = new function(){};\n   23  \n   24    /** Used to generate unique IDs */\n   ..\n  174        return value;\n  175      }\n  176:     // allow invoking `lodash` without the `new` operator\n  177      if (!(this instanceof lodash)) {\n  178:       return new lodash(value);\n  179      }\n  180      this.__wrapped__ = value;\n  ...\n  298     * @param {Mixed} [thisArg] The `this` binding of `func`.\n  299     * @param {Array} partialArgs An array of arguments to be partially applied.\n  300:    * @returns {Function} Returns the new bound function.\n  301     */\n  302    function createBound(func, thisArg, partialArgs) {\n  ...\n  313        }\n  314        if (this instanceof bound) {\n  315:         // get `func` instance if `bound` is invoked in a `new` expression\n  316          noop.prototype = func.prototype;\n  317:         thisBinding = new noop;\n  318  \n  319          // mimic the constructor's `return` behavior\n  ...\n  500     * };\n  501     *\n  502:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  503     *   alert(key);\n  504     * });\n  ...\n  592     * @private\n  593     * @param {Object} object The object to inspect.\n  594:    * @returns {Array} Returns a new array of property names.\n  595     */\n  596    function shimKeys(object) {\n  ...\n  738     * @category Objects\n  739     * @param {Object} object The object to inspect.\n  740:    * @returns {Array} Returns a new array of property names that have function values.\n  741     * @example\n  742     *\n  ...\n  841     * @example\n  842     *\n  843:    * _.isDate(new Date);\n  844     * // => true\n  845     */\n  ...\n 1101    /**\n 1102     * Checks if `value` is the language type of Object.\n 1103:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1104     *\n 1105     * @static\n ....\n 1144     * // => true\n 1145     *\n 1146:    * _.isNaN(new Number(NaN));\n 1147     * // => true\n 1148     *\n ....\n 1256     * @category Objects\n 1257     * @param {Object} object The object to inspect.\n 1258:    * @returns {Array} Returns a new array of property names.\n 1259     * @example\n 1260     *\n ....\n 1311     * @category Objects\n 1312     * @param {Object} object The object to inspect.\n 1313:    * @returns {Array} Returns new array of key-value pairs.\n 1314     * @example\n 1315     *\n ....\n 1372     * @category Objects\n 1373     * @param {Object} object The object to inspect.\n 1374:    * @returns {Array} Returns a new array of property values.\n 1375     * @example\n 1376     *\n ....\n 1510     * @param {Function} [callback=identity] The function called per iteration.\n 1511     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1512:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 1513     * @example\n 1514     *\n ....\n 1653     *  the function invoked per iteration.\n 1654     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 1655:    * @returns {Array} Returns a new array of the results of each invoked method.\n 1656     * @example\n 1657     *\n ....\n 1685     * @param {Function} [callback=identity] The function called per iteration.\n 1686     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1687:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 1688     * @example\n 1689     *\n ....\n 1815     * @param {Array|Object|String} collection The collection to iterate over.\n 1816     * @param {String} property The property to pluck.\n 1817:    * @returns {Array} Returns a new array of property values.\n 1818     * @example\n 1819     *\n ....\n 1912     * @param {Function} [callback=identity] The function called per iteration.\n 1913     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1914:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 1915     *  callback check.\n 1916     * @example\n ....\n 1934     * @category Collections\n 1935     * @param {Array|Object|String} collection The collection to shuffle.\n 1936:    * @returns {Array} Returns a new shuffled collection.\n 1937     * @example\n 1938     *\n ....\n 2031     *  or property name to sort by.\n 2032     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2033:    * @returns {Array} Returns a new array of sorted elements.\n 2034     * @example\n 2035     *\n ....\n 2069     * @category Collections\n 2070     * @param {Array|Object|String} collection The collection to convert.\n 2071:    * @returns {Array} Returns the new converted array.\n 2072     * @example\n 2073     *\n ....\n 2093     * @param {Array|Object|String} collection The collection to iterate over.\n 2094     * @param {Object} properties The object of property values to filter by.\n 2095:    * @returns {Array} Returns a new array of elements that contain the given `properties`.\n 2096     * @example\n 2097     *\n ....\n 2132     * @category Arrays\n 2133     * @param {Array} array The array to compact.\n 2134:    * @returns {Array} Returns a new filtered array.\n 2135     * @example\n 2136     *\n ....\n 2161     * @param {Array} array The array to process.\n 2162     * @param {Array} [array1, array2, ...] Arrays to check.\n 2163:    * @returns {Array} Returns a new array of `array` elements not present in the\n 2164     *  other arrays.\n 2165     * @example\n ....\n 2217     * @param {Array} array The array to compact.\n 2218     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 2219:    * @returns {Array} Returns a new flattened array.\n 2220     * @example\n 2221     *\n ....\n 2317     * @category Arrays\n 2318     * @param {Array} [array1, array2, ...] Arrays to process.\n 2319:    * @returns {Array} Returns a new array of unique elements, in order, that are\n 2320     *  present in **all** of the arrays.\n 2321     * @example\n ....\n 2445     * @param {Number} end The end of the range.\n 2446     * @param {Number} [step=1] The value to increment or descrement by.\n 2447:    * @returns {Array} Returns a new range array.\n 2448     * @example\n 2449     *\n ....\n 2572     * @category Arrays\n 2573     * @param {Array} [array1, array2, ...] Arrays to process.\n 2574:    * @returns {Array} Returns a new array of unique values, in order, that are\n 2575     *  present in one or more of the arrays.\n 2576     * @example\n ....\n 2649     * @param {Array} array The array to filter.\n 2650     * @param {Mixed} [value1, value2, ...] Values to remove.\n 2651:    * @returns {Array} Returns a new filtered array.\n 2652     * @example\n 2653     *\n ....\n 2679     * @category Arrays\n 2680     * @param {Array} [array1, array2, ...] Arrays to process.\n 2681:    * @returns {Array} Returns a new array of grouped elements.\n 2682     * @example\n 2683     *\n ....\n 2709     * it is executed.\n 2710     * @param {Function} func The function to restrict.\n 2711:    * @returns {Function} Returns the new restricted function.\n 2712     * @example\n 2713     *\n ....\n 2740     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 2741     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 2742:    * @returns {Function} Returns the new bound function.\n 2743     * @example\n 2744     *\n ....\n 2803     * @category Functions\n 2804     * @param {Function} [func1, func2, ...] Functions to compose.\n 2805:    * @returns {Function} Returns the new composed function.\n 2806     * @example\n 2807     *\n ....\n 2839     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 2840     *  edge of the timeout.\n 2841:    * @returns {Function} Returns the new debounced function.\n 2842     * @example\n 2843     *\n ....\n 2926     * @param {Function} func The function to have its output memoized.\n 2927     * @param {Function} [resolver] A function used to resolve the cache key.\n 2928:    * @returns {Function} Returns the new memoizing function.\n 2929     * @example\n 2930     *\n ....\n 2952     * @category Functions\n 2953     * @param {Function} func The function to restrict.\n 2954:    * @returns {Function} Returns the new restricted function.\n 2955     * @example\n 2956     *\n ....\n 2989     * @param {Function} func The function to throttle.\n 2990     * @param {Number} wait The number of milliseconds to throttle executions to.\n 2991:    * @returns {Function} Returns the new throttled function.\n 2992     * @example\n 2993     *\n ....\n 3003  \n 3004      function trailingCall() {\n 3005:       lastCalled = new Date;\n 3006        timeoutId = null;\n 3007        result = func.apply(thisArg, args);\n 3008      }\n 3009      return function() {\n 3010:       var now = new Date,\n 3011            remaining = wait - (now - lastCalled);\n 3012  \n ....\n 3037     * @param {Mixed} value The value to wrap.\n 3038     * @param {Function} wrapper The wrapper function.\n 3039:    * @returns {Function} Returns the new function.\n 3040     * @example\n 3041     *\n ....\n 3127          var result = func.apply(lodash, args);\n 3128          if (this.__chain__) {\n 3129:           result = new lodash(result);\n 3130            result.__chain__ = true;\n 3131          }\n ....\n 3353     * @param {Function} callback The function called per iteration.\n 3354     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 3355:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 3356     * @example\n 3357     *\n ....\n 3440     */\n 3441    function chain(value) {\n 3442:     value = new lodash(value);\n 3443      value.__chain__ = true;\n 3444      return value;\n ....\n 3647        }\n 3648        if (this.__chain__) {\n 3649:         value = new lodash(value);\n 3650          value.__chain__ = true;\n 3651        }\n ....\n 3663  \n 3664        if (this.__chain__) {\n 3665:         result = new lodash(result);\n 3666          result.__chain__ = true;\n 3667        }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\lodash\\lodash.underscore.min.js:\n    4  */\n    5  ;(function(n,t){function r(n,t,r){var e;if(!n)return n;var t=l(t,r),u=n.length,r=-1;if(typeof u==\"number\"){for(;++r<u;)if(e=n[r],t(e,r,n)===Q)return n}else for(r in n)if(it.call(n,r)&&(e=n[r],t(e,r,n)===Q))return n}function e(n){var t,r,e=n;if(!n)return n;for(var u=1,i=arguments.length;u<i;u++)if(e=arguments[u])for(t in e)r=e[t],n[t]=r;return n}function u(n){var t,r,e=n;if(!n)return n;for(var u=1,i=arguments.length;u<i;u++)if(e=arguments[u])for(t in e)r=e[t],n[t]==V&&(n[t]=r);return n}function i(n,t){var r,e;\n    6: if(n)for(r in t=l(t),n)if(it.call(n,r)&&(e=n[r],t(e,r,n)===Q))break}function o(n,t){var r,e;if(n)for(r in t=l(t),n)if(e=n[r],t(e,r,n)===Q)break}function a(n){return n&&n.__wrapped__?n:this instanceof a?(this.__wrapped__=n,void 0):new a(n)}function c(n,r){var e=n.b,u=r.b,n=n.a,r=r.a;if(n!==r){if(n>r||n===t)return 1;if(n<r||r===t)return-1}return e<u?-1:1}function f(n,t,r){function e(){var u=arguments,i=t;return r.length&&(u=u.length?r.concat(at.call(u)):r),this instanceof e?(h.prototype=n.prototype,i=new h,u=n.apply(i,u),b(u)?u:i):n.apply(i,u)\n    7  }return e}function l(n,r){return n?typeof n!=\"function\"?function(t){return t[n]}:r!==t?function(t,e,u){return n.call(r,t,e,u)}:n:C}function s(n){return\"\\\\\"+Et[n]}function p(n){return St[n]}function h(){}function g(n){return kt[n]}function v(n){var t=[];return i(n,function(n,r){t.push(r)}),t}function _(n){var t=[];return o(n,function(n,r){d(n)&&t.push(r)}),t.sort()}function m(n){var t={};return i(n,function(n,r){t[n]=r}),t}function y(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(n==V||t==V)return n===t;\n    8  var u=ct.call(n);if(u!=ct.call(t))return G;switch(u){case mt:case yt:return+n==+t;case dt:return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case wt:case jt:return n==t+\"\"}var i=u==_t;if(!i){if(n.__wrapped__||t.__wrapped__)return y(n.__wrapped__||n,t.__wrapped__||t);if(u!=bt)return G;var u=n.constructor,o=t.constructor;if(u!=o&&(!d(u)||!(u instanceof u&&d(o)&&o instanceof o)))return G}for(r||(r=[]),e||(e=[]),u=r.length;u--;)if(r[u]==n)return e[u]==t;if(u=U,o=0,r.push(n),e.push(t),i){if(o=n.length,u=o==t.length)for(;o--&&(u=y(n[o],t[o],r,e)););return u\n    .\n   11  return a}function T(n,t){var e=[];return r(n,function(n){e.push(n[t])}),e}function N(n,t,e,u){var i=3>arguments.length,t=l(t,u);return r(n,function(n,r,u){e=i?(i=G,n):t(e,n,r,u)}),e}function q(n,t,e,u){var i=n?n.length:0,o=3>arguments.length;if(typeof i!=\"number\")var a=Nt(n),i=a.length;return r(n,function(r,c,f){c=a?a[--i]:--i,e=o?(o=G,n[c]):t.call(u,e,n[c],c,f)}),e}function R(n,t,e){var u,t=l(t,e);if(Tt(n))for(var e=-1,i=n.length;++e<i&&!(u=t(n[e],e,n)););else r(n,function(n,r,e){return(u=t(n,r,e))&&Q\n   12  });return!!u}function B(n,t,r){return n?t==V||r?n[0]:at.call(n,0,t):void 0}function F(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var i=n[r];Tt(i)?ot.apply(u,t?i:F(i)):u.push(i)}return u}function M(n,t,r){var e=-1,u=n?n.length:0;if(typeof r==\"number\")e=(0>r?ht(0,u+r):r||0)-1;else if(r)return e=I(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function $(n,t,r){return n?at.call(n,t==V||r?1:t):[]}function I(n,t,r,e){for(var u=0,i=n?n.length:u,r=r?l(r,e):C,t=r(t);u<i;)e=u+i>>>1,r(n[e])<t?u=e+1:i=e;\n   13: return u}function D(n,t,r,e){var u=-1,i=n?n.length:0,o=[],a=o;for(r&&(a=[],r=l(r,e));++u<i;){var e=n[u],c=r?r(e,u,n):e;(t?!u||a[a.length-1]!==c:0>M(a,c))&&(r&&a.push(c),o.push(e))}return o}function z(n,t){return At||ft&&2<arguments.length?ft.call.apply(ft,arguments):f(n,t,at.call(arguments,2))}function C(n){return n}function P(n){r(_(n),function(t){var r=a[t]=n[t];a.prototype[t]=function(){var n=[this.__wrapped__];return ot.apply(n,arguments),n=r.apply(a,n),this.__chain__&&(n=new a(n),n.__chain__=U),n\n   14: }})}var U=!0,V=null,G=!1,H=typeof exports==\"object\"&&exports,J=typeof global==\"object\"&&global;J.global===J&&(n=J);var K=[],J=new function(){},L=0,Q=J,W=n._,X=/&(?:amp|lt|gt|quot|#x27);/g,Y=RegExp(\"^\"+(J.valueOf+\"\").replace(/[.*+?^=!:${}()|[\\]\\/\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),Z=/($^)/,nt=/[&<>\"']/g,tt=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,rt=Math.ceil,et=K.concat,ut=Math.floor,it=J.hasOwnProperty,ot=K.push,at=K.slice,ct=J.toString,ft=Y.test(ft=at.bind)&&ft,lt=Y.test(lt=Array.isArray)&&lt,st=n.isFinite,pt=Y.test(pt=Object.keys)&&pt,ht=Math.max,gt=Math.min,vt=Math.random,_t=\"[object Array]\",mt=\"[object Boolean]\",yt=\"[object Date]\",dt=\"[object Number]\",bt=\"[object Object]\",wt=\"[object RegExp]\",jt=\"[object String]\",xt=(xt={0:1,length:1},K.splice.call(xt,0,1),xt[0]),At=ft&&/\\n|Opera/.test(ft+ct.call(n.opera)),Ot={\"boolean\":G,\"function\":U,object:U,number:G,string:G,undefined:G},Et={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};\n   15  a.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,variable:\"\"},a.isArguments=function(n){return\"[object Arguments]\"==ct.call(n)},a.isArguments(arguments)||(a.isArguments=function(n){return n?it.call(n,\"callee\"):G});var St={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\"},kt=m(St),Tt=lt||function(n){return ct.call(n)==_t};d(/x/)&&(d=function(n){return\"[object Function]\"==ct.call(n)});var Nt=pt?function(n){return b(n)?pt(n):[]}:v;a.VERSION=\"0.9.2\",a.after=function(n,t){return 1>n?t():function(){return 1>--n?t.apply(this,arguments):void 0\n   16: }},a.bind=z,a.bindAll=function(n){for(var t=arguments,r=1<t.length?0:(t=_(n),-1),e=t.length;++r<e;){var u=t[r];n[u]=z(n[u],n)}return n},a.chain=function(n){return n=new a(n),n.__chain__=U,n},a.clone=function(n){return n&&Ot[typeof n]?Tt(n)?at.call(n):e({},n):n},a.compact=function(n){for(var t=-1,r=n?n.length:0,e=[];++t<r;){var u=n[t];u&&e.push(u)}return e},a.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length;r--;)t=[n[r].apply(this,t)];return t[0]}},a.contains=x,a.countBy=function(n,t,e){var u={},t=l(t,e);\n   17  return r(n,function(n,r,e){r=t(n,r,e),it.call(u,r)?u[r]++:u[r]=1}),u},a.debounce=function(n,t,r){function e(){a=V,r||(i=n.apply(o,u))}var u,i,o,a;return function(){var c=r&&!a;return u=arguments,o=this,clearTimeout(a),a=setTimeout(e,t),c&&(i=n.apply(o,u)),i}},a.defaults=u,a.defer=function(n){var r=at.call(arguments,1);return setTimeout(function(){n.apply(t,r)},1)},a.delay=function(n,r){var e=at.call(arguments,2);return setTimeout(function(){n.apply(t,e)},r)},a.difference=function(n){for(var t=-1,r=n.length,e=et.apply(K,arguments),u=[];++t<r;){var i=n[t];\n   18  0>M(e,i,r)&&u.push(i)}return u},a.escape=function(n){return n==V?\"\":(n+\"\").replace(nt,p)},a.every=A,a.extend=e,a.filter=O,a.find=E,a.first=B,a.flatten=F,a.forEach=r,a.functions=_,a.groupBy=function(n,t,e){var u={},t=l(t,e);return r(n,function(n,r,e){r=t(n,r,e),(it.call(u,r)?u[r]:u[r]=[]).push(n)}),u},a.has=function(n,t){return n?it.call(n,t):G},a.identity=C,a.indexOf=M,a.initial=function(n,t,r){return n?at.call(n,0,-(t==V||r?1:t)):[]},a.intersection=function(n){var t=arguments,e=t.length,u=[];return r(n,function(n){if(0>M(u,n)){for(var r=e;--r;)if(0>M(t[r],n))return;\n   ..\n   23  for(var e=-1,t=ht(0,rt((t-n)/r)),u=Array(t);++e<t;)u[e]=n,n+=r;return u},a.reduce=N,a.reduceRight=q,a.reject=function(n,t,r){return t=l(t,r),O(n,function(n,r,e){return!t(n,r,e)})},a.rest=$,a.result=function(n,t){var r=n?n[t]:V;return d(r)?n[t]():r},a.shuffle=function(n){var t=-1,e=Array(n?n.length:0);return r(n,function(n){var r=ut(vt()*(++t+1));e[t]=e[r],e[r]=n}),e},a.size=function(n){var t=n?n.length:0;return typeof t==\"number\"?t:Nt(n).length},a.some=R,a.sortBy=function(n,t,e){var u=[],t=l(t,e);\n   24  for(r(n,function(n,r,e){u.push({a:t(n,r,e),b:r,c:n})}),n=u.length,u.sort(c);n--;)u[n]=u[n].c;return u},a.sortedIndex=I,a.tap=function(n,t){return t(n),n},a.template=function(n,t,r){n||(n=\"\");var r=u({},r,a.templateSettings),e=0,i=\"__p += '\",o=r.variable;n.replace(RegExp((r.escape||Z).source+\"|\"+(r.interpolate||Z).source+\"|\"+(r.evaluate||Z).source+\"|$\",\"g\"),function(t,r,u,o,a){i+=n.slice(e,a).replace(tt,s),i+=r?\"'+_['escape'](\"+r+\")+'\":o?\"';\"+o+\";__p+='\":u?\"'+((__t=(\"+u+\"))==null?'':__t)+'\":\"\",e=a+t.length\n   25: }),i+=\"';\",o||(o=\"obj\",i=\"with(\"+o+\"||{}){\"+i+\"}\"),i=\"function(\"+o+\"){var __t,__p='',__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\"+i+\"return __p}\";try{var c=Function(\"_\",\"return \"+i)(a)}catch(f){throw f.source=i,f}return t?c(t):(c.source=i,c)},a.throttle=function(n,t){function r(){a=new Date,o=V,u=n.apply(i,e)}var e,u,i,o,a=0;return function(){var c=new Date,f=t-(c-a);return e=arguments,i=this,0<f?o||(o=setTimeout(r,f)):(clearTimeout(o),a=c,u=n.apply(i,e)),u}},a.times=function(n,t,r){for(var n=+n||0,e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);\n   26  return u},a.toArray=function(n){return n&&typeof n.length==\"number\"?typeof n==\"string\"?n.split(\"\"):at.call(n):j(n)},a.unescape=function(n){return n==V?\"\":(n+\"\").replace(X,g)},a.union=function(){return D(et.apply(K,arguments))},a.uniq=D,a.uniqueId=function(n){var t=L++;return n?n+t:t},a.values=j,a.where=function(n,t){var r=[];return o(t,function(n,t){r.push(t)}),O(n,function(n){for(var e=r.length;e--;){var u=n[r[e]]===t[r[e]];if(!u)break}return!!u})},a.without=function(n){for(var t=-1,r=n.length,e=[];++t<r;){var u=n[t];\n   27  0>M(arguments,u,1)&&e.push(u)}return e},a.wrap=function(n,t){return function(){var r=[n];return ot.apply(r,arguments),t.apply(this,r)}},a.zip=function(n){for(var t=-1,r=n?k(T(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=T(arguments,t);return e},a.all=A,a.any=R,a.collect=S,a.detect=E,a.drop=$,a.each=r,a.foldl=N,a.foldr=q,a.head=B,a.include=x,a.inject=N,a.methods=_,a.select=O,a.tail=$,a.take=B,a.unique=D,P(a),a.prototype.chain=function(){return this.__chain__=U,this},a.prototype.value=function(){return this.__wrapped__\n   28: },r(\"pop push reverse shift sort splice unshift\".split(\" \"),function(n){var t=K[n];a.prototype[n]=function(){var n=this.__wrapped__;return t.apply(n,arguments),xt&&0===n.length&&delete n[0],this.__chain__&&(n=new a(n),n.__chain__=U),n}}),r([\"concat\",\"join\",\"slice\"],function(n){var t=K[n];a.prototype[n]=function(){var n=t.apply(this.__wrapped__,arguments);return this.__chain__&&(n=new a(n),n.__chain__=U),n}}),H?typeof module==\"object\"&&module&&module.exports==H?(module.exports=a)._=a:H._=a:n._=a})(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\minimatch.js:\n   34  \n   35  var LRU = require(\"lru-cache\")\n   36:   , cache = minimatch.cache = new LRU({max: 100})\n   37    , GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\n   38    , sigmund = require(\"sigmund\")\n   ..\n   40  var path = require(\"path\")\n   41    // any single thing other than /\n   42:   // don't need to escape / when using new RegExp()\n   43    , qmark = \"[^/]\"\n   44  \n   ..\n  100  \n  101    m.Minimatch = function Minimatch (pattern, options) {\n  102:     return new orig.Minimatch(pattern, ext(def, options))\n  103    }\n  104  \n  ...\n  114  function minimatch (p, pattern, options) {\n  115    if (typeof pattern !== \"string\") {\n  116:     throw new TypeError(\"glob pattern string required\")\n  117    }\n  118  \n  ...\n  127    if (pattern.trim() === \"\") return p === \"\"\n  128  \n  129:   return new Minimatch(pattern, options).match(p)\n  130  }\n  131  \n  132  function Minimatch (pattern, options) {\n  133    if (!(this instanceof Minimatch)) {\n  134:     return new Minimatch(pattern, options, cache)\n  135    }\n  136  \n  137    if (typeof pattern !== \"string\") {\n  138:     throw new TypeError(\"glob pattern string required\")\n  139    }\n  140  \n  ...\n  257  // a{b}c -> a{b}c\n  258  minimatch.braceExpand = function (pattern, options) {\n  259:   return new Minimatch(pattern, options).braceExpand()\n  260  }\n  261  \n  ...\n  267  \n  268    if (typeof pattern === \"undefined\") {\n  269:     throw new Error(\"undefined pattern\")\n  270    }\n  271  \n  ...\n  759  \n  760    var flags = options.nocase ? \"i\" : \"\"\n  761:     , regExp = new RegExp(\"^\" + re + \"$\", flags)\n  762  \n  763    regExp._glob = pattern\n  ...\n  768  \n  769  minimatch.makeRe = function (pattern, options) {\n  770:   return new Minimatch(pattern, options || {}).makeRe()\n  771  }\n  772  \n  ...\n  807  \n  808    try {\n  809:     return this.regexp = new RegExp(re, flags)\n  810    } catch (ex) {\n  811      return this.regexp = false\n  ...\n  814  \n  815  minimatch.match = function (list, pattern, options) {\n  816:   var mm = new Minimatch(pattern, options)\n  817    list = list.filter(function (f) {\n  818      return mm.match(f)\n  ...\n 1035  \n 1036    // should be unreachable.\n 1037:   throw new Error(\"wtf?\")\n 1038  }\n 1039  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\package.json:\n   30      \"url\": \"http://github.com/isaacs/minimatch/raw/master/LICENSE\"\n   31    },\n   32:   \"readme\": \"# minimatch\\n\\nA minimal matching utility.\\n\\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.png)](http://travis-ci.org/isaacs/minimatch)\\n\\n\\nThis is the matching library used internally by npm.\\n\\nEventually, it will replace the C binding in node-glob.\\n\\nIt works by converting glob expressions into JavaScript `RegExp`\\nobjects.\\n\\n## Usage\\n\\n```javascript\\nvar minimatch = require(\\\"minimatch\\\")\\n\\nminimatch(\\\"bar.foo\\\", \\\"*.foo\\\") // true!\\nminimatch(\\\"bar.foo\\\", \\\"*.bar\\\") // false!\\nminimatch(\\\"bar.foo\\\", \\\"*.+(bar|foo)\\\", { debug: true }) // true, and noisy!\\n```\\n\\n## Features\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n\\n## Minimatch Class\\n\\nCreate a minimatch object by instanting the `minimatch.Minimatch` class.\\n\\n```javascript\\nvar Minimatch = require(\\\"minimatch\\\").Minimatch\\nvar mm = new Minimatch(pattern, options)\\n```\\n\\n### Properties\\n\\n* `pattern` The original pattern the minimatch object represents.\\n* `options` The options supplied to the constructor.\\n* `set` A 2-dimensional array of regexp or string expressions.\\n  Each row in the\\n  array corresponds to a brace-expanded pattern.  Each item in the row\\n  corresponds to a single path-part.  For example, the pattern\\n  `{a,b/c}/d` would expand to a set of patterns like:\\n\\n        [ [ a, d ]\\n        , [ b, c, d ] ]\\n\\n    If a portion of the pattern doesn't have any \\\"magic\\\" in it\\n    (that is, it's something like `\\\"foo\\\"` rather than `fo*o?`), then it\\n    will be left as a string rather than converted to a regular\\n    expression.\\n\\n* `regexp` Created by the `makeRe` method.  A single regular expression\\n  expressing the entire pattern.  This is useful in cases where you wish\\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\\n* `negate` True if the pattern is negated.\\n* `comment` True if the pattern is a comment.\\n* `empty` True if the pattern is `\\\"\\\"`.\\n\\n### Methods\\n\\n* `makeRe` Generate the `regexp` member if necessary, and return it.\\n  Will return `false` if the pattern is invalid.\\n* `match(fname)` Return true if the filename matches the pattern, or\\n  false otherwise.\\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\\n  filename, and match it against a single row in the `regExpSet`.  This\\n  method is mainly for internal use, but is exposed so that it can be\\n  used by a glob-walker that needs to avoid excessive filesystem calls.\\n\\nAll other methods are internal, and will be called as necessary.\\n\\n## Functions\\n\\nThe top-level exported function has a `cache` property, which is an LRU\\ncache set to store 100 items.  So, calling these methods repeatedly\\nwith the same pattern and options will use the same Minimatch object,\\nsaving the cost of parsing it multiple times.\\n\\n### minimatch(path, pattern, options)\\n\\nMain export.  Tests a path against the pattern using the options.\\n\\n```javascript\\nvar isJS = minimatch(file, \\\"*.js\\\", { matchBase: true })\\n```\\n\\n### minimatch.filter(pattern, options)\\n\\nReturns a function that tests its\\nsupplied argument, suitable for use with `Array.filter`.  Example:\\n\\n```javascript\\nvar javascripts = fileList.filter(minimatch.filter(\\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.match(list, pattern, options)\\n\\nMatch against the list of\\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\\noptions.nonull is set, then return a list containing the pattern itself.\\n\\n```javascript\\nvar javascripts = minimatch.match(fileList, \\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.makeRe(pattern, options)\\n\\nMake a regular expression object from the pattern.\\n\\n## Options\\n\\nAll options are `false` by default.\\n\\n### debug\\n\\nDump a ton of stuff to stderr.\\n\\n### nobrace\\n\\nDo not expand `{a,b}` and `{1..3}` brace sets.\\n\\n### noglobstar\\n\\nDisable `**` matching against multiple folder names.\\n\\n### dot\\n\\nAllow patterns to match filenames starting with a period, even if\\nthe pattern does not explicitly have a period in that spot.\\n\\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\\nis set.\\n\\n### noext\\n\\nDisable \\\"extglob\\\" style patterns like `+(a|b)`.\\n\\n### nocase\\n\\nPerform a case-insensitive match.\\n\\n### nonull\\n\\nWhen a match is not found by `minimatch.match`, return a list containing\\nthe pattern itself.  When set, an empty list is returned if there are\\nno matches.\\n\\n### matchBase\\n\\nIf set, then patterns without slashes will be matched\\nagainst the basename of the path if it contains slashes.  For example,\\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\\n\\n### nocomment\\n\\nSuppress the behavior of treating `#` at the start of a pattern as a\\ncomment.\\n\\n### nonegate\\n\\nSuppress the behavior of treating a leading `!` character as negation.\\n\\n### flipNegate\\n\\nReturns from negate expressions the same as if they were not negated.\\n(Ie, true on a hit, false on a miss.)\\n\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between minimatch and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen minimatch.match returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`minimatch.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\README.md:\n   44  ```javascript\n   45  var Minimatch = require(\"minimatch\").Minimatch\n   46: var mm = new Minimatch(pattern, options)\n   47  ```\n   48  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\node_modules\\lru-cache\\lib\\lru-cache.js:\n   16  function LRUCache (options) {\n   17    if (!(this instanceof LRUCache))\n   18:     return new LRUCache(options)\n   19  \n   20    if (typeof options === 'number')\n   ..\n  102  \n  103  LRUCache.prototype.keys = function () {\n  104:   var keys = new Array(this._itemCount)\n  105    var i = 0\n  106    for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n  ...\n  112  \n  113  LRUCache.prototype.values = function () {\n  114:   var values = new Array(this._itemCount)\n  115    var i = 0\n  116    for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n  ...\n  158    var len = this._lengthCalculator(value)\n  159    var age = this._maxAge ? Date.now() : 0\n  160:   var hit = new Entry(key, value, this._mru++, len, age)\n  161  \n  162    // oversized objects fall out of cache automatically.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\basic.js:\n    3  \n    4  test(\"basic\", function (t) {\n    5:   var cache = new LRU({max: 10})\n    6    cache.set(\"key\", \"value\")\n    7    t.equal(cache.get(\"key\"), \"value\")\n    .\n   13  \n   14  test(\"least recently set\", function (t) {\n   15:   var cache = new LRU(2)\n   16    cache.set(\"a\", \"A\")\n   17    cache.set(\"b\", \"B\")\n   ..\n   24  \n   25  test(\"lru recently gotten\", function (t) {\n   26:   var cache = new LRU(2)\n   27    cache.set(\"a\", \"A\")\n   28    cache.set(\"b\", \"B\")\n   ..\n   36  \n   37  test(\"del\", function (t) {\n   38:   var cache = new LRU(2)\n   39    cache.set(\"a\", \"A\")\n   40    cache.del(\"a\")\n   ..\n   44  \n   45  test(\"max\", function (t) {\n   46:   var cache = new LRU(3)\n   47  \n   48    // test changing the max, verify that the LRU items get dropped.\n   ..\n   82  \n   83  test(\"reset\", function (t) {\n   84:   var cache = new LRU(10)\n   85    cache.set(\"a\", \"A\")\n   86    cache.set(\"b\", \"B\")\n   ..\n   97  // about the format/layout of the response.\n   98  test(\"dump\", function (t) {\n   99:   var cache = new LRU(10)\n  100    var d = cache.dump();\n  101    t.equal(Object.keys(d).length, 0, \"nothing in dump for empty cache\")\n  ...\n  120  \n  121  test(\"basic with weighed length\", function (t) {\n  122:   var cache = new LRU({\n  123      max: 100,\n  124      length: function (item) { return item.size }\n  ...\n  135  \n  136  test(\"weighed length item too large\", function (t) {\n  137:   var cache = new LRU({\n  138      max: 10,\n  139      length: function (item) { return item.size }\n  ...\n  150  \n  151  test(\"least recently set with weighed length\", function (t) {\n  152:   var cache = new LRU({\n  153      max:8,\n  154      length: function (item) { return item.length }\n  ...\n  166  \n  167  test(\"lru recently gotten with weighed length\", function (t) {\n  168:   var cache = new LRU({\n  169      max: 8,\n  170      length: function (item) { return item.length }\n  ...\n  184  \n  185  test(\"set returns proper booleans\", function(t) {\n  186:   var cache = new LRU({\n  187      max: 5,\n  188      length: function (item) { return item.length }\n  ...\n  200  \n  201  test(\"drop the old items\", function(t) {\n  202:   var cache = new LRU({\n  203      max: 5,\n  204      maxAge: 50\n  ...\n  231  test(\"disposal function\", function(t) {\n  232    var disposed = false\n  233:   var cache = new LRU({\n  234      max: 1,\n  235      dispose: function (k, n) {\n  ...\n  250  test(\"disposal function on too big of item\", function(t) {\n  251    var disposed = false\n  252:   var cache = new LRU({\n  253      max: 1,\n  254      length: function (k) {\n  ...\n  268  \n  269  test(\"has()\", function(t) {\n  270:   var cache = new LRU({\n  271      max: 1,\n  272      maxAge: 10\n  ...\n  285  \n  286  test(\"stale\", function(t) {\n  287:   var cache = new LRU({\n  288      maxAge: 10,\n  289      stale: true\n  ...\n  318  \n  319  test(\"least recently set w/ peek\", function (t) {\n  320:   var cache = new LRU(2)\n  321    cache.set(\"a\", \"A\")\n  322    cache.set(\"b\", \"B\")\n  ...\n  330  \n  331  test(\"pop the least used item\", function (t) {\n  332:   var cache = new LRU(3)\n  333    , last\n  334  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\foreach.js:\n    3  \n    4  test('forEach', function (t) {\n    5:   var l = new LRU(5)\n    6    for (var i = 0; i < 10; i ++) {\n    7      l.set(i.toString(), i.toString(2))\n    .\n   34  \n   35  test('keys() and values()', function (t) {\n   36:   var l = new LRU(5)\n   37    for (var i = 0; i < 10; i ++) {\n   38      l.set(i.toString(), i.toString(2))\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\memory-leak.js:\n    4  var test = require('tap').test\n    5  var LRU = require('../')\n    6: var l = new LRU({ max: 10 })\n    7  var refs = 0\n    8  function X() {\n    .\n   18    // fill up the cache\n   19    for (var i = 0; i < 100; i++) {\n   20:     l.set(i, new X);\n   21      // throw some gets in there, too.\n   22      if (i % 2 === 0)\n   ..\n   33    // do it again, but more\n   34    for (var i = 0; i < 10000; i++) {\n   35:     l.set(i, new X);\n   36      // throw some gets in there, too.\n   37      if (i % 2 === 0)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\test\\basic.js:\n  366  \n  367      // options.debug = true\n  368:     var m = new mm.Minimatch(pattern, options)\n  369      var r = m.makeRe()\n  370      var expectRe = regexps[re++]\n  ...\n  391  tap.test(\"global leak test\", function (t) {\n  392    var globalAfter = Object.keys(global)\n  393:   t.equivalent(globalAfter, globalBefore, \"no new globals, please\")\n  394    t.end()\n  395  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\test\\caching.js:\n    2  var tap = require(\"tap\")\n    3  tap.test(\"cache test\", function (t) {\n    4:   var mm1 = new Minimatch(\"a?b\")\n    5:   var mm2 = new Minimatch(\"a?b\")\n    6    t.equal(mm1, mm2, \"should get the same object\")\n    7    // the lru should drop it after 100 entries\n    8    for (var i = 0; i < 100; i ++) {\n    9:     new Minimatch(\"a\"+i)\n   10    }\n   11:   mm2 = new Minimatch(\"a?b\")\n   12    t.notEqual(mm1, mm2, \"cache should have dropped\")\n   13    t.end()\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\minimatch\\test\\defaults.js:\n  244        // options.debug = true\n  245        var Class = mm.defaults(options).Minimatch\n  246:       var m = new Class(pattern, {})\n  247        var r = m.makeRe()\n  248        tapOpts.re = String(r) || JSON.stringify(r)\n  ...\n  266  tap.test(\"global leak test\", function (t) {\n  267    var globalAfter = Object.keys(global)\n  268:   t.equivalent(globalAfter, globalBefore, \"no new globals, please\")\n  269    t.end()\n  270  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\nopt\\package.json:\n   26      \"abbrev\": \"1\"\n   27    },\n   28:   \"readme\": \"If you want to write an option parser, and have it be good, there are\\ntwo ways to do it.  The Right Way, and the Wrong Way.\\n\\nThe Wrong Way is to sit down and write an option parser.  We've all done\\nthat.\\n\\nThe Right Way is to write some complex configurable program with so many\\noptions that you go half-insane just trying to manage them all, and put\\nit off with duct-tape solutions until you see exactly to the core of the\\nproblem, and finally snap and write an awesome option parser.\\n\\nIf you want to write an option parser, don't write an option parser.\\nWrite a package manager, or a source control system, or a service\\nrestarter, or an operating system.  You probably won't end up with a\\ngood one of those, but if you don't give up, and you are relentless and\\ndiligent enough in your procrastination, you may just end up with a very\\nnice option parser.\\n\\n## USAGE\\n\\n    // my-program.js\\n    var nopt = require(\\\"nopt\\\")\\n      , Stream = require(\\\"stream\\\").Stream\\n      , path = require(\\\"path\\\")\\n      , knownOpts = { \\\"foo\\\" : [String, null]\\n                    , \\\"bar\\\" : [Stream, Number]\\n                    , \\\"baz\\\" : path\\n                    , \\\"bloo\\\" : [ \\\"big\\\", \\\"medium\\\", \\\"small\\\" ]\\n                    , \\\"flag\\\" : Boolean\\n                    , \\\"pick\\\" : Boolean\\n                    , \\\"many\\\" : [String, Array]\\n                    }\\n      , shortHands = { \\\"foofoo\\\" : [\\\"--foo\\\", \\\"Mr. Foo\\\"]\\n                     , \\\"b7\\\" : [\\\"--bar\\\", \\\"7\\\"]\\n                     , \\\"m\\\" : [\\\"--bloo\\\", \\\"medium\\\"]\\n                     , \\\"p\\\" : [\\\"--pick\\\"]\\n                     , \\\"f\\\" : [\\\"--flag\\\"]\\n                     }\\n                 // everything is optional.\\n                 // knownOpts and shorthands default to {}\\n                 // arg list defaults to process.argv\\n                 // slice defaults to 2\\n      , parsed = nopt(knownOpts, shortHands, process.argv, 2)\\n    console.log(parsed)\\n\\nThis would give you support for any of the following:\\n\\n```bash\\n$ node my-program.js --foo \\\"blerp\\\" --no-flag\\n{ \\\"foo\\\" : \\\"blerp\\\", \\\"flag\\\" : false }\\n\\n$ node my-program.js ---bar 7 --foo \\\"Mr. Hand\\\" --flag\\n{ bar: 7, foo: \\\"Mr. Hand\\\", flag: true }\\n\\n$ node my-program.js --foo \\\"blerp\\\" -f -----p\\n{ foo: \\\"blerp\\\", flag: true, pick: true }\\n\\n$ node my-program.js -fp --foofoo\\n{ foo: \\\"Mr. Foo\\\", flag: true, pick: true }\\n\\n$ node my-program.js --foofoo -- -fp  # -- stops the flag parsing.\\n{ foo: \\\"Mr. Foo\\\", argv: { remain: [\\\"-fp\\\"] } }\\n\\n$ node my-program.js --blatzk 1000 -fp # unknown opts are ok.\\n{ blatzk: 1000, flag: true, pick: true }\\n\\n$ node my-program.js --blatzk true -fp # but they need a value\\n{ blatzk: true, flag: true, pick: true }\\n\\n$ node my-program.js --no-blatzk -fp # unless they start with \\\"no-\\\"\\n{ blatzk: false, flag: true, pick: true }\\n\\n$ node my-program.js --baz b/a/z # known paths are resolved.\\n{ baz: \\\"/Users/isaacs/b/a/z\\\" }\\n\\n# if Array is one of the types, then it can take many\\n# values, and will always be an array.  The other types provided\\n# specify what types are allowed in the list.\\n\\n$ node my-program.js --many 1 --many null --many foo\\n{ many: [\\\"1\\\", \\\"null\\\", \\\"foo\\\"] }\\n\\n$ node my-program.js --many foo\\n{ many: [\\\"foo\\\"] }\\n```\\n\\nRead the tests at the bottom of `lib/nopt.js` for more examples of\\nwhat this puppy can do.\\n\\n## Types\\n\\nThe following types are supported, and defined on `nopt.typeDefs`\\n\\n* String: A normal string.  No parsing is done.\\n* path: A file system path.  Gets resolved against cwd if not absolute.\\n* url: A url.  If it doesn't parse, it isn't accepted.\\n* Number: Must be numeric.\\n* Date: Must parse as a date. If it does, and `Date` is one of the options,\\n  then it will return a Date object, not a string.\\n* Boolean: Must be either `true` or `false`.  If an option is a boolean,\\n  then it does not need a value, and its presence will imply `true` as\\n  the value.  To negate boolean flags, do `--no-whatever` or `--whatever\\n  false`\\n* NaN: Means that the option is strictly not allowed.  Any value will\\n  fail.\\n* Stream: An object matching the \\\"Stream\\\" class in node.  Valuable\\n  for use when validating programmatically.  (npm uses this to let you\\n  supply any WriteStream on the `outfd` and `logfd` config options.)\\n* Array: If `Array` is specified as one of the types, then the value\\n  will be parsed as a list of options.  This means that multiple values\\n  can be specified, and that the value will always be an array.\\n\\nIf a type is an array of values not on this list, then those are\\nconsidered valid values.  For instance, in the example above, the\\n`--bloo` option can only be one of `\\\"big\\\"`, `\\\"medium\\\"`, or `\\\"small\\\"`,\\nand any other value will be rejected.\\n\\nWhen parsing unknown fields, `\\\"true\\\"`, `\\\"false\\\"`, and `\\\"null\\\"` will be\\ninterpreted as their JavaScript equivalents, and numeric values will be\\ninterpreted as a number.\\n\\nYou can also mix types and values, or multiple types, in a list.  For\\ninstance `{ blah: [Number, null] }` would allow a value to be set to\\neither a Number or null.\\n\\nTo define a new type, add it to `nopt.typeDefs`.  Each item in that\\nhash is an object with a `type` member and a `validate` method.  The\\n`type` member is an object that matches what goes in the type list.  The\\n`validate` method is a function that gets called with `validate(data,\\nkey, val)`.  Validate methods should assign `data[key]` to the valid\\nvalue of `val` if it can be handled properly, or return boolean\\n`false` if it cannot.\\n\\nYou can also call `nopt.clean(data, types, typeDefs)` to clean up a\\nconfig object and remove its invalid properties.\\n\\n## Error Handling\\n\\nBy default, nopt outputs a warning to standard error when invalid\\noptions are found.  You can change this behavior by assigning a method\\nto `nopt.invalidHandler`.  This method will be called with\\nthe offending `nopt.invalidHandler(key, val, types)`.\\n\\nIf no `nopt.invalidHandler` is assigned, then it will console.error\\nits whining.  If it is assigned to boolean `false` then the warning is\\nsuppressed.\\n\\n## Abbreviations\\n\\nYes, they are supported.  If you define options like this:\\n\\n```javascript\\n{ \\\"foolhardyelephants\\\" : Boolean\\n, \\\"pileofmonkeys\\\" : Boolean }\\n```\\n\\nThen this will work:\\n\\n```bash\\nnode program.js --foolhar --pil\\nnode program.js --no-f --pileofmon\\n# etc.\\n```\\n\\n## Shorthands\\n\\nShorthands are a hash of shorter option names to a snippet of args that\\nthey expand to.\\n\\nIf multiple one-character shorthands are all combined, and the\\ncombination does not unambiguously match any other option or shorthand,\\nthen they will be broken up into their constituent parts.  For example:\\n\\n```json\\n{ \\\"s\\\" : [\\\"--loglevel\\\", \\\"silent\\\"]\\n, \\\"g\\\" : \\\"--global\\\"\\n, \\\"f\\\" : \\\"--force\\\"\\n, \\\"p\\\" : \\\"--parseable\\\"\\n, \\\"l\\\" : \\\"--long\\\"\\n}\\n```\\n\\n```bash\\nnpm ls -sgflp\\n# just like doing this:\\nnpm ls --loglevel silent --global --force --long --parseable\\n```\\n\\n## The Rest of the args\\n\\nThe config object returned by nopt is given a special member called\\n`argv`, which is an object with the following fields:\\n\\n* `remain`: The remaining args after all the parsing has occurred.\\n* `original`: The args as they originally appeared.\\n* `cooked`: The args after flags and shorthands are expanded.\\n\\n## Slicing\\n\\nNode programs are called with more or less the exact argv as it appears\\nin C land, after the v8 and node-specific options have been plucked off.\\nAs such, `argv[0]` is always `node` and `argv[1]` is always the\\nJavaScript program being run.\\n\\nThat's usually not very useful to you.  So they're sliced off by\\ndefault.  If you want them, then you can pass in `0` as the last\\nargument, or any other number that you'd like to slice off the start of\\nthe list.\\n\",\n   29    \"readmeFilename\": \"README.md\",\n   30    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\nopt\\README.md:\n  124  either a Number or null.\n  125  \n  126: To define a new type, add it to `nopt.typeDefs`.  Each item in that\n  127  hash is an object with a `type` member and a `validate` method.  The\n  128  `type` member is an object that matches what goes in the type list.  The\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\nopt\\lib\\nopt.js:\n   82          } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {\n   83            debug(\"convert to date\", val)\n   84:           val = new Date(val)\n   85          }\n   86        }\n   ..\n  140    var s = Date.parse(val)\n  141    if (isNaN(s)) return false\n  142:   data[k] = new Date(val)\n  143  }\n  144  \n  ...\n  529     ,[]]\n  530    ,[\"--date 2011-01-25\"\n  531:    ,{date: new Date(\"2011-01-25\")}\n  532     ,[]]\n  533    ].forEach(function (test) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\rimraf\\rimraf.js:\n   30  function rimraf (p, cb) {\n   31  \n   32:   if (!cb) throw new Error(\"No callback passed to rimraf()\")\n   33  \n   34    var busyTries = 0\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\rimraf\\node_modules\\graceful-fs\\graceful-fs.js:\n   39  \n   40    if (fs._curOpen >= fs.MAX_OPEN) {\n   41:     queue.push(new OpenReq(path, flags, mode, cb))\n   42      setTimeout(flush)\n   43      return\n   ..\n  261  \n  262  // on Windows, A/V software can lock the directory, causing this\n  263: // to fail with an EACCES or EPERM if the directory contains newly\n  264  // created files.  Try again on failure, for up to 1 second.\n  265  if (process.platform === \"win32\") {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\package.json:\n   66      }\n   67    ],\n   68:   \"readme\": \"# Underscore.string [![Build Status](https://secure.travis-ci.org/epeli/underscore.string.png?branch=master)](http://travis-ci.org/epeli/underscore.string) #\\n\\n\\n\\nJavascript lacks complete string manipulation operations.\\nThis an attempt to fill that gap. List of build-in methods can be found\\nfor example from [Dive Into JavaScript][d].\\n\\n[d]: http://www.diveintojavascript.com/core-javascript-reference/the-string-object\\n\\n\\nAs name states this an extension for [Underscore.js][u], but it can be used\\nindependently from **_s**-global variable. But with Underscore.js you can\\nuse Object-Oriented style and chaining:\\n\\n[u]: http://documentcloud.github.com/underscore/\\n\\n```javascript\\n_(\\\"   epeli  \\\").chain().trim().capitalize().value()\\n=> \\\"Epeli\\\"\\n```\\n\\n## Download ##\\n\\n  * [Development version](https://raw.github.com/epeli/underscore.string/master/lib/underscore.string.js) *Uncompressed with Comments 18kb*\\n  * [Production version](https://github.com/epeli/underscore.string/raw/master/dist/underscore.string.min.js) *Minified 7kb*\\n\\n\\n## Node.js installation ##\\n\\n**npm package**\\n\\n    npm install underscore.string\\n\\n**Standalone usage**:\\n\\n```javascript\\nvar _s = require('underscore.string');\\n```\\n\\n**Integrate with Underscore.js**:\\n\\n```javascript\\nvar _  = require('underscore');\\n\\n// Import Underscore.string to separate object, because there are conflict functions (include, reverse, contains)\\n_.str = require('underscore.string');\\n\\n// Mix in non-conflict functions to Underscore namespace if you want\\n_.mixin(_.str.exports());\\n\\n// All functions, include conflict, will be available through _.str object\\n_.str.include('Underscore.string', 'string'); // => true\\n```\\n\\n## String Functions ##\\n\\nFor availability of functions in this way you need to mix in Underscore.string functions:\\n\\n```javascript\\n_.mixin(_.string.exports());\\n```\\n\\notherwise functions from examples will be available through _.string or _.str objects:\\n\\n```javascript\\n_.str.capitalize('epeli')\\n=> \\\"Epeli\\\"\\n```\\n\\n**capitalize** _.capitalize(string)\\n\\nConverts first letter of the string to uppercase.\\n\\n```javascript\\n_.capitalize(\\\"foo Bar\\\")\\n=> \\\"Foo Bar\\\"\\n```\\n\\n**chop** _.chop(string, step)\\n\\n```javascript\\n_.chop('whitespace', 3)\\n=> ['whi','tes','pac','e']\\n```\\n\\n**clean** _.clean(str)\\n\\nCompress some whitespaces to one.\\n\\n```javascript\\n_.clean(\\\" foo    bar   \\\")\\n=> 'foo bar'\\n```\\n\\n**chars** _.chars(str)\\n\\n```javascript\\n_.chars('Hello')\\n=> ['H','e','l','l','o']\\n```\\n\\n**includes** _.includes(string, substring)\\n\\nTests if string contains a substring.\\n\\n```javascript\\n_.includes(\\\"foobar\\\", \\\"ob\\\")\\n=> true\\n```\\n\\n**include** available only through _.str object, because Underscore has function with the same name.\\n\\n```javascript\\n_.str.include(\\\"foobar\\\", \\\"ob\\\")\\n=> true\\n```\\n\\n**includes** function was removed\\n\\nBut you can create it in this way, for compatibility with previous versions:\\n\\n```javascript\\n_.includes = _.str.include\\n```\\n\\n**count** _.count(string, substring)\\n\\n```javascript\\n_('Hello world').count('l')\\n=> 3\\n```\\n\\n**escapeHTML** _.escapeHTML(string)\\n\\nConverts HTML special characters to their entity equivalents.\\n\\n```javascript\\n_('<div>Blah blah blah</div>').escapeHTML();\\n=> '&lt;div&gt;Blah blah blah&lt;/div&gt;'\\n```\\n\\n**unescapeHTML** _.unescapeHTML(string)\\n\\nConverts entity characters to HTML equivalents.\\n\\n```javascript\\n_('&lt;div&gt;Blah blah blah&lt;/div&gt;').unescapeHTML();\\n=> '<div>Blah blah blah</div>'\\n```\\n\\n**insert** _.insert(string, index, substing)\\n\\n```javascript\\n_('Hello ').insert(6, 'world')\\n=> 'Hello world'\\n```\\n\\n**isBlank** _.isBlank(string)\\n\\n```javascript\\n_('').isBlank(); // => true\\n_('\\\\n').isBlank(); // => true\\n_(' ').isBlank(); // => true\\n_('a').isBlank(); // => false\\n```\\n\\n**join** _.join(separator, *strings)\\n\\nJoins strings together with given separator\\n\\n```javascript\\n_.join(\\\" \\\", \\\"foo\\\", \\\"bar\\\")\\n=> \\\"foo bar\\\"\\n```\\n\\n**lines** _.lines(str)\\n\\n```javascript\\n_.lines(\\\"Hello\\\\nWorld\\\")\\n=> [\\\"Hello\\\", \\\"World\\\"]\\n```\\n\\n**reverse** available only through _.str object, because Underscore has function with the same name.\\n\\nReturn reversed string:\\n\\n```javascript\\n_.str.reverse(\\\"foobar\\\")\\n=> 'raboof'\\n```\\n\\n**splice**  _.splice(string, index, howmany, substring)\\n\\nLike a array splice.\\n\\n```javascript\\n_('https://edtsech@bitbucket.org/edtsech/underscore.strings').splice(30, 7, 'epeli')\\n=> 'https://edtsech@bitbucket.org/epeli/underscore.strings'\\n```\\n\\n**startsWith** _.startsWith(string, starts)\\n\\nThis method checks whether string starts with starts.\\n\\n```javascript\\n_(\\\"image.gif\\\").startsWith(\\\"image\\\")\\n=> true\\n```\\n\\n**endsWith** _.endsWith(string, ends)\\n\\nThis method checks whether string ends with ends.\\n\\n```javascript\\n_(\\\"image.gif\\\").endsWith(\\\"gif\\\")\\n=> true\\n```\\n\\n**succ**  _.succ(str)\\n\\nReturns the successor to str.\\n\\n```javascript\\n_('a').succ()\\n=> 'b'\\n\\n_('A').succ()\\n=> 'B'\\n```\\n\\n**supplant**\\n\\nSupplant function was removed, use Underscore.js [template function][p].\\n\\n[p]: http://documentcloud.github.com/underscore/#template\\n\\n**strip** alias for *trim*\\n\\n**lstrip** alias for *ltrim*\\n\\n**rstrip** alias for *rtrim*\\n\\n**titleize** _.titleize(string)\\n\\n```javascript\\n_('my name is epeli').titleize()\\n=> 'My Name Is Epeli'\\n```\\n\\n**camelize** _.camelize(string)\\n\\nConverts underscored or dasherized string to a camelized one\\n\\n```javascript\\n_('-moz-transform').camelize()\\n=> 'MozTransform'\\n```\\n\\n**classify** _.classify(string)\\n\\nConverts string to camelized class name\\n\\n```javascript\\n_('some_class_name').classify()\\n=> 'SomeClassName'\\n```\\n\\n**underscored** _.underscored(string)\\n\\nConverts a camelized or dasherized string into an underscored one\\n\\n```javascript\\n_('MozTransform').underscored()\\n=> 'moz_transform'\\n```\\n\\n**dasherize** _.dasherize(string)\\n\\nConverts a underscored or camelized string into an dasherized one\\n\\n```javascript\\n_('MozTransform').dasherize()\\n=> '-moz-transform'\\n```\\n\\n**humanize** _.humanize(string)\\n\\nConverts an underscored, camelized, or dasherized string into a humanized one.\\nAlso removes beginning and ending whitespace, and removes the postfix '_id'.\\n\\n```javascript\\n_('  capitalize dash-CamelCase_underscore trim  ').humanize()\\n=> 'Capitalize dash camel case underscore trim'\\n```\\n\\n**trim** _.trim(string, [characters])\\n\\ntrims defined characters from begining and ending of the string.\\nDefaults to whitespace characters.\\n\\n```javascript\\n_.trim(\\\"  foobar   \\\")\\n=> \\\"foobar\\\"\\n\\n_.trim(\\\"_-foobar-_\\\", \\\"_-\\\")\\n=> \\\"foobar\\\"\\n```\\n\\n\\n**ltrim** _.ltrim(string, [characters])\\n\\nLeft trim. Similar to trim, but only for left side.\\n\\n\\n**rtrim** _.rtrim(string, [characters])\\n\\nRight trim. Similar to trim, but only for right side.\\n\\n**truncate** _.truncate(string, length, truncateString)\\n\\n```javascript\\n_('Hello world').truncate(5)\\n=> 'Hello...'\\n\\n_('Hello').truncate(10)\\n=> 'Hello'\\n```\\n\\n**prune** _.prune(string, length, pruneString)\\n\\nElegant version of truncate.\\nMakes sure the pruned string does not exceed the original length.\\nAvoid half-chopped words when truncating.\\n\\n```javascript\\n_('Hello, world').prune(5)\\n=> 'Hello...'\\n\\n_('Hello, world').prune(8)\\n=> 'Hello...'\\n\\n_('Hello, world').prune(5, ' (read a lot more)')\\n=> 'Hello, world' (as adding \\\"(read a lot more)\\\" would be longer than the original string)\\n\\n_('Hello, cruel world').prune(15)\\n=> 'Hello, cruel...'\\n\\n_('Hello').prune(10)\\n=> 'Hello'\\n```\\n\\n**words** _.words(str, delimiter=\\\" \\\")\\n\\nSplit string by delimiter (String or RegExp), ' ' by default.\\n\\n```javascript\\n_.words(\\\"I love you\\\")\\n=> [\\\"I\\\",\\\"love\\\",\\\"you\\\"]\\n\\n_.words(\\\"I_love_you\\\", \\\"_\\\")\\n=> [\\\"I\\\",\\\"love\\\",\\\"you\\\"]\\n\\n_.words(\\\"I-love-you\\\", /-/)\\n=> [\\\"I\\\",\\\"love\\\",\\\"you\\\"]\\n```\\n\\n**sprintf** _.sprintf(string format, *arguments)\\n\\nC like string formatting.\\nCredits goes to [Alexandru Marasteanu][o].\\nFor more detailed documentation, see the [original page][o].\\n\\n[o]: http://www.diveintojavascript.com/projects/sprintf-for-javascript\\n\\n```javascript\\n_.sprintf(\\\"%.1f\\\", 1.17)\\n\\\"1.2\\\"\\n```\\n\\n**pad** _.pad(str, length, [padStr, type])\\n\\npads the `str` with characters until the total string length is equal to the passed `length` parameter. By default, pads on the **left** with the space char (`\\\" \\\"`). `padStr` is truncated to a single character if necessary.\\n\\n```javascript\\n_.pad(\\\"1\\\", 8)\\n-> \\\"       1\\\";\\n\\n_.pad(\\\"1\\\", 8, '0')\\n-> \\\"00000001\\\";\\n\\n_.pad(\\\"1\\\", 8, '0', 'right')\\n-> \\\"10000000\\\";\\n\\n_.pad(\\\"1\\\", 8, '0', 'both')\\n-> \\\"00001000\\\";\\n\\n_.pad(\\\"1\\\", 8, 'bleepblorp', 'both')\\n-> \\\"bbbb1bbb\\\";\\n```\\n\\n**lpad** _.lpad(str, length, [padStr])\\n\\nleft-pad a string. Alias for `pad(str, length, padStr, 'left')`\\n\\n```javascript\\n_.lpad(\\\"1\\\", 8, '0')\\n-> \\\"00000001\\\";\\n```\\n\\n**rpad** _.rpad(str, length, [padStr])\\n\\nright-pad a string. Alias for `pad(str, length, padStr, 'right')`\\n\\n```javascript\\n_.rpad(\\\"1\\\", 8, '0')\\n-> \\\"10000000\\\";\\n```\\n\\n**lrpad** _.lrpad(str, length, [padStr])\\n\\nleft/right-pad a string. Alias for `pad(str, length, padStr, 'both')`\\n\\n```javascript\\n_.lrpad(\\\"1\\\", 8, '0')\\n-> \\\"00001000\\\";\\n```\\n\\n**center** alias for **lrpad**\\n\\n**ljust** alias for *rpad*\\n\\n**rjust** alias for *lpad*\\n\\n**toNumber**  _.toNumber(string, [decimals])\\n\\nParse string to number. Returns NaN if string can't be parsed to number.\\n\\n```javascript\\n_('2.556').toNumber()\\n=> 3\\n\\n_('2.556').toNumber(1)\\n=> 2.6\\n```\\n\\n**strRight**  _.strRight(string, pattern)\\n\\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strRight('_')\\n=> \\\"is_a_test_string\\\";\\n```\\n\\n**strRightBack**  _.strRightBack(string, pattern)\\n\\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strRightBack('_')\\n=> \\\"string\\\";\\n```\\n\\n**strLeft**  _.strLeft(string, pattern)\\n\\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strLeft('_')\\n=> \\\"This\\\";\\n```\\n\\n**strLeftBack**  _.strLeftBack(string, pattern)\\n\\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\\n\\n```javascript\\n_('This_is_a_test_string').strLeftBack('_')\\n=> \\\"This_is_a_test\\\";\\n```\\n\\n**stripTags**\\n\\nRemoves all html tags from string.\\n\\n```javascript\\n_('a <a href=\\\"#\\\">link</a>').stripTags()\\n=> 'a link'\\n\\n_('a <a href=\\\"#\\\">link</a><script>alert(\\\"hello world!\\\")</script>').stripTags()\\n=> 'a linkalert(\\\"hello world!\\\")'\\n```\\n\\n**toSentence**  _.toSentence(array, [delimiter, lastDelimiter])\\n\\nJoin an array into a human readable sentence.\\n\\n```javascript\\n_.toSentence(['jQuery', 'Mootools', 'Prototype'])\\n=> 'jQuery, Mootools and Prototype';\\n\\n_.toSentence(['jQuery', 'Mootools', 'Prototype'], ', ', ' unt ')\\n=> 'jQuery, Mootools unt Prototype';\\n```\\n\\n**repeat** _.repeat(string, count, [separator])\\n\\nRepeats a string count times.\\n\\n```javascript\\n_.repeat(\\\"foo\\\", 3)\\n=> 'foofoofoo';\\n\\n_.repeat(\\\"foo\\\", 3, \\\"bar\\\")\\n=> 'foobarfoobarfoo'\\n```\\n\\n**slugify** _.slugify(string)\\n\\nTransform text into a URL slug. Replaces whitespaces, accentuated, and special characters with a dash.\\n\\n```javascript\\n_.slugify(\\\"Un éléphant à l'orée du bois\\\")\\n=> 'un-elephant-a-loree-du-bois';\\n```\\n\\n***Caution: this function is charset dependent***\\n\\n## Roadmap ##\\n\\nAny suggestions or bug reports are welcome. Just email me or more preferably open an issue.\\n\\n## Changelog ##\\n\\n### 2.0.0 ###\\n\\n* Added prune, humanize functions\\n* Added _.string (_.str) namespace for Underscore.string library\\n* Removed includes function\\n\\n#### Problems\\n\\nWe lose two things for `include` and `reverse` methods from `_.string`:\\n\\n* Calls like `_('foobar').include('bar')` aren't available;\\n* Chaining isn't available too.\\n\\nBut if you need this functionality you can create aliases for conflict functions which will be convenient for you:\\n\\n```javascript\\n_.mixin({\\n    includeString: _.str.include,\\n    reverseString: _.str.reverse\\n})\\n\\n// Now wrapper calls and chaining are available.\\n_('foobar').chain().reverseString().includeString('rab').value()\\n```\\n\\n#### Standalone Usage\\n\\nIf you are using Underscore.string without Underscore. You also have `_.string` namespace for it and `_.str` alias\\nBut of course you can just reassign `_` variable with `_.string`\\n\\n```javascript\\n_ = _.string\\n```\\n### 2.2.0 ###\\n\\n* Capitalize method behavior changed\\n* Various perfomance tweaks\\n\\n### 2.1.1###\\n\\n* Fixed words method bug\\n* Added classify method\\n\\n### 2.1.0 ###\\n\\n* AMD support\\n* Added toSentence method\\n* Added slugify method\\n* Lots of speed optimizations\\n\\n### 2.0.0 ###\\n\\nFor upgrading to this version you need to mix in Underscore.string library to Underscore object:\\n\\n```javascript\\n_.mixin(_.string.exports());\\n```\\n\\nand all non-conflict Underscore.string functions will be available through Underscore object.\\nAlso function `includes` has been removed, you should replace this function by `_.str.include`\\nor create alias `_.includes = _.str.include` and all your code will work fine.\\n\\n### 1.1.6 ###\\n\\n* Fixed reverse and truncate\\n* Added isBlank, stripTags, inlude(alias for includes)\\n* Added uglifier compression\\n\\n### 1.1.5 ###\\n\\n* Added strRight, strRightBack, strLeft, strLeftBack\\n\\n### 1.1.4 ###\\n\\n* Added pad, lpad, rpad, lrpad methods and aliases center, ljust, rjust\\n* Integration with Underscore 1.1.6\\n\\n### 1.1.3 ###\\n\\n* Added methods: underscored, camelize, dasherize\\n* Support newer version of npm\\n\\n### 1.1.2 ###\\n\\n* Created functions: lines, chars, words functions\\n\\n### 1.0.2 ###\\n\\n* Created integration test suite with underscore.js 1.1.4 (now it's absolutely compatible)\\n* Removed 'reverse' function, because this function override underscore.js 'reverse'\\n\\n## Contribute ##\\n\\n* Fork & pull request. Don't forget about tests.\\n* If you planning add some feature please create issue before.\\n\\nOtherwise changes will be rejected.\\n\\n## Contributors list ##\\n\\n*  Esa-Matti Suuronen <esa-matti@suuronen.org> (<http://esa-matti.suuronen.org/>),\\n*  Edward Tsech <edtsech@gmail.com>,\\n*  Sasha Koss <kossnocorp@gmail.com> (<http://koss.nocorp.me/>),\\n*  Vladimir Dronnikov <dronnikov@gmail.com>,\\n*  Pete Kruckenberg (<https://github.com/kruckenb>),\\n*  Paul Chavard <paul@chavard.net> (<http://tchak.net>),\\n*  Ed Finkler <coj@funkatron.com> (<http://funkatron.com>)\\n*  Pavel Pravosud <rwz@duckroll.ru>\\n*  Anton Lindqvist <anton@qvister.se> (<http://qvister.se>)\\n\\n## Licence ##\\n\\nThe MIT License\\n\\nCopyright (c) 2011 Esa-Matti Suuronen esa-matti@suuronen.org\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n\",\n   69    \"readmeFilename\": \"README.markdown\",\n   70    \"_id\": \"underscore.string@2.2.1\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\README.markdown:\n  614  \n  615  * Added methods: underscored, camelize, dasherize\n  616: * Support newer version of npm\n  617  \n  618  ### 1.1.2 ###\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\dist\\underscore.string.min.js:\n    1: (function(a){\"use strict\";var b=String.prototype.trim,c=String.prototype.trimRight,d=String.prototype.trimLeft,e=function(a){return a*1||0},f=function(a,b,c){a+=\"\",b=~~b;for(var d=[];b>0;d[--b]=a);return d.join(c==null?\"\":c)},g=function(a){return Array.prototype.slice.call(a)},h=function(a){return a!=null?\"[\"+m.escapeRegExp(\"\"+a)+\"]\":\"\\\\s\"},i={lt:\"<\",gt:\">\",quot:'\"',apos:\"'\",amp:\"&\"},j={};for(var k in i)j[i[k]]=k;var l=function(){function a(a){return Object.prototype.toString.call(a).slice(8,-1).toLowerCase()}var b=f,c=function(){return c.cache.hasOwnProperty(arguments[0])||(c.cache[arguments[0]]=c.parse(arguments[0])),c.format.call(null,c.cache[arguments[0]],arguments)};return c.format=function(c,d){var e=1,f=c.length,g=\"\",h,i=[],j,k,m,n,o,p;for(j=0;j<f;j++){g=a(c[j]);if(g===\"string\")i.push(c[j]);else if(g===\"array\"){m=c[j];if(m[2]){h=d[e];for(k=0;k<m[2].length;k++){if(!h.hasOwnProperty(m[2][k]))throw new Error(l('[_.sprintf] property \"%s\" does not exist',m[2][k]));h=h[m[2][k]]}}else m[1]?h=d[m[1]]:h=d[e++];if(/[^s]/.test(m[8])&&a(h)!=\"number\")throw new Error(l(\"[_.sprintf] expecting number but found %s\",a(h)));switch(m[8]){case\"b\":h=h.toString(2);break;case\"c\":h=String.fromCharCode(h);break;case\"d\":h=parseInt(h,10);break;case\"e\":h=m[7]?h.toExponential(m[7]):h.toExponential();break;case\"f\":h=m[7]?parseFloat(h).toFixed(m[7]):parseFloat(h);break;case\"o\":h=h.toString(8);break;case\"s\":h=(h=String(h))&&m[7]?h.substring(0,m[7]):h;break;case\"u\":h=Math.abs(h);break;case\"x\":h=h.toString(16);break;case\"X\":h=h.toString(16).toUpperCase()}h=/[def]/.test(m[8])&&m[3]&&h>=0?\"+\"+h:h,o=m[4]?m[4]==\"0\"?\"0\":m[4].charAt(1):\" \",p=m[6]-String(h).length,n=m[6]?b(o,p):\"\",i.push(m[5]?h+n:n+h)}}return i.join(\"\")},c.cache={},c.parse=function(a){var b=a,c=[],d=[],e=0;while(b){if((c=/^[^\\x25]+/.exec(b))!==null)d.push(c[0]);else if((c=/^\\x25{2}/.exec(b))!==null)d.push(\"%\");else{if((c=/^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(b))===null)throw new Error(\"[_.sprintf] huh?\");if(c[2]){e|=1;var f=[],g=c[2],h=[];if((h=/^([a-z_][a-z_\\d]*)/i.exec(g))===null)throw new Error(\"[_.sprintf] huh?\");f.push(h[1]);while((g=g.substring(h[0].length))!==\"\")if((h=/^\\.([a-z_][a-z_\\d]*)/i.exec(g))!==null)f.push(h[1]);else{if((h=/^\\[(\\d+)\\]/.exec(g))===null)throw new Error(\"[_.sprintf] huh?\");f.push(h[1])}c[2]=f}else e|=2;if(e===3)throw new Error(\"[_.sprintf] mixing positional and named placeholders is not (yet) supported\");d.push(c)}b=b.substring(c[0].length)}return d},c}(),m={VERSION:\"2.1.1\",isBlank:function(a){return/^\\s*$/.test(a)},stripTags:function(a){return(\"\"+a).replace(/<\\/?[^>]+>/g,\"\")},capitalize:function(a){return a+=\"\",a.charAt(0).toUpperCase()+a.substring(1)},chop:function(a,b){a+=\"\",b=~~b||a.length;var c=[];for(var d=0;d<a.length;d+=b)c.push(a.slice(d,d+b));return c},clean:function(a){return m.strip(a).replace(/\\s+/g,\" \")},count:function(a,b){return a+=\"\",b+=\"\",a.split(b).length-1},chars:function(a){return(\"\"+a).split(\"\")},escapeHTML:function(a){return(\"\"+a).replace(/[&<>\"']/g,function(a){return\"&\"+j[a]+\";\"})},unescapeHTML:function(a){return(\"\"+a).replace(/\\&([^;]+);/g,function(a,b){var c;return b in i?i[b]:(c=b.match(/^#x([\\da-fA-F]+)$/))?String.fromCharCode(parseInt(c[1],16)):(c=b.match(/^#(\\d+)$/))?String.fromCharCode(~~c[1]):a})},escapeRegExp:function(a){return a.replace(/([-.*+?^${}()|[\\]\\/\\\\])/g,\"\\\\$1\")},insert:function(a,b,c){var d=m.chars(a);return d.splice(~~b,0,\"\"+c),d.join(\"\")},include:function(a,b){return!!~(\"\"+a).indexOf(b)},join:function(){var a=g(arguments);return a.join(a.shift())},lines:function(a){return(\"\"+a).split(\"\\n\")},reverse:function(a){return m.chars(a).reverse().join(\"\")},splice:function(a,b,c,d){var e=m.chars(a);return e.splice(~~b,~~c,d),e.join(\"\")},startsWith:function(a,b){return a+=\"\",b+=\"\",a.length>=b.length&&a.substring(0,b.length)===b},endsWith:function(a,b){return a+=\"\",b+=\"\",a.length>=b.length&&a.substring(a.length-b.length)===b},succ:function(a){a+=\"\";var b=m.chars(a);return b.splice(a.length-1,1,String.fromCharCode(a.charCodeAt(a.length-1)+1)),b.join(\"\")},titleize:function(a){return(\"\"+a).replace(/\\b./g,function(a){return a.toUpperCase()})},camelize:function(a){return m.trim(a).replace(/[-_\\s]+(.)?/g,function(a,b){return b&&b.toUpperCase()})},underscored:function(a){return m.trim(a).replace(/([a-z\\d])([A-Z]+)/g,\"$1_$2\").replace(/[-\\s]+/g,\"_\").toLowerCase()},dasherize:function(a){return m.trim(a).replace(/[_\\s]+/g,\"-\").replace(/([A-Z])/g,\"-$1\").replace(/-+/g,\"-\").toLowerCase()},classify:function(a){return a+=\"\",m.titleize(a.replace(/_/g,\" \")).replace(/\\s/g,\"\")},humanize:function(a){return m.capitalize(this.underscored(a).replace(/_id$/,\"\").replace(/_/g,\" \"))},trim:function(a,c){return a+=\"\",!c&&b?b.call(a):(c=h(c),a.replace(new RegExp(\"^\"+c+\"+|\"+c+\"+$\",\"g\"),\"\"))},ltrim:function(a,b){return a+=\"\",!b&&d?d.call(a):(b=h(b),a.replace(new RegExp(\"^\"+b+\"+\"),\"\"))},rtrim:function(a,b){return a+=\"\",!b&&c?c.call(a):(b=h(b),a.replace(new RegExp(b+\"+$\"),\"\"))},truncate:function(a,b,c){return a+=\"\",c=c||\"...\",b=~~b,a.length>b?a.slice(0,b)+c:a},prune:function(a,b,c){a+=\"\",b=~~b,c=c!=null?\"\"+c:\"...\";var d,e,f=a.replace(/\\W/g,function(a){return a.toUpperCase()!==a.toLowerCase()?\"A\":\" \"});return e=f.charAt(b),d=f.slice(0,b),e&&e.match(/\\S/)&&(d=d.replace(/\\s\\S+$/,\"\")),d=m.rtrim(d),(d+c).length>a.length?a:a.substring(0,d.length)+c},words:function(a,b){return m.trim(a,b).split(b||/\\s+/)},pad:function(a,b,c,d){a+=\"\";var e=0;b=~~b,c?c.length>1&&(c=c.charAt(0)):c=\" \";switch(d){case\"right\":return e=b-a.length,a+f(c,e);case\"both\":return e=b-a.length,f(c,Math.ceil(e/2))+a+f(c,Math.floor(e/2));default:return e=b-a.length,f(c,e)+a}},lpad:function(a,b,c){return m.pad(a,b,c)},rpad:function(a,b,c){return m.pad(a,b,c,\"right\")},lrpad:function(a,b,c){return m.pad(a,b,c,\"both\")},sprintf:l,vsprintf:function(a,b){return b.unshift(a),l.apply(null,b)},toNumber:function(a,b){a+=\"\";var c=e(e(a).toFixed(~~b));return c===0&&!a.match(/^0+$/)?Number.NaN:c},strRight:function(a,b){a+=\"\",b=b!=null?\"\"+b:b;var c=b?a.indexOf(b):-1;return~c?a.slice(c+b.length,a.length):a},strRightBack:function(a,b){a+=\"\",b=b!=null?\"\"+b:b;var c=b?a.lastIndexOf(b):-1;return~c?a.slice(c+b.length,a.length):a},strLeft:function(a,b){a+=\"\",b=b!=null?\"\"+b:b;var c=b?a.indexOf(b):-1;return~c?a.slice(0,c):a},strLeftBack:function(a,b){a+=\"\",b=b!=null?\"\"+b:b;var c=a.lastIndexOf(b);return~c?a.slice(0,c):a},toSentence:function(a,b,c){b||(b=\", \"),c||(c=\" and \");var d=a.length,e=\"\";for(var f=0;f<d;f++)e+=a[f],f===d-2?e+=c:f<d-1&&(e+=b);return e},slugify:function(a){var b=\"ąàáäâãćęèéëêìíïîłńòóöôõùúüûñçżź\",c=\"aaaaaaceeeeeiiiilnooooouuuunczz\",d=new RegExp(h(b),\"g\");return a=(\"\"+a).toLowerCase(),a=a.replace(d,function(a){var d=b.indexOf(a);return c.charAt(d)||\"-\"}),m.trim(a.replace(/[^\\w\\s-]/g,\"\").replace(/[-\\s]+/g,\"-\"),\"-\")},exports:function(){var a={};for(var b in this){if(!this.hasOwnProperty(b)||~m.words(\"include contains reverse\").indexOf(b))continue;a[b]=this[b]}return a},repeat:f};m.strip=m.trim,m.lstrip=m.ltrim,m.rstrip=m.rtrim,m.center=m.lrpad,m.rjust=m.lpad,m.ljust=m.rpad,m.contains=m.include,typeof exports!=\"undefined\"?(typeof module!=\"undefined\"&&module.exports&&(module.exports=m),exports._s=m):typeof define==\"function\"&&define.amd?define(\"underscore.string\",function(){return m}):(a._=a._||{},a._.string=a._.str=m)})(this||window);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\lib\\underscore.string.js:\n   81              for (k = 0; k < match[2].length; k++) {\n   82                if (!arg.hasOwnProperty(match[2][k])) {\n   83:                 throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));\n   84                }\n   85                arg = arg[match[2][k]];\n   ..\n   93  \n   94            if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {\n   95:             throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));\n   96            }\n   97            switch (match[8]) {\n   ..\n  142                  }\n  143                  else {\n  144:                   throw new Error('[_.sprintf] huh?');\n  145                  }\n  146                }\n  147              }\n  148              else {\n  149:               throw new Error('[_.sprintf] huh?');\n  150              }\n  151              match[2] = field_list;\n  ...\n  155            }\n  156            if (arg_names === 3) {\n  157:             throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');\n  158            }\n  159            parse_tree.push(match);\n  160          }\n  161          else {\n  162:           throw new Error('[_.sprintf] huh?');\n  163          }\n  164          _fmt = _fmt.substring(match[0].length);\n  ...\n  315        if (!characters && nativeTrim) { return nativeTrim.call(str); }\n  316        characters = defaultToWhiteSpace(characters);\n  317:       return str.replace(new RegExp('\\^' + characters + '+|' + characters + '+$', 'g'), '');\n  318      },\n  319  \n  ...\n  324        }\n  325        characters = defaultToWhiteSpace(characters);\n  326:       return str.replace(new RegExp('^' + characters + '+'), '');\n  327      },\n  328  \n  ...\n  333        }\n  334        characters = defaultToWhiteSpace(characters);\n  335:       return str.replace(new RegExp(characters + '+$'), '');\n  336      },\n  337  \n  ...\n  466        var from  = \"ąàáäâãćęèéëêìíïîłńòóöôõùúüûñçżź\",\n  467            to    = \"aaaaaaceeeeeiiiilnooooouuuunczz\",\n  468:           regex = new RegExp(defaultToWhiteSpace(from), 'g');\n  469  \n  470        str = (''+str).toLowerCase();\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\run-qunit.js:\n    1  function waitFor(test, complete, timeout) {\n    2:   var result, start = new Date().getTime()\n    3    setInterval(function interval() {\n    4:     if ((new Date().getTime() - start < timeout) && !result) {\n    5        result = test()\n    6      } else {\n    .\n   16  \n   17  \n   18: var page = new WebPage()\n   19  \n   20  page.onConsoleMessage = function(msg) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\underscore.js:\n   47  \n   48    // Create a safe reference to the Underscore object for use below.\n   49:   var _ = function(obj) { return new wrapper(obj); };\n   50  \n   51    // Export the Underscore object for **Node.js**, with\n   ..\n  118        }\n  119      });\n  120:     if (!initial) throw new TypeError('Reduce of empty array with no initial value');\n  121      return memo;\n  122    };\n  ...\n  413      var args = slice.call(arguments);\n  414      var length = _.max(_.pluck(args, 'length'));\n  415:     var results = new Array(length);\n  416      for (var i = 0; i < length; i++) results[i] = _.pluck(args, \"\" + i);\n  417      return results;\n  ...\n  457      var len = Math.max(Math.ceil((stop - start) / step), 0);\n  458      var idx = 0;\n  459:     var range = new Array(len);\n  460  \n  461      while(idx < len) {\n  ...\n  480      var bound, args;\n  481      if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n  482:     if (!_.isFunction(func)) throw new TypeError;\n  483      args = slice.call(arguments, 2);\n  484      return bound = function() {\n  485        if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n  486        ctor.prototype = func.prototype;\n  487:       var self = new ctor;\n  488        var result = func.apply(self, args.concat(slice.call(arguments)));\n  489        if (Object(result) === result) return result;\n  ...\n  611    // Delegates to **ECMAScript 5**'s native `Object.keys`\n  612    _.keys = nativeKeys || function(obj) {\n  613:     if (obj !== Object(obj)) throw new TypeError('Invalid object');\n  614      var keys = [];\n  615      for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n  ...\n  686        case '[object String]':\n  687          // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n  688:         // equivalent to `new String(\"5\")`.\n  689          return a == String(b);\n  690        case '[object Number]':\n  ...\n  926           .replace(/\\t/g, '\\\\t')\n  927           + \"');}return __p.join('');\";\n  928:     var func = new Function('obj', '_', tmpl);\n  929      if (data) return func(data, _);\n  930      return function(data) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\functions.js:\n   35      var F = function () { return this; };\n   36      var Boundf = _.bind(F, {hello: \"moe curly\"});\n   37:     equal(new Boundf().hello, undefined, \"function should not be bound to the context, to comply with ECMAScript 5\");\n   38:     equal(Boundf().hello, \"moe curly\", \"When called without the new operator, it's OK to be bound to the context\");\n   39    });\n   40  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\objects.js:\n   26      var Animal = function(){};\n   27      Animal.prototype.run = function(){};\n   28:     equals(_.functions(new Animal).join(''), 'run', 'also looks up functions on the prototype');\n   29    });\n   30  \n   ..\n   54      equals(options.empty, \"\", 'value exists');\n   55      ok(_.isNaN(options.nan), \"NaN isn't overridden\");\n   56:     equals(options.word, \"word\", 'new value is added, first one wins');\n   57    });\n   58  \n   ..\n   94      // String object and primitive comparisons.\n   95      ok(_.isEqual(\"Curly\", \"Curly\"), \"Identical string primitives are equal\");\n   96:     ok(_.isEqual(new String(\"Curly\"), new String(\"Curly\")), \"String objects with identical primitive values are equal\");\n   97:     ok(_.isEqual(new String(\"Curly\"), \"Curly\"), \"String primitives and their corresponding object wrappers are equal\");\n   98:     ok(_.isEqual(\"Curly\", new String(\"Curly\")), \"Commutative equality is implemented for string objects and primitives\");\n   99  \n  100      ok(!_.isEqual(\"Curly\", \"Larry\"), \"String primitives with different values are not equal\");\n  101:     ok(!_.isEqual(new String(\"Curly\"), new String(\"Larry\")), \"String objects with different primitive values are not equal\");\n  102:     ok(!_.isEqual(new String(\"Curly\"), {toString: function(){ return \"Curly\"; }}), \"String objects and objects with a custom `toString` method are not equal\");\n  103  \n  104      // Number object and primitive comparisons.\n  105      ok(_.isEqual(75, 75), \"Identical number primitives are equal\");\n  106:     ok(_.isEqual(new Number(75), new Number(75)), \"Number objects with identical primitive values are equal\");\n  107:     ok(_.isEqual(75, new Number(75)), \"Number primitives and their corresponding object wrappers are equal\");\n  108:     ok(_.isEqual(new Number(75), 75), \"Commutative equality is implemented for number objects and primitives\");\n  109:     ok(!_.isEqual(new Number(0), -0), \"`new Number(0)` and `-0` are not equal\");\n  110:     ok(!_.isEqual(0, new Number(-0)), \"Commutative equality is implemented for `new Number(0)` and `-0`\");\n  111  \n  112:     ok(!_.isEqual(new Number(75), new Number(63)), \"Number objects with different primitive values are not equal\");\n  113:     ok(!_.isEqual(new Number(63), {valueOf: function(){ return 63; }}), \"Number objects and objects with a `valueOf` method are not equal\");\n  114  \n  115      // Comparisons involving `NaN`.\n  116      ok(_.isEqual(NaN, NaN), \"`NaN` is equal to `NaN`\");\n  117      ok(!_.isEqual(61, NaN), \"A number primitive is not equal to `NaN`\");\n  118:     ok(!_.isEqual(new Number(79), NaN), \"A number object is not equal to `NaN`\");\n  119      ok(!_.isEqual(Infinity, NaN), \"`Infinity` is not equal to `NaN`\");\n  120  \n  121      // Boolean object and primitive comparisons.\n  122      ok(_.isEqual(true, true), \"Identical boolean primitives are equal\");\n  123:     ok(_.isEqual(new Boolean, new Boolean), \"Boolean objects with identical primitive values are equal\");\n  124:     ok(_.isEqual(true, new Boolean(true)), \"Boolean primitives and their corresponding object wrappers are equal\");\n  125:     ok(_.isEqual(new Boolean(true), true), \"Commutative equality is implemented for booleans\");\n  126:     ok(!_.isEqual(new Boolean(true), new Boolean), \"Boolean objects with different primitive values are not equal\");\n  127  \n  128      // Common type coercions.\n  129:     ok(!_.isEqual(true, new Boolean(false)), \"Boolean objects are not equal to the boolean primitive `true`\");\n  130      ok(!_.isEqual(\"75\", 75), \"String and number primitives with like values are not equal\");\n  131:     ok(!_.isEqual(new Number(63), new String(63)), \"String and number objects with like values are not equal\");\n  132      ok(!_.isEqual(75, \"75\"), \"Commutative equality is implemented for like string and number values\");\n  133      ok(!_.isEqual(0, \"\"), \"Number and string primitives with like values are not equal\");\n  134      ok(!_.isEqual(1, true), \"Number and boolean primitives with like values are not equal\");\n  135:     ok(!_.isEqual(new Boolean(false), new Number(0)), \"Boolean and number objects with like values are not equal\");\n  136:     ok(!_.isEqual(false, new String(\"\")), \"Boolean primitives and string objects with like values are not equal\");\n  137:     ok(!_.isEqual(12564504e5, new Date(2009, 9, 25)), \"Dates and their corresponding numeric primitive values are not equal\");\n  138  \n  139      // Dates.\n  140:     ok(_.isEqual(new Date(2009, 9, 25), new Date(2009, 9, 25)), \"Date objects referencing identical times are equal\");\n  141:     ok(!_.isEqual(new Date(2009, 9, 25), new Date(2009, 11, 13)), \"Date objects referencing different times are not equal\");\n  142:     ok(!_.isEqual(new Date(2009, 11, 13), {\n  143        getTime: function(){\n  144          return 12606876e5;\n  145        }\n  146      }), \"Date objects and objects with a `getTime` method are not equal\");\n  147:     ok(!_.isEqual(new Date(\"Curly\"), new Date(\"Curly\")), \"Invalid dates are not equal\");\n  148  \n  149      // Functions.\n  ...\n  169      // Arrays with primitive and object values.\n  170      ok(_.isEqual([1, \"Larry\", true], [1, \"Larry\", true]), \"Arrays containing identical primitives are equal\");\n  171:     ok(_.isEqual([/Moe/g, new Date(2009, 9, 25)], [/Moe/g, new Date(2009, 9, 25)]), \"Arrays containing equivalent elements are equal\");\n  172  \n  173      // Multi-dimensional arrays.\n  174:     var a = [new Number(47), false, \"Larry\", /Moe/, new Date(2009, 11, 13), ['running', 'biking', new String('programming')], {a: 47}];\n  175:     var b = [new Number(47), false, \"Larry\", /Moe/, new Date(2009, 11, 13), ['running', 'biking', new String('programming')], {a: 47}];\n  176      ok(_.isEqual(a, b), \"Arrays containing nested arrays and objects are recursively compared\");\n  177  \n  ...\n  202      // Simple objects.\n  203      ok(_.isEqual({a: \"Curly\", b: 1, c: true}, {a: \"Curly\", b: 1, c: true}), \"Objects containing identical primitives are equal\");\n  204:     ok(_.isEqual({a: /Curly/g, b: new Date(2009, 11, 13)}, {a: /Curly/g, b: new Date(2009, 11, 13)}), \"Objects containing equivalent members are equal\");\n  205      ok(!_.isEqual({a: 63, b: 75}, {a: 61, b: 55}), \"Objects of identical sizes with different values are not equal\");\n  206      ok(!_.isEqual({a: 63, b: 75}, {a: 61, c: 55}), \"Objects of identical sizes with different property names are not equal\");\n  ...\n  211      // `A` contains nested objects and arrays.\n  212      a = {\n  213:       name: new String(\"Moe Howard\"),\n  214:       age: new Number(77),\n  215        stooge: true,\n  216        hobbies: [\"acting\"],\n  217        film: {\n  218          name: \"Sing a Song of Six Pants\",\n  219:         release: new Date(1947, 9, 30),\n  220:         stars: [new String(\"Larry Fine\"), \"Shemp Howard\"],\n  221:         minutes: new Number(16),\n  222          seconds: 54\n  223        }\n  ...\n  226      // `B` contains equivalent nested objects and arrays.\n  227      b = {\n  228:       name: new String(\"Moe Howard\"),\n  229:       age: new Number(77),\n  230        stooge: true,\n  231        hobbies: [\"acting\"],\n  232        film: {\n  233          name: \"Sing a Song of Six Pants\",\n  234:         release: new Date(1947, 9, 30),\n  235:         stars: [new String(\"Larry Fine\"), \"Shemp Howard\"],\n  236:         minutes: new Number(16),\n  237          seconds: 54\n  238        }\n  ...\n  241  \n  242      // Instances.\n  243:     ok(_.isEqual(new First, new First), \"Object instances are equal\");\n  244:     ok(!_.isEqual(new First, new Second), \"Objects with different constructors and identical own properties are not equal\");\n  245:     ok(!_.isEqual({value: 1}, new First), \"Object instances and objects sharing equivalent properties are not equal\");\n  246:     ok(!_.isEqual({value: 2}, new Second), \"The prototype chain of objects should not be examined\");\n  247  \n  248      // Circular Arrays.\n  ...\n  250      (b = []).push(b);\n  251      ok(_.isEqual(a, b), \"Arrays containing circular references are equal\");\n  252:     a.push(new String(\"Larry\"));\n  253:     b.push(new String(\"Larry\"));\n  254      ok(_.isEqual(a, b), \"Arrays containing circular references and equivalent properties are equal\");\n  255      a.push(\"Shemp\");\n  ...\n  266      b.def = 75;\n  267      ok(_.isEqual(a, b), \"Objects containing circular references and equivalent properties are equal\");\n  268:     a.def = new Number(75);\n  269:     b.def = new Number(63);\n  270      ok(!_.isEqual(a, b), \"Objects containing circular references and different properties are not equal\");\n  271  \n  ...\n  279      b[0].def = \"Larry\";\n  280      ok(_.isEqual(a, b), \"Cyclic structures containing equivalent properties are equal\");\n  281:     a[0].def = new String(\"Larry\");\n  282:     b[0].def = new String(\"Curly\");\n  283      ok(!_.isEqual(a, b), \"Cyclic structures containing different properties are not equal\");\n  284  \n  ...\n  313        return LocalizedString;\n  314      })();\n  315:     var localized_string1 = new LocalizedString(10), localized_string2 = new LocalizedString(10), localized_string3 = new LocalizedString(11);\n  316      ok(_.isEqual(localized_string1, localized_string2), 'comparing same typed instances with same ids');\n  317      ok(!_.isEqual(localized_string1, localized_string3), 'comparing same typed instances with different ids');\n  ...\n  341      };\n  342  \n  343:     var date = new Date();\n  344      var date_json = {\n  345        _type:'Date',\n  ...\n  361      ok(!_.isEmpty({one : 1}), '{one : 1} is not empty');\n  362      ok(_.isEmpty({}), '{} is empty');\n  363:     ok(_.isEmpty(new RegExp('')), 'objects with prototype properties are empty');\n  364      ok(_.isEmpty(null), 'null is empty');\n  365      ok(_.isEmpty(), 'undefined is empty');\n  ...\n  381        parent.iArguments = (function(){ return arguments; })(1, 2, 3);\\\n  382        parent.iArray     = [1, 2, 3];\\\n  383:       parent.iString    = new String('hello');\\\n  384:       parent.iNumber    = new Number(100);\\\n  385        parent.iFunction  = (function(){});\\\n  386:       parent.iDate      = new Date();\\\n  387        parent.iRegExp    = /hi/;\\\n  388        parent.iNaN       = NaN;\\\n  389        parent.iNull      = null;\\\n  390:       parent.iBoolean   = new Boolean(false);\\\n  391        parent.iUndefined = undefined;\\\n  392      </script>\"\n  ...\n  422      ok(!_.isObject(12), 'and not number');\n  423      ok(!_.isObject(true), 'and not boolean');\n  424:     ok(_.isObject(new String('string')), 'but new String()');\n  425    });\n  426  \n  ...\n  472      ok(!_.isDate(100), 'numbers are not dates');\n  473      ok(!_.isDate({}), 'objects are not dates');\n  474:     ok(_.isDate(new Date()), 'but dates are');\n  475      ok(_.isDate(iDate), 'even from another frame');\n  476    });\n  ...\n  509    if (window.ActiveXObject) {\n  510      test(\"objects: IE host objects\", function() {\n  511:       var xml = new ActiveXObject(\"Msxml2.DOMDocument.3.0\");\n  512        ok(!_.isNumber(xml));\n  513        ok(!_.isBoolean(xml));\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\temp.js:\n    2  \n    3    var func = function(){};\n    4:   var date = new Date();\n    5    var str = \"a string\";\n    6    var numbers = [];\n    .\n   13    });\n   14  \n   15:   JSLitmus.test('_.newIsNumber', function() {\n   16:     return _.newIsNumber(1000)\n   17    });\n   18  \n   ..\n   21    });\n   22  \n   23:   JSLitmus.test('_.newIsNumber(NaN)', function() {\n   24:     return _.newIsNumber(NaN)\n   25    });\n   26  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\utility.js:\n   94      equals(quoteInStatementAndBody({foo: \"bar\"}), \"Statement quotes and 'quotes'.\");\n   95  \n   96:     var withNewlinesAndTabs = _.template('This\\n\\t\\tis: <%= x %>.\\n\\tok.\\nend.');\n   97:     equals(withNewlinesAndTabs({x: 'that'}), 'This\\n\\t\\tis: that.\\n\\tok.\\nend.');\n   98  \n   99      var template = _.template(\"<i><%- value %></i>\");\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\jquery.js:\n   10   * Revision: 6246\n   11   */\n   12: (function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$/,f=/^.[^:#\\[\\.,]*$/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E===\"string\"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:\"\",jquery:\"1.3.2\",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H===\"find\"){G.selector=this.selector+(this.selector?\" \":\"\")+E}else{if(H){G.selector=this.selector+\".\"+H+\"(\"+E+\")\"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F===\"string\"){if(H===g){return this[0]&&o[G||\"attr\"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E==\"width\"||E==\"height\")&&parseFloat(F)<0){F=g}return this.attr(E,F,\"curCSS\")},text:function(F){if(typeof F!==\"object\"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E=\"\";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],\"find\",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),\"find\",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement(\"div\");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(/ jQuery\\d+=\"(?:\\d+|null)\"/g,\"\").replace(/^\\s*/,\"\")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find(\"*\").andSelf(),F=0;E.find(\"*\").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],\"events\");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),\"filter\",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,\"closest\",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E===\"string\"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),\"not\",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E===\"string\"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is(\".\"+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,\"option\")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,\"select\")){var I=E.selectedIndex,L=[],M=E.options,H=E.type==\"select-one\";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||\"\").replace(/\\r/g,\"\")}return g}if(typeof K===\"number\"){K+=\"\"}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&/radio|checkbox/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,\"select\")){var N=o.makeArray(K);o(\"option\",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(/ jQuery\\d+=\"(?:\\d+|null)\"/g,\"\"):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),\"slice\",Array.prototype.slice.call(arguments).join(\",\"))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,\"table\")&&o.nodeName(O,\"tr\")?(N.getElementsByTagName(\"tbody\")[0]||N.appendChild(N.ownerDocument.createElement(\"tbody\"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:\"script\"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||\"\")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J===\"boolean\"){E=J;J=arguments[1]||{};H=2}if(typeof J!==\"object\"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L===\"object\"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=/z-?index|font-?weight|opacity|zoom|line-?height/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)===\"[object Function]\"},isArray:function(E){return s.call(E)===\"[object Array]\"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!==\"HTML\"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&/\\S/.test(G)){var F=document.getElementsByTagName(\"head\")[0]||document.documentElement,E=document.createElement(\"script\");E.type=\"text/javascript\";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I===\"number\"&&G==\"curCSS\"&&!b.test(E)?I+\"px\":I},className:{add:function(E,F){o.each((F||\"\").split(/\\s+/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?\" \":\"\")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(/\\s+/),function(G){return !o.className.has(F,G)}).join(\" \"):\"\"}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(/\\s+/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F==\"width\"||F==\"height\"){var L,G={position:\"absolute\",visibility:\"hidden\",display:\"block\"},K=F==\"width\"?[\"Left\",\"Right\"]:[\"Top\",\"Bottom\"];function I(){L=F==\"width\"?H.offsetWidth:H.offsetHeight;if(E===\"border\"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,\"padding\"+this,true))||0}if(E===\"margin\"){L+=parseFloat(o.curCSS(H,\"margin\"+this,true))||0}else{L-=parseFloat(o.curCSS(H,\"border\"+this+\"Width\",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F==\"opacity\"&&!o.support.opacity){L=o.attr(E,\"opacity\");return L==\"\"?\"1\":L}if(F.match(/float/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(/float/i)){F=\"float\"}F=F.replace(/([A-Z])/g,\"-$1\").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F==\"opacity\"&&L==\"\"){L=\"1\"}}else{if(I.currentStyle){var J=F.replace(/\\-(\\w)/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!/^\\d+(px)?$/i.test(L)&&/^\\d/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+\"px\";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement===\"undefined\"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]===\"string\"){var H=/^<(\\w+)\\s*\\/?>$/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement(\"div\");o.each(F,function(P,S){if(typeof S===\"number\"){S+=\"\"}if(!S){return}if(typeof S===\"string\"){S=S.replace(/(<(\\w+)[^>]*?)\\/>/g,function(U,V,T){return T.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?U:V+\"></\"+T+\">\"});var O=S.replace(/^\\s+/,\"\").substring(0,10).toLowerCase();var Q=!O.indexOf(\"<opt\")&&[1,\"<select multiple='multiple'>\",\"</select>\"]||!O.indexOf(\"<leg\")&&[1,\"<fieldset>\",\"</fieldset>\"]||O.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,\"<table>\",\"</table>\"]||!O.indexOf(\"<tr\")&&[2,\"<table><tbody>\",\"</tbody></table>\"]||(!O.indexOf(\"<td\")||!O.indexOf(\"<th\"))&&[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"]||!O.indexOf(\"<col\")&&[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"]||!o.support.htmlSerialize&&[1,\"div<div>\",\"</div>\"]||[0,\"\",\"\"];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=/<tbody/i.test(S),N=!O.indexOf(\"<table\")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]==\"<table>\"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],\"tbody\")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&/^\\s/.test(S)){L.insertBefore(K.createTextNode(S.match(/^\\s*/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],\"script\")&&(!G[J].type||G[J].type.toLowerCase()===\"text/javascript\")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName(\"script\"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=/href|src|style/.test(G);if(G==\"selected\"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G==\"type\"&&o.nodeName(J,\"input\")&&J.parentNode){throw\"type property can't be changed\"}J[G]=K}if(o.nodeName(J,\"form\")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G==\"tabIndex\"){var I=J.getAttributeNode(\"tabIndex\");return I&&I.specified?I.value:J.nodeName.match(/(button|input|object|select|textarea)/i)?0:J.nodeName.match(/^(a|area)$/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G==\"style\"){return o.attr(J.style,\"cssText\",K)}if(L){J.setAttribute(G,\"\"+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G==\"opacity\"){if(L){J.zoom=1;J.filter=(J.filter||\"\").replace(/alpha\\([^)]*\\)/,\"\")+(parseInt(K)+\"\"==\"NaN\"?\"\":\"alpha(opacity=\"+K*100+\")\")}return J.filter&&J.filter.indexOf(\"opacity=\")>=0?(parseFloat(J.filter.match(/opacity=([^)]*)/)[1])/100)+\"\":\"\"}G=G.replace(/-([a-z])/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||\"\").replace(/^\\s+|\\s+$/g,\"\")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G===\"string\"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(/.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/)||[0,\"0\"])[1],safari:/webkit/.test(C),opera:/opera/.test(C),msie:/msie/.test(C)&&!/opera/.test(C),mozilla:/mozilla/.test(C)&&!/(compatible|webkit)/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,\"parentNode\")},next:function(E){return o.nth(E,2,\"nextSibling\")},prev:function(E){return o.nth(E,2,\"previousSibling\")},nextAll:function(E){return o.dir(E,\"nextSibling\")},prevAll:function(E){return o.dir(E,\"previousSibling\")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,\"iframe\")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G==\"string\"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){var I=(K>0?this.clone(true):this).get();o.fn[F].apply(o(L[K]),I);J=J.concat(I)}return this.pushStack(J,E,G)}});o.each({removeAttr:function(E){o.attr(this,E,\"\");if(this.nodeType==1){this.removeAttribute(E)}},addClass:function(E){o.className.add(this,E)},removeClass:function(E){o.className.remove(this,E)},toggleClass:function(F,E){if(typeof E!==\"boolean\"){E=!o.className.has(this,F)}o.className[E?\"add\":\"remove\"](this,F)},remove:function(E){if(!E||o.filter(E,[this]).length){o(\"*\",this).add([this]).each(function(){o.event.remove(this);o.removeData(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty:function(){o(this).children().remove();while(this.firstChild){this.removeChild(this.firstChild)}}},function(E,F){o.fn[E]=function(){return this.each(F,arguments)}});function j(E,F){return E[0]&&parseInt(o.curCSS(E[0],F,true),10)||0}var h=\"jQuery\"+e(),v=0,A={};o.extend({cache:{},data:function(F,E,G){F=F==l?A:F;var H=F[h];if(!H){H=F[h]=++v}if(E&&!o.cache[H]){o.cache[H]={}}if(G!==g){o.cache[H][E]=G}return E?o.cache[H][E]:H},removeData:function(F,E){F=F==l?A:F;var H=F[h];if(E){if(o.cache[H]){delete o.cache[H][E];E=\"\";for(E in o.cache[H]){break}if(!E){o.removeData(F)}}}else{try{delete F[h]}catch(G){if(F.removeAttribute){F.removeAttribute(h)}}delete o.cache[H]}},queue:function(F,E,H){if(F){E=(E||\"fx\")+\"queue\";var G=o.data(F,E);if(!G||o.isArray(H)){G=o.data(F,E,o.makeArray(H))}else{if(H){G.push(H)}}}return G},dequeue:function(H,G){var E=o.queue(H,G),F=E.shift();if(!G||G===\"fx\"){F=E[0]}if(F!==g){F.call(H)}}});o.fn.extend({data:function(E,G){var H=E.split(\".\");H[1]=H[1]?\".\"+H[1]:\"\";if(G===g){var F=this.triggerHandler(\"getData\"+H[1]+\"!\",[H[0]]);if(F===g&&this.length){F=o.data(this[0],E)}return F===g&&H[1]?this.data(H[0]):F}else{return this.trigger(\"setData\"+H[1]+\"!\",[H[0],G]).each(function(){o.data(this,E,G)})}},removeData:function(E){return this.each(function(){o.removeData(this,E)})},queue:function(E,F){if(typeof E!==\"string\"){F=E;E=\"fx\"}if(F===g){return o.queue(this[0],E)}return this.each(function(){var G=o.queue(this,E,F);if(E==\"fx\"&&G.length==1){G[0].call(this)}})},dequeue:function(E){return this.each(function(){o.dequeue(this,E)})}});\n   13  /*\n   14   * Sizzle CSS Selector Engine - v0.9.3\n   ..\n   17   *  More information: http://sizzlejs.com/\n   18   */\n   19: (function(){var R=/((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^[\\]]*\\]|['\"][^'\"]*['\"]|[^[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?/g,L=0,H=Object.prototype.toString;var F=function(Y,U,ab,ac){ab=ab||[];U=U||document;if(U.nodeType!==1&&U.nodeType!==9){return[]}if(!Y||typeof Y!==\"string\"){return ab}var Z=[],W,af,ai,T,ad,V,X=true;R.lastIndex=0;while((W=R.exec(Y))!==null){Z.push(W[1]);if(W[2]){V=RegExp.rightContext;break}}if(Z.length>1&&M.exec(Y)){if(Z.length===2&&I.relative[Z[0]]){af=J(Z[0]+Z[1],U)}else{af=I.relative[Z[0]]?[U]:F(Z.shift(),U);while(Z.length){Y=Z.shift();if(I.relative[Y]){Y+=Z.shift()}af=J(Y,af)}}}else{var ae=ac?{expr:Z.pop(),set:E(ac)}:F.find(Z.pop(),Z.length===1&&U.parentNode?U.parentNode:U,Q(U));af=F.filter(ae.expr,ae.set);if(Z.length>0){ai=E(af)}else{X=false}while(Z.length){var ah=Z.pop(),ag=ah;if(!I.relative[ah]){ah=\"\"}else{ag=Z.pop()}if(ag==null){ag=U}I.relative[ah](ai,ag,Q(U))}}if(!ai){ai=af}if(!ai){throw\"Syntax error, unrecognized expression: \"+(ah||Y)}if(H.call(ai)===\"[object Array]\"){if(!X){ab.push.apply(ab,ai)}else{if(U.nodeType===1){for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&(ai[aa]===true||ai[aa].nodeType===1&&K(U,ai[aa]))){ab.push(af[aa])}}}else{for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&ai[aa].nodeType===1){ab.push(af[aa])}}}}}else{E(ai,ab)}if(V){F(V,U,ab,ac);if(G){hasDuplicate=false;ab.sort(G);if(hasDuplicate){for(var aa=1;aa<ab.length;aa++){if(ab[aa]===ab[aa-1]){ab.splice(aa--,1)}}}}}return ab};F.matches=function(T,U){return F(T,null,null,U)};F.find=function(aa,T,ab){var Z,X;if(!aa){return[]}for(var W=0,V=I.order.length;W<V;W++){var Y=I.order[W],X;if((X=I.match[Y].exec(aa))){var U=RegExp.leftContext;if(U.substr(U.length-1)!==\"\\\\\"){X[1]=(X[1]||\"\").replace(/\\\\/g,\"\");Z=I.find[Y](X,T,ab);if(Z!=null){aa=aa.replace(I.match[Y],\"\");break}}}}if(!Z){Z=T.getElementsByTagName(\"*\")}return{set:Z,expr:aa}};F.filter=function(ad,ac,ag,W){var V=ad,ai=[],aa=ac,Y,T,Z=ac&&ac[0]&&Q(ac[0]);while(ad&&ac.length){for(var ab in I.filter){if((Y=I.match[ab].exec(ad))!=null){var U=I.filter[ab],ah,af;T=false;if(aa==ai){ai=[]}if(I.preFilter[ab]){Y=I.preFilter[ab](Y,aa,ag,ai,W,Z);if(!Y){T=ah=true}else{if(Y===true){continue}}}if(Y){for(var X=0;(af=aa[X])!=null;X++){if(af){ah=U(af,Y,X,aa);var ae=W^!!ah;if(ag&&ah!=null){if(ae){T=true}else{aa[X]=false}}else{if(ae){ai.push(af);T=true}}}}}if(ah!==g){if(!ag){aa=ai}ad=ad.replace(I.match[ab],\"\");if(!T){return[]}break}}}if(ad==V){if(T==null){throw\"Syntax error, unrecognized expression: \"+ad}else{break}}V=ad}return aa};var I=F.selectors={order:[\"ID\",\"NAME\",\"TAG\"],match:{ID:/#((?:[\\w\\u00c0-\\uFFFF_-]|\\\\.)+)/,CLASS:/\\.((?:[\\w\\u00c0-\\uFFFF_-]|\\\\.)+)/,NAME:/\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF_-]|\\\\.)+)['\"]*\\]/,ATTR:/\\[\\s*((?:[\\w\\u00c0-\\uFFFF_-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(['\"]*)(.*?)\\3|)\\s*\\]/,TAG:/^((?:[\\w\\u00c0-\\uFFFF\\*_-]|\\\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\\((even|odd|[\\dn+-]*)\\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^-]|$)/,PSEUDO:/:((?:[\\w\\u00c0-\\uFFFF_-]|\\\\.)+)(?:\\((['\"]*)((?:\\([^\\)]+\\)|[^\\2\\(\\)]*)+)\\2\\))?/},attrMap:{\"class\":\"className\",\"for\":\"htmlFor\"},attrHandle:{href:function(T){return T.getAttribute(\"href\")}},relative:{\"+\":function(aa,T,Z){var X=typeof T===\"string\",ab=X&&!/\\W/.test(T),Y=X&&!ab;if(ab&&!Z){T=T.toUpperCase()}for(var W=0,V=aa.length,U;W<V;W++){if((U=aa[W])){while((U=U.previousSibling)&&U.nodeType!==1){}aa[W]=Y||U&&U.nodeName===T?U||false:U===T}}if(Y){F.filter(T,aa,true)}},\">\":function(Z,U,aa){var X=typeof U===\"string\";if(X&&!/\\W/.test(U)){U=aa?U:U.toUpperCase();for(var V=0,T=Z.length;V<T;V++){var Y=Z[V];if(Y){var W=Y.parentNode;Z[V]=W.nodeName===U?W:false}}}else{for(var V=0,T=Z.length;V<T;V++){var Y=Z[V];if(Y){Z[V]=X?Y.parentNode:Y.parentNode===U}}if(X){F.filter(U,Z,true)}}},\"\":function(W,U,Y){var V=L++,T=S;if(!U.match(/\\W/)){var X=U=Y?U:U.toUpperCase();T=P}T(\"parentNode\",U,V,W,X,Y)},\"~\":function(W,U,Y){var V=L++,T=S;if(typeof U===\"string\"&&!U.match(/\\W/)){var X=U=Y?U:U.toUpperCase();T=P}T(\"previousSibling\",U,V,W,X,Y)}},find:{ID:function(U,V,W){if(typeof V.getElementById!==\"undefined\"&&!W){var T=V.getElementById(U[1]);return T?[T]:[]}},NAME:function(V,Y,Z){if(typeof Y.getElementsByName!==\"undefined\"){var U=[],X=Y.getElementsByName(V[1]);for(var W=0,T=X.length;W<T;W++){if(X[W].getAttribute(\"name\")===V[1]){U.push(X[W])}}return U.length===0?null:U}},TAG:function(T,U){return U.getElementsByTagName(T[1])}},preFilter:{CLASS:function(W,U,V,T,Z,aa){W=\" \"+W[1].replace(/\\\\/g,\"\")+\" \";if(aa){return W}for(var X=0,Y;(Y=U[X])!=null;X++){if(Y){if(Z^(Y.className&&(\" \"+Y.className+\" \").indexOf(W)>=0)){if(!V){T.push(Y)}}else{if(V){U[X]=false}}}}return false},ID:function(T){return T[1].replace(/\\\\/g,\"\")},TAG:function(U,T){for(var V=0;T[V]===false;V++){}return T[V]&&Q(T[V])?U[1]:U[1].toUpperCase()},CHILD:function(T){if(T[1]==\"nth\"){var U=/(-?)(\\d*)n((?:\\+|-)?\\d*)/.exec(T[2]==\"even\"&&\"2n\"||T[2]==\"odd\"&&\"2n+1\"||!/\\D/.test(T[2])&&\"0n+\"+T[2]||T[2]);T[2]=(U[1]+(U[2]||1))-0;T[3]=U[3]-0}T[0]=L++;return T},ATTR:function(X,U,V,T,Y,Z){var W=X[1].replace(/\\\\/g,\"\");if(!Z&&I.attrMap[W]){X[1]=I.attrMap[W]}if(X[2]===\"~=\"){X[4]=\" \"+X[4]+\" \"}return X},PSEUDO:function(X,U,V,T,Y){if(X[1]===\"not\"){if(X[3].match(R).length>1||/^\\w/.test(X[3])){X[3]=F(X[3],null,null,U)}else{var W=F.filter(X[3],U,V,true^Y);if(!V){T.push.apply(T,W)}return false}}else{if(I.match.POS.test(X[0])||I.match.CHILD.test(X[0])){return true}}return X},POS:function(T){T.unshift(true);return T}},filters:{enabled:function(T){return T.disabled===false&&T.type!==\"hidden\"},disabled:function(T){return T.disabled===true},checked:function(T){return T.checked===true},selected:function(T){T.parentNode.selectedIndex;return T.selected===true},parent:function(T){return !!T.firstChild},empty:function(T){return !T.firstChild},has:function(V,U,T){return !!F(T[3],V).length},header:function(T){return/h\\d/i.test(T.nodeName)},text:function(T){return\"text\"===T.type},radio:function(T){return\"radio\"===T.type},checkbox:function(T){return\"checkbox\"===T.type},file:function(T){return\"file\"===T.type},password:function(T){return\"password\"===T.type},submit:function(T){return\"submit\"===T.type},image:function(T){return\"image\"===T.type},reset:function(T){return\"reset\"===T.type},button:function(T){return\"button\"===T.type||T.nodeName.toUpperCase()===\"BUTTON\"},input:function(T){return/input|select|textarea|button/i.test(T.nodeName)}},setFilters:{first:function(U,T){return T===0},last:function(V,U,T,W){return U===W.length-1},even:function(U,T){return T%2===0},odd:function(U,T){return T%2===1},lt:function(V,U,T){return U<T[3]-0},gt:function(V,U,T){return U>T[3]-0},nth:function(V,U,T){return T[3]-0==U},eq:function(V,U,T){return T[3]-0==U}},filter:{PSEUDO:function(Z,V,W,aa){var U=V[1],X=I.filters[U];if(X){return X(Z,W,V,aa)}else{if(U===\"contains\"){return(Z.textContent||Z.innerText||\"\").indexOf(V[3])>=0}else{if(U===\"not\"){var Y=V[3];for(var W=0,T=Y.length;W<T;W++){if(Y[W]===Z){return false}}return true}}}},CHILD:function(T,W){var Z=W[1],U=T;switch(Z){case\"only\":case\"first\":while(U=U.previousSibling){if(U.nodeType===1){return false}}if(Z==\"first\"){return true}U=T;case\"last\":while(U=U.nextSibling){if(U.nodeType===1){return false}}return true;case\"nth\":var V=W[2],ac=W[3];if(V==1&&ac==0){return true}var Y=W[0],ab=T.parentNode;if(ab&&(ab.sizcache!==Y||!T.nodeIndex)){var X=0;for(U=ab.firstChild;U;U=U.nextSibling){if(U.nodeType===1){U.nodeIndex=++X}}ab.sizcache=Y}var aa=T.nodeIndex-ac;if(V==0){return aa==0}else{return(aa%V==0&&aa/V>=0)}}},ID:function(U,T){return U.nodeType===1&&U.getAttribute(\"id\")===T},TAG:function(U,T){return(T===\"*\"&&U.nodeType===1)||U.nodeName===T},CLASS:function(U,T){return(\" \"+(U.className||U.getAttribute(\"class\"))+\" \").indexOf(T)>-1},ATTR:function(Y,W){var V=W[1],T=I.attrHandle[V]?I.attrHandle[V](Y):Y[V]!=null?Y[V]:Y.getAttribute(V),Z=T+\"\",X=W[2],U=W[4];return T==null?X===\"!=\":X===\"=\"?Z===U:X===\"*=\"?Z.indexOf(U)>=0:X===\"~=\"?(\" \"+Z+\" \").indexOf(U)>=0:!U?Z&&T!==false:X===\"!=\"?Z!=U:X===\"^=\"?Z.indexOf(U)===0:X===\"$=\"?Z.substr(Z.length-U.length)===U:X===\"|=\"?Z===U||Z.substr(0,U.length+1)===U+\"-\":false},POS:function(X,U,V,Y){var T=U[2],W=I.setFilters[T];if(W){return W(X,V,U,Y)}}}};var M=I.match.POS;for(var O in I.match){I.match[O]=RegExp(I.match[O].source+/(?![^\\[]*\\])(?![^\\(]*\\))/.source)}var E=function(U,T){U=Array.prototype.slice.call(U);if(T){T.push.apply(T,U);return T}return U};try{Array.prototype.slice.call(document.documentElement.childNodes)}catch(N){E=function(X,W){var U=W||[];if(H.call(X)===\"[object Array]\"){Array.prototype.push.apply(U,X)}else{if(typeof X.length===\"number\"){for(var V=0,T=X.length;V<T;V++){U.push(X[V])}}else{for(var V=0;X[V];V++){U.push(X[V])}}}return U}}var G;if(document.documentElement.compareDocumentPosition){G=function(U,T){var V=U.compareDocumentPosition(T)&4?-1:U===T?0:1;if(V===0){hasDuplicate=true}return V}}else{if(\"sourceIndex\" in document.documentElement){G=function(U,T){var V=U.sourceIndex-T.sourceIndex;if(V===0){hasDuplicate=true}return V}}else{if(document.createRange){G=function(W,U){var V=W.ownerDocument.createRange(),T=U.ownerDocument.createRange();V.selectNode(W);V.collapse(true);T.selectNode(U);T.collapse(true);var X=V.compareBoundaryPoints(Range.START_TO_END,T);if(X===0){hasDuplicate=true}return X}}}}(function(){var U=document.createElement(\"form\"),V=\"script\"+(new Date).getTime();U.innerHTML=\"<input name='\"+V+\"'/>\";var T=document.documentElement;T.insertBefore(U,T.firstChild);if(!!document.getElementById(V)){I.find.ID=function(X,Y,Z){if(typeof Y.getElementById!==\"undefined\"&&!Z){var W=Y.getElementById(X[1]);return W?W.id===X[1]||typeof W.getAttributeNode!==\"undefined\"&&W.getAttributeNode(\"id\").nodeValue===X[1]?[W]:g:[]}};I.filter.ID=function(Y,W){var X=typeof Y.getAttributeNode!==\"undefined\"&&Y.getAttributeNode(\"id\");return Y.nodeType===1&&X&&X.nodeValue===W}}T.removeChild(U)})();(function(){var T=document.createElement(\"div\");T.appendChild(document.createComment(\"\"));if(T.getElementsByTagName(\"*\").length>0){I.find.TAG=function(U,Y){var X=Y.getElementsByTagName(U[1]);if(U[1]===\"*\"){var W=[];for(var V=0;X[V];V++){if(X[V].nodeType===1){W.push(X[V])}}X=W}return X}}T.innerHTML=\"<a href='#'></a>\";if(T.firstChild&&typeof T.firstChild.getAttribute!==\"undefined\"&&T.firstChild.getAttribute(\"href\")!==\"#\"){I.attrHandle.href=function(U){return U.getAttribute(\"href\",2)}}})();if(document.querySelectorAll){(function(){var T=F,U=document.createElement(\"div\");U.innerHTML=\"<p class='TEST'></p>\";if(U.querySelectorAll&&U.querySelectorAll(\".TEST\").length===0){return}F=function(Y,X,V,W){X=X||document;if(!W&&X.nodeType===9&&!Q(X)){try{return E(X.querySelectorAll(Y),V)}catch(Z){}}return T(Y,X,V,W)};F.find=T.find;F.filter=T.filter;F.selectors=T.selectors;F.matches=T.matches})()}if(document.getElementsByClassName&&document.documentElement.getElementsByClassName){(function(){var T=document.createElement(\"div\");T.innerHTML=\"<div class='test e'></div><div class='test'></div>\";if(T.getElementsByClassName(\"e\").length===0){return}T.lastChild.className=\"e\";if(T.getElementsByClassName(\"e\").length===1){return}I.order.splice(1,0,\"CLASS\");I.find.CLASS=function(U,V,W){if(typeof V.getElementsByClassName!==\"undefined\"&&!W){return V.getElementsByClassName(U[1])}}})()}function P(U,Z,Y,ad,aa,ac){var ab=U==\"previousSibling\"&&!ac;for(var W=0,V=ad.length;W<V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1&&!ac){T.sizcache=Y;T.sizset=W}if(T.nodeName===Z){X=T;break}T=T[U]}ad[W]=X}}}function S(U,Z,Y,ad,aa,ac){var ab=U==\"previousSibling\"&&!ac;for(var W=0,V=ad.length;W<V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1){if(!ac){T.sizcache=Y;T.sizset=W}if(typeof Z!==\"string\"){if(T===Z){X=true;break}}else{if(F.filter(Z,[T]).length>0){X=T;break}}}T=T[U]}ad[W]=X}}}var K=document.compareDocumentPosition?function(U,T){return U.compareDocumentPosition(T)&16}:function(U,T){return U!==T&&(U.contains?U.contains(T):true)};var Q=function(T){return T.nodeType===9&&T.documentElement.nodeName!==\"HTML\"||!!T.ownerDocument&&Q(T.ownerDocument)};var J=function(T,aa){var W=[],X=\"\",Y,V=aa.nodeType?[aa]:aa;while((Y=I.match.PSEUDO.exec(T))){X+=Y[0];T=T.replace(I.match.PSEUDO,\"\")}T=I.relative[T]?T+\"*\":T;for(var Z=0,U=V.length;Z<U;Z++){F(T,V[Z],W)}return F.filter(X,W)};o.find=F;o.filter=F.filter;o.expr=F.selectors;o.expr[\":\"]=o.expr.filters;F.selectors.filters.hidden=function(T){return T.offsetWidth===0||T.offsetHeight===0};F.selectors.filters.visible=function(T){return T.offsetWidth>0||T.offsetHeight>0};F.selectors.filters.animated=function(T){return o.grep(o.timers,function(U){return T===U.elem}).length};o.multiFilter=function(V,T,U){if(U){V=\":not(\"+V+\")\"}return F.matches(V,T)};o.dir=function(V,U){var T=[],W=V[U];while(W&&W!=document){if(W.nodeType==1){T.push(W)}W=W[U]}return T};o.nth=function(X,T,V,W){T=T||1;var U=0;for(;X;X=X[V]){if(X.nodeType==1&&++U==T){break}}return X};o.sibling=function(V,U){var T=[];for(;V;V=V.nextSibling){if(V.nodeType==1&&V!=U){T.push(V)}}return T};return;l.Sizzle=F})();o.event={add:function(I,F,H,K){if(I.nodeType==3||I.nodeType==8){return}if(I.setInterval&&I!=l){I=l}if(!H.guid){H.guid=this.guid++}if(K!==g){var G=H;H=this.proxy(G);H.data=K}var E=o.data(I,\"events\")||o.data(I,\"events\",{}),J=o.data(I,\"handle\")||o.data(I,\"handle\",function(){return typeof o!==\"undefined\"&&!o.event.triggered?o.event.handle.apply(arguments.callee.elem,arguments):g});J.elem=I;o.each(F.split(/\\s+/),function(M,N){var O=N.split(\".\");N=O.shift();H.type=O.slice().sort().join(\".\");var L=E[N];if(o.event.specialAll[N]){o.event.specialAll[N].setup.call(I,K,O)}if(!L){L=E[N]={};if(!o.event.special[N]||o.event.special[N].setup.call(I,K,O)===false){if(I.addEventListener){I.addEventListener(N,J,false)}else{if(I.attachEvent){I.attachEvent(\"on\"+N,J)}}}}L[H.guid]=H;o.event.global[N]=true});I=null},guid:1,global:{},remove:function(K,H,J){if(K.nodeType==3||K.nodeType==8){return}var G=o.data(K,\"events\"),F,E;if(G){if(H===g||(typeof H===\"string\"&&H.charAt(0)==\".\")){for(var I in G){this.remove(K,I+(H||\"\"))}}else{if(H.type){J=H.handler;H=H.type}o.each(H.split(/\\s+/),function(M,O){var Q=O.split(\".\");O=Q.shift();var N=RegExp(\"(^|\\\\.)\"+Q.slice().sort().join(\".*\\\\.\")+\"(\\\\.|$)\");if(G[O]){if(J){delete G[O][J.guid]}else{for(var P in G[O]){if(N.test(G[O][P].type)){delete G[O][P]}}}if(o.event.specialAll[O]){o.event.specialAll[O].teardown.call(K,Q)}for(F in G[O]){break}if(!F){if(!o.event.special[O]||o.event.special[O].teardown.call(K,Q)===false){if(K.removeEventListener){K.removeEventListener(O,o.data(K,\"handle\"),false)}else{if(K.detachEvent){K.detachEvent(\"on\"+O,o.data(K,\"handle\"))}}}F=null;delete G[O]}}})}for(F in G){break}if(!F){var L=o.data(K,\"handle\");if(L){L.elem=null}o.removeData(K,\"events\");o.removeData(K,\"handle\")}}},trigger:function(I,K,H,E){var G=I.type||I;if(!E){I=typeof I===\"object\"?I[h]?I:o.extend(o.Event(G),I):o.Event(G);if(G.indexOf(\"!\")>=0){I.type=G=G.slice(0,-1);I.exclusive=true}if(!H){I.stopPropagation();if(this.global[G]){o.each(o.cache,function(){if(this.events&&this.events[G]){o.event.trigger(I,K,this.handle.elem)}})}}if(!H||H.nodeType==3||H.nodeType==8){return g}I.result=g;I.target=H;K=o.makeArray(K);K.unshift(I)}I.currentTarget=H;var J=o.data(H,\"handle\");if(J){J.apply(H,K)}if((!H[G]||(o.nodeName(H,\"a\")&&G==\"click\"))&&H[\"on\"+G]&&H[\"on\"+G].apply(H,K)===false){I.result=false}if(!E&&H[G]&&!I.isDefaultPrevented()&&!(o.nodeName(H,\"a\")&&G==\"click\")){this.triggered=true;try{H[G]()}catch(L){}}this.triggered=false;if(!I.isPropagationStopped()){var F=H.parentNode||H.ownerDocument;if(F){o.event.trigger(I,K,F,true)}}},handle:function(K){var J,E;K=arguments[0]=o.event.fix(K||l.event);K.currentTarget=this;var L=K.type.split(\".\");K.type=L.shift();J=!L.length&&!K.exclusive;var I=RegExp(\"(^|\\\\.)\"+L.slice().sort().join(\".*\\\\.\")+\"(\\\\.|$)\");E=(o.data(this,\"events\")||{})[K.type];for(var G in E){var H=E[G];if(J||I.test(H.type)){K.handler=H;K.data=H.data;var F=H.apply(this,arguments);if(F!==g){K.result=F;if(F===false){K.preventDefault();K.stopPropagation()}}if(K.isImmediatePropagationStopped()){break}}}},props:\"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which\".split(\" \"),fix:function(H){if(H[h]){return H}var F=H;H=o.Event(F);for(var G=this.props.length,J;G;){J=this.props[--G];H[J]=F[J]}if(!H.target){H.target=H.srcElement||document}if(H.target.nodeType==3){H.target=H.target.parentNode}if(!H.relatedTarget&&H.fromElement){H.relatedTarget=H.fromElement==H.target?H.toElement:H.fromElement}if(H.pageX==null&&H.clientX!=null){var I=document.documentElement,E=document.body;H.pageX=H.clientX+(I&&I.scrollLeft||E&&E.scrollLeft||0)-(I.clientLeft||0);H.pageY=H.clientY+(I&&I.scrollTop||E&&E.scrollTop||0)-(I.clientTop||0)}if(!H.which&&((H.charCode||H.charCode===0)?H.charCode:H.keyCode)){H.which=H.charCode||H.keyCode}if(!H.metaKey&&H.ctrlKey){H.metaKey=H.ctrlKey}if(!H.which&&H.button){H.which=(H.button&1?1:(H.button&2?3:(H.button&4?2:0)))}return H},proxy:function(F,E){E=E||function(){return F.apply(this,arguments)};E.guid=F.guid=F.guid||E.guid||this.guid++;return E},special:{ready:{setup:B,teardown:function(){}}},specialAll:{live:{setup:function(E,F){o.event.add(this,F[0],c)},teardown:function(G){if(G.length){var E=0,F=RegExp(\"(^|\\\\.)\"+G[0]+\"(\\\\.|$)\");o.each((o.data(this,\"events\").live||{}),function(){if(F.test(this.type)){E++}});if(E<1){o.event.remove(this,G[0],c)}}}}}};o.Event=function(E){if(!this.preventDefault){return new o.Event(E)}if(E&&E.type){this.originalEvent=E;this.type=E.type}else{this.type=E}this.timeStamp=e();this[h]=true};function k(){return false}function u(){return true}o.Event.prototype={preventDefault:function(){this.isDefaultPrevented=u;var E=this.originalEvent;if(!E){return}if(E.preventDefault){E.preventDefault()}E.returnValue=false},stopPropagation:function(){this.isPropagationStopped=u;var E=this.originalEvent;if(!E){return}if(E.stopPropagation){E.stopPropagation()}E.cancelBubble=true},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=u;this.stopPropagation()},isDefaultPrevented:k,isPropagationStopped:k,isImmediatePropagationStopped:k};var a=function(F){var E=F.relatedTarget;while(E&&E!=this){try{E=E.parentNode}catch(G){E=this}}if(E!=this){F.type=F.data;o.event.handle.apply(this,arguments)}};o.each({mouseover:\"mouseenter\",mouseout:\"mouseleave\"},function(F,E){o.event.special[E]={setup:function(){o.event.add(this,F,a,E)},teardown:function(){o.event.remove(this,F,a)}}});o.fn.extend({bind:function(F,G,E){return F==\"unload\"?this.one(F,G,E):this.each(function(){o.event.add(this,F,E||G,E&&G)})},one:function(G,H,F){var E=o.event.proxy(F||H,function(I){o(this).unbind(I,E);return(F||H).apply(this,arguments)});return this.each(function(){o.event.add(this,G,E,F&&H)})},unbind:function(F,E){return this.each(function(){o.event.remove(this,F,E)})},trigger:function(E,F){return this.each(function(){o.event.trigger(E,F,this)})},triggerHandler:function(E,G){if(this[0]){var F=o.Event(E);F.preventDefault();F.stopPropagation();o.event.trigger(F,G,this[0]);return F.result}},toggle:function(G){var E=arguments,F=1;while(F<E.length){o.event.proxy(G,E[F++])}return this.click(o.event.proxy(G,function(H){this.lastToggle=(this.lastToggle||0)%F;H.preventDefault();return E[this.lastToggle++].apply(this,arguments)||false}))},hover:function(E,F){return this.mouseenter(E).mouseleave(F)},ready:function(E){B();if(o.isReady){E.call(document,o)}else{o.readyList.push(E)}return this},live:function(G,F){var E=o.event.proxy(F);E.guid+=this.selector+G;o(document).bind(i(G,this.selector),this.selector,E);return this},die:function(F,E){o(document).unbind(i(F,this.selector),E?{guid:E.guid+this.selector+F}:null);return this}});function c(H){var E=RegExp(\"(^|\\\\.)\"+H.type+\"(\\\\.|$)\"),G=true,F=[];o.each(o.data(this,\"events\").live||[],function(I,J){if(E.test(J.type)){var K=o(H.target).closest(J.data)[0];if(K){F.push({elem:K,fn:J})}}});F.sort(function(J,I){return o.data(J.elem,\"closest\")-o.data(I.elem,\"closest\")});o.each(F,function(){if(this.fn.call(this.elem,H,this.fn.data)===false){return(G=false)}});return G}function i(F,E){return[\"live\",F,E.replace(/\\./g,\"`\").replace(/ /g,\"|\")].join(\".\")}o.extend({isReady:false,readyList:[],ready:function(){if(!o.isReady){o.isReady=true;if(o.readyList){o.each(o.readyList,function(){this.call(document,o)});o.readyList=null}o(document).triggerHandler(\"ready\")}}});var x=false;function B(){if(x){return}x=true;if(document.addEventListener){document.addEventListener(\"DOMContentLoaded\",function(){document.removeEventListener(\"DOMContentLoaded\",arguments.callee,false);o.ready()},false)}else{if(document.attachEvent){document.attachEvent(\"onreadystatechange\",function(){if(document.readyState===\"complete\"){document.detachEvent(\"onreadystatechange\",arguments.callee);o.ready()}});if(document.documentElement.doScroll&&l==l.top){(function(){if(o.isReady){return}try{document.documentElement.doScroll(\"left\")}catch(E){setTimeout(arguments.callee,0);return}o.ready()})()}}}o.event.add(l,\"load\",o.ready)}o.each((\"blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error\").split(\",\"),function(F,E){o.fn[E]=function(G){return G?this.bind(E,G):this.trigger(E)}});o(l).bind(\"unload\",function(){for(var E in o.cache){if(E!=1&&o.cache[E].handle){o.event.remove(o.cache[E].handle.elem)}}});(function(){o.support={};var F=document.documentElement,G=document.createElement(\"script\"),K=document.createElement(\"div\"),J=\"script\"+(new Date).getTime();K.style.display=\"none\";K.innerHTML='   <link/><table></table><a href=\"/a\" style=\"color:red;float:left;opacity:.5;\">a</a><select><option>text</option></select><object><param/></object>';var H=K.getElementsByTagName(\"*\"),E=K.getElementsByTagName(\"a\")[0];if(!H||!H.length||!E){return}o.support={leadingWhitespace:K.firstChild.nodeType==3,tbody:!K.getElementsByTagName(\"tbody\").length,objectAll:!!K.getElementsByTagName(\"object\")[0].getElementsByTagName(\"*\").length,htmlSerialize:!!K.getElementsByTagName(\"link\").length,style:/red/.test(E.getAttribute(\"style\")),hrefNormalized:E.getAttribute(\"href\")===\"/a\",opacity:E.style.opacity===\"0.5\",cssFloat:!!E.style.cssFloat,scriptEval:false,noCloneEvent:true,boxModel:null};G.type=\"text/javascript\";try{G.appendChild(document.createTextNode(\"window.\"+J+\"=1;\"))}catch(I){}F.insertBefore(G,F.firstChild);if(l[J]){o.support.scriptEval=true;delete l[J]}F.removeChild(G);if(K.attachEvent&&K.fireEvent){K.attachEvent(\"onclick\",function(){o.support.noCloneEvent=false;K.detachEvent(\"onclick\",arguments.callee)});K.cloneNode(true).fireEvent(\"onclick\")}o(function(){var L=document.createElement(\"div\");L.style.width=L.style.paddingLeft=\"1px\";document.body.appendChild(L);o.boxModel=o.support.boxModel=L.offsetWidth===2;document.body.removeChild(L).style.display=\"none\"})})();var w=o.support.cssFloat?\"cssFloat\":\"styleFloat\";o.props={\"for\":\"htmlFor\",\"class\":\"className\",\"float\":w,cssFloat:w,styleFloat:w,readonly:\"readOnly\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",rowspan:\"rowSpan\",tabindex:\"tabIndex\"};o.fn.extend({_load:o.fn.load,load:function(G,J,K){if(typeof G!==\"string\"){return this._load(G)}var I=G.indexOf(\" \");if(I>=0){var E=G.slice(I,G.length);G=G.slice(0,I)}var H=\"GET\";if(J){if(o.isFunction(J)){K=J;J=null}else{if(typeof J===\"object\"){J=o.param(J);H=\"POST\"}}}var F=this;o.ajax({url:G,type:H,dataType:\"html\",data:J,complete:function(M,L){if(L==\"success\"||L==\"notmodified\"){F.html(E?o(\"<div/>\").append(M.responseText.replace(/<script(.|\\s)*?\\/script>/g,\"\")).find(E):M.responseText)}if(K){F.each(K,[M.responseText,L,M])}}});return this},serialize:function(){return o.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?o.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.nodeName)||/text|hidden|password|search/i.test(this.type))}).map(function(E,F){var G=o(this).val();return G==null?null:o.isArray(G)?o.map(G,function(I,H){return{name:F.name,value:I}}):{name:F.name,value:G}}).get()}});o.each(\"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\"),function(E,F){o.fn[F]=function(G){return this.bind(F,G)}});var r=e();o.extend({get:function(E,G,H,F){if(o.isFunction(G)){H=G;G=null}return o.ajax({type:\"GET\",url:E,data:G,success:H,dataType:F})},getScript:function(E,F){return o.get(E,null,F,\"script\")},getJSON:function(E,F,G){return o.get(E,F,G,\"json\")},post:function(E,G,H,F){if(o.isFunction(G)){H=G;G={}}return o.ajax({type:\"POST\",url:E,data:G,success:H,dataType:F})},ajaxSetup:function(E){o.extend(o.ajaxSettings,E)},ajaxSettings:{url:location.href,global:true,type:\"GET\",contentType:\"application/x-www-form-urlencoded\",processData:true,async:true,xhr:function(){return l.ActiveXObject?new ActiveXObject(\"Microsoft.XMLHTTP\"):new XMLHttpRequest()},accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",script:\"text/javascript, application/javascript\",json:\"application/json, text/javascript\",text:\"text/plain\",_default:\"*/*\"}},lastModified:{},ajax:function(M){M=o.extend(true,M,o.extend(true,{},o.ajaxSettings,M));var W,F=/=\\?(&|$)/g,R,V,G=M.type.toUpperCase();if(M.data&&M.processData&&typeof M.data!==\"string\"){M.data=o.param(M.data)}if(M.dataType==\"jsonp\"){if(G==\"GET\"){if(!M.url.match(F)){M.url+=(M.url.match(/\\?/)?\"&\":\"?\")+(M.jsonp||\"callback\")+\"=?\"}}else{if(!M.data||!M.data.match(F)){M.data=(M.data?M.data+\"&\":\"\")+(M.jsonp||\"callback\")+\"=?\"}}M.dataType=\"json\"}if(M.dataType==\"json\"&&(M.data&&M.data.match(F)||M.url.match(F))){W=\"jsonp\"+r++;if(M.data){M.data=(M.data+\"\").replace(F,\"=\"+W+\"$1\")}M.url=M.url.replace(F,\"=\"+W+\"$1\");M.dataType=\"script\";l[W]=function(X){V=X;I();L();l[W]=g;try{delete l[W]}catch(Y){}if(H){H.removeChild(T)}}}if(M.dataType==\"script\"&&M.cache==null){M.cache=false}if(M.cache===false&&G==\"GET\"){var E=e();var U=M.url.replace(/(\\?|&)_=.*?(&|$)/,\"$1_=\"+E+\"$2\");M.url=U+((U==M.url)?(M.url.match(/\\?/)?\"&\":\"?\")+\"_=\"+E:\"\")}if(M.data&&G==\"GET\"){M.url+=(M.url.match(/\\?/)?\"&\":\"?\")+M.data;M.data=null}if(M.global&&!o.active++){o.event.trigger(\"ajaxStart\")}var Q=/^(\\w+:)?\\/\\/([^\\/?#]+)/.exec(M.url);if(M.dataType==\"script\"&&G==\"GET\"&&Q&&(Q[1]&&Q[1]!=location.protocol||Q[2]!=location.host)){var H=document.getElementsByTagName(\"head\")[0];var T=document.createElement(\"script\");T.src=M.url;if(M.scriptCharset){T.charset=M.scriptCharset}if(!W){var O=false;T.onload=T.onreadystatechange=function(){if(!O&&(!this.readyState||this.readyState==\"loaded\"||this.readyState==\"complete\")){O=true;I();L();T.onload=T.onreadystatechange=null;H.removeChild(T)}}}H.appendChild(T);return g}var K=false;var J=M.xhr();if(M.username){J.open(G,M.url,M.async,M.username,M.password)}else{J.open(G,M.url,M.async)}try{if(M.data){J.setRequestHeader(\"Content-Type\",M.contentType)}if(M.ifModified){J.setRequestHeader(\"If-Modified-Since\",o.lastModified[M.url]||\"Thu, 01 Jan 1970 00:00:00 GMT\")}J.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");J.setRequestHeader(\"Accept\",M.dataType&&M.accepts[M.dataType]?M.accepts[M.dataType]+\", */*\":M.accepts._default)}catch(S){}if(M.beforeSend&&M.beforeSend(J,M)===false){if(M.global&&!--o.active){o.event.trigger(\"ajaxStop\")}J.abort();return false}if(M.global){o.event.trigger(\"ajaxSend\",[J,M])}var N=function(X){if(J.readyState==0){if(P){clearInterval(P);P=null;if(M.global&&!--o.active){o.event.trigger(\"ajaxStop\")}}}else{if(!K&&J&&(J.readyState==4||X==\"timeout\")){K=true;if(P){clearInterval(P);P=null}R=X==\"timeout\"?\"timeout\":!o.httpSuccess(J)?\"error\":M.ifModified&&o.httpNotModified(J,M.url)?\"notmodified\":\"success\";if(R==\"success\"){try{V=o.httpData(J,M.dataType,M)}catch(Z){R=\"parsererror\"}}if(R==\"success\"){var Y;try{Y=J.getResponseHeader(\"Last-Modified\")}catch(Z){}if(M.ifModified&&Y){o.lastModified[M.url]=Y}if(!W){I()}}else{o.handleError(M,J,R)}L();if(X){J.abort()}if(M.async){J=null}}}};if(M.async){var P=setInterval(N,13);if(M.timeout>0){setTimeout(function(){if(J&&!K){N(\"timeout\")}},M.timeout)}}try{J.send(M.data)}catch(S){o.handleError(M,J,null,S)}if(!M.async){N()}function I(){if(M.success){M.success(V,R)}if(M.global){o.event.trigger(\"ajaxSuccess\",[J,M])}}function L(){if(M.complete){M.complete(J,R)}if(M.global){o.event.trigger(\"ajaxComplete\",[J,M])}if(M.global&&!--o.active){o.event.trigger(\"ajaxStop\")}}return J},handleError:function(F,H,E,G){if(F.error){F.error(H,E,G)}if(F.global){o.event.trigger(\"ajaxError\",[H,F,G])}},active:0,httpSuccess:function(F){try{return !F.status&&location.protocol==\"file:\"||(F.status>=200&&F.status<300)||F.status==304||F.status==1223}catch(E){}return false},httpNotModified:function(G,E){try{var H=G.getResponseHeader(\"Last-Modified\");return G.status==304||H==o.lastModified[E]}catch(F){}return false},httpData:function(J,H,G){var F=J.getResponseHeader(\"content-type\"),E=H==\"xml\"||!H&&F&&F.indexOf(\"xml\")>=0,I=E?J.responseXML:J.responseText;if(E&&I.documentElement.tagName==\"parsererror\"){throw\"parsererror\"}if(G&&G.dataFilter){I=G.dataFilter(I,H)}if(typeof I===\"string\"){if(H==\"script\"){o.globalEval(I)}if(H==\"json\"){I=l[\"eval\"](\"(\"+I+\")\")}}return I},param:function(E){var G=[];function H(I,J){G[G.length]=encodeURIComponent(I)+\"=\"+encodeURIComponent(J)}if(o.isArray(E)||E.jquery){o.each(E,function(){H(this.name,this.value)})}else{for(var F in E){if(o.isArray(E[F])){o.each(E[F],function(){H(F,this)})}else{H(F,o.isFunction(E[F])?E[F]():E[F])}}}return G.join(\"&\").replace(/%20/g,\"+\")}});var m={},n,d=[[\"height\",\"marginTop\",\"marginBottom\",\"paddingTop\",\"paddingBottom\"],[\"width\",\"marginLeft\",\"marginRight\",\"paddingLeft\",\"paddingRight\"],[\"opacity\"]];function t(F,E){var G={};o.each(d.concat.apply([],d.slice(0,E)),function(){G[this]=F});return G}o.fn.extend({show:function(J,L){if(J){return this.animate(t(\"show\",3),J,L)}else{for(var H=0,F=this.length;H<F;H++){var E=o.data(this[H],\"olddisplay\");this[H].style.display=E||\"\";if(o.css(this[H],\"display\")===\"none\"){var G=this[H].tagName,K;if(m[G]){K=m[G]}else{var I=o(\"<\"+G+\" />\").appendTo(\"body\");K=I.css(\"display\");if(K===\"none\"){K=\"block\"}I.remove();m[G]=K}o.data(this[H],\"olddisplay\",K)}}for(var H=0,F=this.length;H<F;H++){this[H].style.display=o.data(this[H],\"olddisplay\")||\"\"}return this}},hide:function(H,I){if(H){return this.animate(t(\"hide\",3),H,I)}else{for(var G=0,F=this.length;G<F;G++){var E=o.data(this[G],\"olddisplay\");if(!E&&E!==\"none\"){o.data(this[G],\"olddisplay\",o.css(this[G],\"display\"))}}for(var G=0,F=this.length;G<F;G++){this[G].style.display=\"none\"}return this}},_toggle:o.fn.toggle,toggle:function(G,F){var E=typeof G===\"boolean\";return o.isFunction(G)&&o.isFunction(F)?this._toggle.apply(this,arguments):G==null||E?this.each(function(){var H=E?G:o(this).is(\":hidden\");o(this)[H?\"show\":\"hide\"]()}):this.animate(t(\"toggle\",3),G,F)},fadeTo:function(E,G,F){return this.animate({opacity:G},E,F)},animate:function(I,F,H,G){var E=o.speed(F,H,G);return this[E.queue===false?\"each\":\"queue\"](function(){var K=o.extend({},E),M,L=this.nodeType==1&&o(this).is(\":hidden\"),J=this;for(M in I){if(I[M]==\"hide\"&&L||I[M]==\"show\"&&!L){return K.complete.call(this)}if((M==\"height\"||M==\"width\")&&this.style){K.display=o.css(this,\"display\");K.overflow=this.style.overflow}}if(K.overflow!=null){this.style.overflow=\"hidden\"}K.curAnim=o.extend({},I);o.each(I,function(O,S){var R=new o.fx(J,K,O);if(/toggle|show|hide/.test(S)){R[S==\"toggle\"?L?\"show\":\"hide\":S](I)}else{var Q=S.toString().match(/^([+-]=)?([\\d+-.]+)(.*)$/),T=R.cur(true)||0;if(Q){var N=parseFloat(Q[2]),P=Q[3]||\"px\";if(P!=\"px\"){J.style[O]=(N||1)+P;T=((N||1)/R.cur(true))*T;J.style[O]=T+P}if(Q[1]){N=((Q[1]==\"-=\"?-1:1)*N)+T}R.custom(T,N,P)}else{R.custom(T,S,\"\")}}});return true})},stop:function(F,E){var G=o.timers;if(F){this.queue([])}this.each(function(){for(var H=G.length-1;H>=0;H--){if(G[H].elem==this){if(E){G[H](true)}G.splice(H,1)}}});if(!E){this.dequeue()}return this}});o.each({slideDown:t(\"show\",1),slideUp:t(\"hide\",1),slideToggle:t(\"toggle\",1),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"}},function(E,F){o.fn[E]=function(G,H){return this.animate(F,G,H)}});o.extend({speed:function(G,H,F){var E=typeof G===\"object\"?G:{complete:F||!F&&H||o.isFunction(G)&&G,duration:G,easing:F&&H||H&&!o.isFunction(H)&&H};E.duration=o.fx.off?0:typeof E.duration===\"number\"?E.duration:o.fx.speeds[E.duration]||o.fx.speeds._default;E.old=E.complete;E.complete=function(){if(E.queue!==false){o(this).dequeue()}if(o.isFunction(E.old)){E.old.call(this)}};return E},easing:{linear:function(G,H,E,F){return E+F*G},swing:function(G,H,E,F){return((-Math.cos(G*Math.PI)/2)+0.5)*F+E}},timers:[],fx:function(F,E,G){this.options=E;this.elem=F;this.prop=G;if(!E.orig){E.orig={}}}});o.fx.prototype={update:function(){if(this.options.step){this.options.step.call(this.elem,this.now,this)}(o.fx.step[this.prop]||o.fx.step._default)(this);if((this.prop==\"height\"||this.prop==\"width\")&&this.elem.style){this.elem.style.display=\"block\"}},cur:function(F){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null)){return this.elem[this.prop]}var E=parseFloat(o.css(this.elem,this.prop,F));return E&&E>-10000?E:parseFloat(o.curCSS(this.elem,this.prop))||0},custom:function(I,H,G){this.startTime=e();this.start=I;this.end=H;this.unit=G||this.unit||\"px\";this.now=this.start;this.pos=this.state=0;var E=this;function F(J){return E.step(J)}F.elem=this.elem;if(F()&&o.timers.push(F)&&!n){n=setInterval(function(){var K=o.timers;for(var J=0;J<K.length;J++){if(!K[J]()){K.splice(J--,1)}}if(!K.length){clearInterval(n);n=g}},13)}},show:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.show=true;this.custom(this.prop==\"width\"||this.prop==\"height\"?1:0,this.cur());o(this.elem).show()},hide:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(H){var G=e();if(H||G>=this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;var E=true;for(var F in this.options.curAnim){if(this.options.curAnim[F]!==true){E=false}}if(E){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;this.elem.style.display=this.options.display;if(o.css(this.elem,\"display\")==\"none\"){this.elem.style.display=\"block\"}}if(this.options.hide){o(this.elem).hide()}if(this.options.hide||this.options.show){for(var I in this.options.curAnim){o.attr(this.elem.style,I,this.options.orig[I])}}this.options.complete.call(this.elem)}return false}else{var J=G-this.startTime;this.state=J/this.options.duration;this.pos=o.easing[this.options.easing||(o.easing.swing?\"swing\":\"linear\")](this.state,J,0,1,this.options.duration);this.now=this.start+((this.end-this.start)*this.pos);this.update()}return true}};o.extend(o.fx,{speeds:{slow:600,fast:200,_default:400},step:{opacity:function(E){o.attr(E.elem.style,\"opacity\",E.now)},_default:function(E){if(E.elem.style&&E.elem.style[E.prop]!=null){E.elem.style[E.prop]=E.now+E.unit}else{E.elem[E.prop]=E.now}}}});if(document.documentElement.getBoundingClientRect){o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}var G=this[0].getBoundingClientRect(),J=this[0].ownerDocument,F=J.body,E=J.documentElement,L=E.clientTop||F.clientTop||0,K=E.clientLeft||F.clientLeft||0,I=G.top+(self.pageYOffset||o.boxModel&&E.scrollTop||F.scrollTop)-L,H=G.left+(self.pageXOffset||o.boxModel&&E.scrollLeft||F.scrollLeft)-K;return{top:I,left:H}}}else{o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}o.offset.initialized||o.offset.initialize();var J=this[0],G=J.offsetParent,F=J,O=J.ownerDocument,M,H=O.documentElement,K=O.body,L=O.defaultView,E=L.getComputedStyle(J,null),N=J.offsetTop,I=J.offsetLeft;while((J=J.parentNode)&&J!==K&&J!==H){M=L.getComputedStyle(J,null);N-=J.scrollTop,I-=J.scrollLeft;if(J===G){N+=J.offsetTop,I+=J.offsetLeft;if(o.offset.doesNotAddBorder&&!(o.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(J.tagName))){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}F=G,G=J.offsetParent}if(o.offset.subtractsBorderForOverflowNotVisible&&M.overflow!==\"visible\"){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}E=M}if(E.position===\"relative\"||E.position===\"static\"){N+=K.offsetTop,I+=K.offsetLeft}if(E.position===\"fixed\"){N+=Math.max(H.scrollTop,K.scrollTop),I+=Math.max(H.scrollLeft,K.scrollLeft)}return{top:N,left:I}}}o.offset={initialize:function(){if(this.initialized){return}var L=document.body,F=document.createElement(\"div\"),H,G,N,I,M,E,J=L.style.marginTop,K='<div style=\"position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;\"><div></div></div><table style=\"position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;\" cellpadding=\"0\" cellspacing=\"0\"><tr><td></td></tr></table>';M={position:\"absolute\",top:0,left:0,margin:0,border:0,width:\"1px\",height:\"1px\",visibility:\"hidden\"};for(E in M){F.style[E]=M[E]}F.innerHTML=K;L.insertBefore(F,L.firstChild);H=F.firstChild,G=H.firstChild,I=H.nextSibling.firstChild.firstChild;this.doesNotAddBorder=(G.offsetTop!==5);this.doesAddBorderForTableAndCells=(I.offsetTop===5);H.style.overflow=\"hidden\",H.style.position=\"relative\";this.subtractsBorderForOverflowNotVisible=(G.offsetTop===-5);L.style.marginTop=\"1px\";this.doesNotIncludeMarginInBodyOffset=(L.offsetTop===0);L.style.marginTop=J;L.removeChild(F);this.initialized=true},bodyOffset:function(E){o.offset.initialized||o.offset.initialize();var G=E.offsetTop,F=E.offsetLeft;if(o.offset.doesNotIncludeMarginInBodyOffset){G+=parseInt(o.curCSS(E,\"marginTop\",true),10)||0,F+=parseInt(o.curCSS(E,\"marginLeft\",true),10)||0}return{top:G,left:F}}};o.fn.extend({position:function(){var I=0,H=0,F;if(this[0]){var G=this.offsetParent(),J=this.offset(),E=/^body|html$/i.test(G[0].tagName)?{top:0,left:0}:G.offset();J.top-=j(this,\"marginTop\");J.left-=j(this,\"marginLeft\");E.top+=j(G,\"borderTopWidth\");E.left+=j(G,\"borderLeftWidth\");F={top:J.top-E.top,left:J.left-E.left}}return F},offsetParent:function(){var E=this[0].offsetParent||document.body;while(E&&(!/^body|html$/i.test(E.tagName)&&o.css(E,\"position\")==\"static\")){E=E.offsetParent}return o(E)}});o.each([\"Left\",\"Top\"],function(F,E){var G=\"scroll\"+E;o.fn[G]=function(H){if(!this[0]){return null}return H!==g?this.each(function(){this==l||this==document?l.scrollTo(!F?H:o(l).scrollLeft(),F?H:o(l).scrollTop()):this[G]=H}):this[0]==l||this[0]==document?self[F?\"pageYOffset\":\"pageXOffset\"]||o.boxModel&&document.documentElement[G]||document.body[G]:this[0][G]}});o.each([\"Height\",\"Width\"],function(I,G){var E=I?\"Left\":\"Top\",H=I?\"Right\":\"Bottom\",F=G.toLowerCase();o.fn[\"inner\"+G]=function(){return this[0]?o.css(this[0],F,false,\"padding\"):null};o.fn[\"outer\"+G]=function(K){return this[0]?o.css(this[0],F,false,K?\"margin\":\"border\"):null};var J=G.toLowerCase();o.fn[J]=function(K){return this[0]==l?document.compatMode==\"CSS1Compat\"&&document.documentElement[\"client\"+G]||document.body[\"client\"+G]:this[0]==document?Math.max(document.documentElement[\"client\"+G],document.body[\"scroll\"+G],document.documentElement[\"scroll\"+G],document.body[\"offset\"+G],document.documentElement[\"offset\"+G]):K===g?(this.length?o.css(this[0],J):null):this.css(J,typeof K===\"string\"?K:K+\"px\")}})})();\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\jslitmus.js:\n   35    // Detect OS\n   36    var oses = ['Windows','iPhone OS','(Intel |PPC )?Mac OS X','Linux'].join('|');\n   37:   var pOS = new RegExp('((' + oses + ') [^ \\);]*)').test(ua) ? RegExp.$1 : null;\n   38:   if (!pOS) pOS = new RegExp('((' + oses + ')[^ \\);]*)').test(ua) ? RegExp.$1 : null;\n   39  \n   40    // Detect browser\n   ..\n   42  \n   43    // Detect version\n   44:   var vre = new RegExp('(Version|' + pName + ')[ \\/]([^ ;]*)');\n   45    var pVersion = (pName && vre.test(ua)) ? RegExp.$2 : null;\n   46    var platform = (pOS && pName && pVersion) ? pName + ' '  + pVersion + ' on ' + pOS : 'unknown platform';\n   ..\n  134    */\n  135    var Test = function (name, f) {\n  136:     if (!f) throw new Error('Undefined test function');\n  137      if (!(/function[^\\(]*\\(([^,\\)]*)/).test(f.toString())) {\n  138:       throw new Error('\"' + name + '\" test: Test is not a valid Function object');\n  139      }\n  140      this.loopArg = RegExp.$1;\n  ...\n  146      /** Calibration tests for establishing iteration loop overhead */\n  147      CALIBRATIONS: [\n  148:       new Test('calibrating loop', function(count) {while (count--);}),\n  149:       new Test('calibrating function', jsl.F)\n  150      ],\n  151  \n  ...\n  222  \n  223          // Start the timer\n  224:         start = new Date();\n  225  \n  226          // Now for the money shot.  If this is a looping function ...\n  ...\n  234  \n  235          // Get time test took (in secs)\n  236:         this.time = Math.max(1,new Date() - start)/1000;\n  237  \n  238          // Store iteration count and per-operation time taken\n  ...\n  250            count *= pow;\n  251            if (count > this.MAX_COUNT) {\n  252:             throw new Error('Max count exceeded.  If this test uses a looping function, make sure the iteration loop is working properly.');\n  253            }\n  254          }\n  ...\n  498       */\n  499      renderTest: function(test) {\n  500:       // Make a new row if needed\n  501        if (!test._row) {\n  502          var trow = jsl.$('test_row_template');\n  ...\n  541  \n  542      /**\n  543:      * Create a new test\n  544       */\n  545      test: function(name, f) {\n  546        // Create the Test object\n  547:       var test = new Test(name, f);\n  548        JSLitmus._tests.push(test);\n  549  \n  ...\n  558        };\n  559  \n  560:       // Render the new test\n  561        this.renderTest(test);\n  562      },\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\qunit.js:\n   18  			stats: { all: 0, bad: 0 },\n   19  			moduleStats: { all: 0, bad: 0 },\n   20: 			started: +new Date,\n   21  			blocking: false,\n   22  			autorun: false,\n   ..\n  491  		tests = id(\"qunit-tests\"),\n  492  		html = ['Tests completed in ',\n  493: 		+new Date - config.started, ' milliseconds.<br/>',\n  494  		'<span class=\"bad\">', config.stats.all - config.stats.bad, '</span> tests of <span class=\"all\">', config.stats.all, '</span> passed, ', config.stats.bad,' failed.'].join('');\n  495  \n  ...\n  575  	saveGlobal();\n  576  \n  577: 	var newGlobals = diff( old, config.pollution );\n  578: 	if ( newGlobals.length > 0 ) {\n  579: 		ok( false, \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n  580  		config.expected++;\n  581  	}\n  ...\n  588  }\n  589  \n  590: // returns a new Array with the elements that are in a but not in b\n  591  function diff( a, b ) {\n  592  	var result = a.slice();\n  ...\n  674              return \"array\";\n  675  \n  676:         // consider: typeof new Date() === object\n  677          } else if (o instanceof Date) {\n  678              return \"date\";\n  ...\n  712          function useStrictEquality(b, a) {\n  713              if (b instanceof a.constructor || a instanceof b.constructor) {\n  714:                 // to catch short annotaion VS 'new' annotation of a declaration\n  715                  // e.g. var i = 1;\n  716:                 //      var j = new Number(1);\n  717                  return a == b;\n  718              } else {\n  ...\n 1267  		}\n 1268  \n 1269: 		var test = new Test(name, testName, expected, testEnvironmentArg, async, callback);\n 1270  		test.previousModule = config.previousModule;\n 1271  		test.module = config.currentModule;\n ....\n 1454  			stats: { all: 0, bad: 0 },\n 1455  			moduleStats: { all: 0, bad: 0 },\n 1456: 			started: +new Date,\n 1457  			updateRate: 1000,\n 1458  			blocking: false,\n ....\n 1676  		tests = id(\"qunit-tests\"),\n 1677  		html = ['Tests completed in ',\n 1678: 		+new Date - config.started, ' milliseconds.<br/>',\n 1679  		'<span class=\"passed\">', config.stats.all - config.stats.bad, '</span> tests of <span class=\"total\">', config.stats.all, '</span> passed, <span class=\"failed\">', config.stats.bad,'</span> failed.'].join('');\n 1680  \n ....\n 1731  function sourceFromStacktrace() {\n 1732  	try {\n 1733: 		throw new Error();\n 1734  	} catch ( e ) {\n 1735  		if (e.stacktrace) {\n ....\n 1773  \n 1774  function process() {\n 1775: 	var start = (new Date()).getTime();\n 1776  \n 1777  	while ( config.queue.length && !config.blocking ) {\n 1778: 		if ( config.updateRate <= 0 || (((new Date()).getTime() - start) < config.updateRate) ) {\n 1779  			config.queue.shift()();\n 1780  		} else {\n ....\n 1802  	saveGlobal();\n 1803  \n 1804: 	var newGlobals = diff( old, config.pollution );\n 1805: 	if ( newGlobals.length > 0 ) {\n 1806: 		ok( false, \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n 1807  		config.current.expected++;\n 1808  	}\n ....\n 1815  }\n 1816  \n 1817: // returns a new Array with the elements that are in a but not in b\n 1818  function diff( a, b ) {\n 1819  	var result = a.slice();\n ....\n 1891          function useStrictEquality(b, a) {\n 1892              if (b instanceof a.constructor || a instanceof b.constructor) {\n 1893:                 // to catch short annotaion VS 'new' annotation of a declaration\n 1894                  // e.g. var i = 1;\n 1895:                 //      var j = new Number(1);\n 1896                  return a == b;\n 1897              } else {\n ....\n 2237  QUnit.diff = (function() {\n 2238  	function diff(o, n){\n 2239: 		var ns = new Object();\n 2240: 		var os = new Object();\n 2241  \n 2242  		for (var i = 0; i < n.length; i++) {\n 2243  			if (ns[n[i]] == null)\n 2244  				ns[n[i]] = {\n 2245: 					rows: new Array(),\n 2246  					o: null\n 2247  				};\n ....\n 2252  			if (os[o[i]] == null)\n 2253  				os[o[i]] = {\n 2254: 					rows: new Array(),\n 2255  					n: null\n 2256  				};\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt\\node_modules\\which\\which.js:\n   41    //console.error(\"pathEnv\", pathEnv)\n   42    ;(function F (i, l) {\n   43:     if (i === l) return cb(new Error(\"not found: \"+cmd))\n   44      var p = path.resolve(pathEnv[i], cmd)\n   45      ;(function E (ii, ll) {\n   ..\n   81      }\n   82    }\n   83:   throw new Error(\"not found: \"+cmd)\n   84  }\n   85  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-concat\\.jshintrc:\n    4    \"immed\": true,\n    5    \"latedef\": true,\n    6:   \"newcap\": true,\n    7    \"noarg\": true,\n    8    \"sub\": true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-concat\\Gruntfile.js:\n   24      },\n   25  \n   26:     // Before generating any new files, remove any previously-created files.\n   27      clean: {\n   28        tests: ['tmp']\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-concat\\package.json:\n   55      }\n   56    ],\n   57:   \"readme\": \"# grunt-contrib-concat [![Build Status](https://secure.travis-ci.org/gruntjs/grunt-contrib-concat.png?branch=master)](http://travis-ci.org/gruntjs/grunt-contrib-concat)\\n\\n> Concatenate files.\\n\\n\\n\\n## Getting Started\\nThis plugin requires Grunt `~0.4.0`\\n\\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\\n\\n```shell\\nnpm install grunt-contrib-concat --save-dev\\n```\\n\\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\\n\\n```js\\ngrunt.loadNpmTasks('grunt-contrib-concat');\\n```\\n\\n\\n\\n\\n## Concat task\\n_Run this task with the `grunt concat` command._\\n\\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\\n### Options\\n\\n#### separator\\nType: `String`\\nDefault: `grunt.util.linefeed`\\n\\nConcatenated files will be joined on this string. If you're post-processing concatenated JavaScript files with a minifier, you may need to use a semicolon `';'` as the separator.\\n\\n#### banner\\nType: `String`\\nDefault: empty string\\n\\nThis string will be prepended to the beginning of the concatenated output. It is processed using [grunt.template.process][], using the default options.\\n\\n_(Default processing options are explained in the [grunt.template.process][] documentation)_\\n\\n#### footer\\nType: `String`\\nDefault: empty string\\n\\nThis string will be appended to the end of the concatenated output. It is processed using [grunt.template.process][], using the default options.\\n\\n_(Default processing options are explained in the [grunt.template.process][] documentation)_\\n\\n#### stripBanners\\nType: `Boolean` `Object`\\nDefault: `false`\\n\\nStrip JavaScript banner comments from source files.\\n\\n* `false` - No comments are stripped.\\n* `true` - `/* ... */` block comments are stripped, but _NOT_ `/*! ... */` comments.\\n* `options` object:\\n  * By default, behaves as if `true` were specified.\\n  * `block` - If true, _all_ block comments are stripped.\\n  * `line` - If true, any contiguous _leading_ `//` line comments are stripped.\\n\\n#### process\\nType: `Boolean` `Object`\\nDefault: `false`\\n\\nProcess source files as [templates][] before concatenating.\\n\\n* `false` - No processing will occur.\\n* `true` - Process source files using [grunt.template.process][] defaults.\\n* `options` object - Process source files using [grunt.template.process][], using the specified options.\\n* `function(src, filepath)` - Process source files using the given function, called once for each file. The returned value will be used as source code.\\n\\n_(Default processing options are explained in the [grunt.template.process][] documentation)_\\n\\n  [templates]: https://github.com/gruntjs/grunt/wiki/grunt.template\\n  [grunt.template.process]: https://github.com/gruntjs/grunt/wiki/grunt.template#wiki-grunt-template-process\\n\\n### Usage Examples\\n\\n#### Concatenating with a custom separator\\n\\nIn this example, running `grunt concat:dist` (or `grunt concat` because `concat` is a [multi task][]) will concatenate the three specified source files (in order), joining files with `;` and writing the output to `dist/built.js`.\\n\\n```js\\n// Project configuration.\\ngrunt.initConfig({\\n  concat: {\\n    options: {\\n      separator: ';'\\n    },\\n    dist: {\\n      src: ['src/intro.js', 'src/project.js', 'src/outro.js'],\\n      dest: 'dist/built.js'\\n    }\\n  }\\n});\\n```\\n\\n#### Banner comments\\n\\nIn this example, running `grunt concat:dist` will first strip any preexisting banner comment from the `src/project.js` file, then concatenate the result with a newly-generated banner comment, writing the output to `dist/built.js`.\\n\\nThis generated banner will be the contents of the `banner` template string interpolated with the config object. In this case, those properties are the values imported from the `package.json` file (which are available via the `pkg` config property) plus today's date.\\n\\n_Note: you don't have to use an external JSON file. It's also valid to create the `pkg` object inline in the config. That being said, if you already have a JSON file, you might as well reference it._\\n\\n```js\\n// Project configuration.\\ngrunt.initConfig({\\n  pkg: grunt.file.readJSON('package.json'),\\n  concat: {\\n    options: {\\n      stripBanners: true,\\n      banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - ' +\\n        '<%= grunt.template.today(\\\"yyyy-mm-dd\\\") %> */'\\n    },\\n    dist: {\\n      src: ['src/project.js'],\\n      dest: 'dist/built.js'\\n    }\\n  }\\n});\\n```\\n\\n#### Multiple targets\\n\\nIn this example, running `grunt concat` will build two separate files. One \\\"basic\\\" version, with the main file essentially just copied to `dist/basic.js`, and another \\\"with_extras\\\" concatenated version written to `dist/with_extras.js`.\\n\\nWhile each concat target can be built individually by running `grunt concat:basic` or `grunt concat:extras`, running `grunt concat` will build all concat targets. This is because `concat` is a [multi task][].\\n\\n```js\\n// Project configuration.\\ngrunt.initConfig({\\n  concat: {\\n    basic: {\\n      src: ['src/main.js'],\\n      dest: 'dist/basic.js'\\n    },\\n    extras: {\\n      src: ['src/main.js', 'src/extras.js'],\\n      dest: 'dist/with_extras.js'\\n    }\\n  }\\n});\\n```\\n\\n#### Multiple files per target\\n\\nLike the previous example, in this example running `grunt concat` will build two separate files. One \\\"basic\\\" version, with the main file essentially just copied to `dist/basic.js`, and another \\\"with_extras\\\" concatenated version written to `dist/with_extras.js`.\\n\\nThis example differs in that both files are built under the same target.\\n\\nUsing the `files` object, you can have list any number of source-destination pairs.\\n\\n```js\\n// Project configuration.\\ngrunt.initConfig({\\n  concat: {\\n    basic_and_extras: {\\n      files: {\\n        'dist/basic.js': ['src/main.js'],\\n        'dist/with_extras.js': ['src/main.js', 'src/extras.js']\\n      }\\n    }\\n  }\\n});\\n```\\n\\n#### Dynamic filenames\\n\\nFilenames can be generated dynamically by using `<%= %>` delimited underscore templates as filenames.\\n\\nIn this example, running `grunt concat:dist` generates a destination file whose name is generated from the `name` and `version` properties of the referenced `package.json` file (via the `pkg` config property).\\n\\n```js\\n// Project configuration.\\ngrunt.initConfig({\\n  pkg: grunt.file.readJSON('package.json'),\\n  concat: {\\n    dist: {\\n      src: ['src/main.js'],\\n      dest: 'dist/<%= pkg.name %>-<%= pkg.version %>.js'\\n    }\\n  }\\n});\\n```\\n\\n#### Advanced dynamic filenames\\n\\nIn this more involved example, running `grunt concat` will build two separate files (because `concat` is a [multi task][]). The destination file paths will be expanded dynamically based on the specified templates, recursively if necessary.\\n\\nFor example, if the `package.json` file contained `{\\\"name\\\": \\\"awesome\\\", \\\"version\\\": \\\"1.0.0\\\"}`, the files `dist/awesome/1.0.0/basic.js` and `dist/awesome/1.0.0/with_extras.js` would be generated.\\n\\n```javascript\\n// Project configuration.\\ngrunt.initConfig({\\n  pkg: grunt.file.readJSON('package.json'),\\n  dirs: {\\n    src: 'src/files',\\n    dest: 'dist/<%= pkg.name %>/<%= pkg.version %>'\\n  },\\n  concat: {\\n    basic: {\\n      src: ['<%= dirs.src %>/main.js'],\\n      dest: '<%= dirs.dest %>/basic.js'\\n    },\\n    extras: {\\n      src: ['<%= dirs.src %>/main.js', '<%= dirs.src %>/extras.js'],\\n      dest: '<%= dirs.dest %>/with_extras.js'\\n    }\\n  }\\n});\\n```\\n\\n#### Invalid or Missing Files Warning\\nIf you would like the `concat` task to warn if a given file is missing or invalid be sure to set `nonull` to `true`:\\n\\n```js\\ngrunt.initConfig({\\n  concat: {\\n    missing: {\\n      src: ['src/invalid_or_missing_file'],\\n      dest: 'compiled.js',\\n      nonull: true,\\n    },\\n  },\\n});\\n```\\n\\nSee [configuring files for a task](http://gruntjs.com/configuring-tasks#files) for how to configure file globbing in Grunt.\\n\\n\\n#### Custom process function\\nIf you would like to do any custom processing before concatenating, use a custom process function:\\n\\n```js\\nrunt.initConfig({\\n  concat: {\\n    dist: {\\n      options: {\\n        // Replace all 'use strict' statements in the code with a single one at the top\\n        banner: \\\"'use strict';\\\\n\\\",\\n        process: function(src, filepath) {\\n          return '// Source: ' + filepath + '\\\\n' +\\n            src.replace(/(^|\\\\n)[ \\\\t]*('use strict'|\\\"use strict\\\");?\\\\s*/g, '$1');\\n        },\\n      },\\n      files: {\\n        'dist/built.js': ['src/project.js'],\\n      },\\n    },\\n  },\\n});\\n```\\n\\n## Release History\\n\\n * 2013-04-25   v0.3.0   Add option to process files with a custom function.\\n * 2013-04-08   v0.2.0   Dont normalize separator to allow user to set LF even on a Windows environment.\\n * 2013-02-22   v0.1.3   Support footer option.\\n * 2013-02-15   v0.1.2   First official release for Grunt 0.4.0.\\n * 2013-01-18   v0.1.2rc6   Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\\n * 2013-01-09   v0.1.2rc5   Updating to work with grunt v0.4.0rc5. Switching back to this.files api.\\n * 2012-11-13   v0.1.1   Switch to this.file api internally.\\n * 2012-10-03   v0.1.0   Work in progress, not yet officially released.\\n\\n---\\n\\nTask submitted by [\\\"Cowboy\\\" Ben Alman](http://benalman.com/)\\n\\n*This file was generated on Thu Apr 25 2013 20:22:44.*\\n\",\n   58    \"readmeFilename\": \"README.md\",\n   59    \"_id\": \"grunt-contrib-concat@0.3.0\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-concat\\README.md:\n  103  #### Banner comments\n  104  \n  105: In this example, running `grunt concat:dist` will first strip any preexisting banner comment from the `src/project.js` file, then concatenate the result with a newly-generated banner comment, writing the output to `dist/built.js`.\n  106  \n  107  This generated banner will be the contents of the `banner` template string interpolated with the config object. In this case, those properties are the values imported from the `package.json` file (which are available via the `pkg` config property) plus today's date.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-concat\\docs\\concat-examples.md:\n   22  ## Banner comments\n   23  \n   24: In this example, running `grunt concat:dist` will first strip any preexisting banner comment from the `src/project.js` file, then concatenate the result with a newly-generated banner comment, writing the output to `dist/built.js`.\n   25  \n   26  This generated banner will be the contents of the `banner` template string interpolated with the config object. In this case, those properties are the values imported from the `package.json` file (which are available via the `pkg` config property) plus today's date.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-concat\\tasks\\lib\\comment.js:\n   27        m.push('\\\\/\\\\*[^!][\\\\s\\\\S]*?\\\\*\\\\/');\n   28      }\n   29:     var re = new RegExp('^\\\\s*(?:' + m.join('|') + ')\\\\s*', '');\n   30      return src.replace(re, '');\n   31    };\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\.jshintrc:\n    1  {\n    2:   \"curly\": true,    // true: Require {} for every new block or scope\n    3    \"eqeqeq\": true,   // true: Require triple equals (===) for comparison\n    4    \"immed\": true,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`\n    5    \"latedef\": true,  // true: Require variables/functions to be defined before being used\n    6:   \"newcap\": true,   // true: Require capitalization of all constructor functions e.g. `new F()`\n    7    \"noarg\": true,    // true: Prohibit use of `arguments.caller` and `arguments.callee`\n    8    \"sub\": true,      // true: Tolerate using `[]` notation when it can still be expressed in dot notation\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\package.json:\n   50      \"smarttabs\": true,\n   51      \"maxlen\": 100,\n   52:     \"newcap\": false,\n   53      \"undef\": true,\n   54      \"unused\": true,\n   ..\n   68      \"data\"\n   69    ],\n   70:   \"readme\": \"JSHint, A Static Code Analysis Tool for JavaScript\\n--------------------------------------------------\\n\\n\\\\[ [Use it online](http://jshint.com/) •  [About](http://jshint.com/about/) • \\n[Docs](http://jshint.com/docs/) • [FAQ](http://jshint.com/docs/faq) • \\n[Install](http://jshint.com/install/) • [Hack](http://jshint.com/hack/) • \\n[Blog](http://jshint.com/blog/) • [Twitter](https://twitter.com/jshint/) \\\\]\\n\\n[![Build Status](https://travis-ci.org/jshint/jshint.png?branch=master)](https://travis-ci.org/jshint/jshint)\\n[![NPM version](https://badge.fury.io/js/jshint.png)](http://badge.fury.io/js/jshint)\\n\\nJSHint is a community-driven tool to detect errors and potential problems\\nin JavaScript code and to enforce your team’s coding conventions. It is\\nvery flexible so you can easily adjust it to your particular coding guidelines\\nand the environment you expect your code to execute in.\\n\\n#### JSHint 2.x versus JSHint 3\\n\\nThere's an effort going on to release the next major version of JSHint. All\\ndevelopment in the `master` branch is for the version 3.0. Current stable\\nversion is in the `2.x` branch. Keep that in mind when submitting pull requests.\\n\\nAlso, before reporting a bug or thinking about hacking on JSHint, read this:\\n[JSHint 3 plans](http://www.jshint.com/blog/jshint-3-plans/). TL;DR: we're\\nmoving away from style checks within JSHint so no new features around\\nstyle checks will be accepted. Bug fixes are fine for the `2.x` branch.\\n\\n#### Reporting a bug\\n\\nTo report a bug simply create a\\n[new GitHub Issue](https://github.com/jshint/jshint/issues/new) and describe\\nyour problem or suggestion. We welcome all kind of feedback regarding\\nJSHint including but not limited to:\\n\\n * When JSHint doesn't work as expected\\n * When JSHint complains about valid JavaScript code that works in all browsers\\n * When you simply want a new option or feature\\n\\nBefore reporting a bug look around to see if there are any open or closed tickets\\nthat cover your issue. And remember the wisdom: pull request > bug report > tweet.\\n\\n\\n#### License\\n\\nJSHint is distributed under the MIT License. One file and one file only\\n(src/stable/jshint.js) is distributed under the slightly modified MIT License.\\n\\n\\n#### Thank you!\\n\\nWe really appreciate all kind of feedback and contributions. Thanks for using and supporting JSHint!\\n\",\n   71    \"readmeFilename\": \"README.md\",\n   72    \"_id\": \"jshint@2.3.0\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\README.md:\n   23  Also, before reporting a bug or thinking about hacking on JSHint, read this:\n   24  [JSHint 3 plans](http://www.jshint.com/blog/jshint-3-plans/). TL;DR: we're\n   25: moving away from style checks within JSHint so no new features around\n   26  style checks will be accepted. Bug fixes are fine for the `2.x` branch.\n   27  \n   ..\n   29  \n   30  To report a bug simply create a\n   31: [new GitHub Issue](https://github.com/jshint/jshint/issues/new) and describe\n   32  your problem or suggestion. We welcome all kind of feedback regarding\n   33  JSHint including but not limited to:\n   ..\n   35   * When JSHint doesn't work as expected\n   36   * When JSHint complains about valid JavaScript code that works in all browsers\n   37:  * When you simply want a new option or feature\n   38  \n   39  Before reporting a bug look around to see if there are any open or closed tickets\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\bin\\land:\n    8  \n    9  opts.rejectUnauthorized = false;\n   10: opts.agent = new https.Agent(opts);\n   11  \n   12  https.get(opts, succ).on(\"error\", err);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\cli.js:\n 1090      if (progress < 0 || progress > 1 || isNaN(progress)) return;\n 1091      if (!decimals) decimals = 0;\n 1092:     var now = (new Date()).getTime();\n 1093      if (last_progress_call && (now - last_progress_call) < 100 && progress !== 1) {\n 1094          return; //Throttle progress calls\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\package.json:\n   47      }\n   48    ],\n   49:   \"readme\": \"**cli is a toolkit for rapidly building command line apps - it includes:**\\n\\n- Full featured opts/args parser\\n- Plugin support for adding common options and switches\\n- Helper methods for working with input/output and spawning child processes\\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\\n\\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\\n\\n## Example apps\\n\\n### sort.js\\n\\n```javascript\\n#!/usr/bin/env node\\nrequire('cli').withStdinLines(function(lines, newline) {\\n    this.output(lines.sort().join(newline));\\n});\\n```\\n\\nTry it out\\n\\n```bash\\n$ ./sort.js < input.txt\\n```\\n\\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\\n\\n```javascript\\nvar cli = require('cli'), options = cli.parse();\\n\\ncli.withStdinLines(function(lines, newline) {\\n    lines.sort(!options.n ? null : function(a, b) {\\n        return parseInt(a) > parseInt(b);\\n    });\\n    if (options.r) lines.reverse();\\n    this.output(lines.join(newline));\\n});\\n```\\n\\n### static.js\\n\\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\\n\\n```javascript\\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\\n\\ncli.parse({\\n    log:   ['l', 'Enable logging'],\\n    port:  ['p', 'Listen on this port', 'number', 8080],\\n    serve: [false, 'Serve static files from PATH', 'path', './public']\\n});\\n\\ncli.main(function(args, options) {\\n    var server, middleware = [];\\n\\n    if (options.log) {\\n        this.debug('Enabling logging');\\n        middleware.push(require('creationix/log')());\\n    }\\n\\n    this.debug('Serving files from ' + options.serve);\\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\\n\\n    server = this.createServer(middleware).listen(options.port);\\n\\n    this.ok('Listening on port ' + options.port);\\n});\\n```\\n\\nTo output usage information\\n\\n```bash\\n$ ./static.js --help\\n```\\n\\nTo create a daemon that serves files from */tmp*, run\\n\\n```bash\\n$ ./static.js -ld --serve=/tmp\\n```\\n\\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\\n\\n## Helper methods\\n\\ncli has methods that collect stdin (newline is autodetected as \\\\n or \\\\r\\\\n)\\n\\n```javascript\\ncli.withStdin(callback);        //callback receives stdin as a string\\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\\n```\\n\\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \\n\\n```javascript\\ncli.withInput(file, function (line, newline, eof) {\\n    if (!eof) {\\n        this.output(line + newline);\\n    }\\n});\\n```\\n\\n*Note: `file` can be omitted if you want to work with stdin*\\n\\nTo output a progress bar, call\\n\\n```javascript\\ncli.progress(progress); //Where 0 <= progress <= 1\\n```\\n\\nTo spawn a child process, use\\n\\n```javascript\\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\\n```\\n\\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\\n\\n## Plugins\\n\\nPlugins are a way of adding common opts and can be enabled using \\n\\n```javascript\\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\\n```\\n\\n**help** - *enabled by default*\\n\\nAdds `-h,--help` to output auto-generated usage information\\n\\n**version**\\n\\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\\n\\nTo set your own app name and version, use `cli.setApp(app_name, version)`\\n\\n**status**\\n\\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\\n\\n```javascript\\ncli.debug(msg);  //Only shown when using --debug\\ncli.error(msg);\\ncli.fatal(msg);  //Exits the process after outputting msg\\ncli.info(msg);\\ncli.ok(msg);\\n```\\n\\n`-k,--no-color` will omit ANSI color escapes from the output\\n\\n**glob**  - *requires* `npm install glob`\\n\\nEnables glob matching of arguments\\n\\n**daemon**  - *requires* `npm install daemon`\\n\\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\\n\\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\\n\\n**timeout**\\n\\nAdds `-t,--timeout N` to exit the process after N seconds with an error\\n\\n**catchall**\\n\\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\\n\\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\\n\\n## LICENSE\\n\\n(MIT license)\\n\\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n\\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   50    \"readmeFilename\": \"README.md\",\n   51    \"_id\": \"cli@0.4.5\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\README.md:\n   15  ```javascript\n   16  #!/usr/bin/env node\n   17: require('cli').withStdinLines(function(lines, newline) {\n   18:     this.output(lines.sort().join(newline));\n   19  });\n   20  ```\n   ..\n   31  var cli = require('cli'), options = cli.parse();\n   32  \n   33: cli.withStdinLines(function(lines, newline) {\n   34      lines.sort(!options.n ? null : function(a, b) {\n   35          return parseInt(a) > parseInt(b);\n   36      });\n   37      if (options.r) lines.reverse();\n   38:     this.output(lines.join(newline));\n   39  });\n   40  ```\n   ..\n   86  ## Helper methods\n   87  \n   88: cli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n   89  \n   90  ```javascript\n   91  cli.withStdin(callback);        //callback receives stdin as a string\n   92: cli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n   93  ```\n   94  \n   ..\n   96  \n   97  ```javascript\n   98: cli.withInput(file, function (line, newline, eof) {\n   99      if (!eof) {\n  100:         this.output(line + newline);\n  101      }\n  102  });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\examples\\echo.js:\n    3  /* All of the following commands are equivalent and write `foo\\tbar foo` to out.txt\n    4      $ ./echo.js -n -e --output=out.txt \"foo\\tbar\" \"foo\"\n    5:     $ ./echo.js --newline --escape --output \"out.txt\" \"foo\\tbar\" \"foo\"\n    6      $ ./echo.js -ne --output=out.txt \"foo\\tbar\" \"foo\"\n    7      $ ./echo.js -en --output=\"out.txt\" \"foo\\tbar\" \"foo\"\n    .\n   11  \n   12  cli.parse({\n   13:     newline:   ['n', 'Do not output the trailing newline'],\n   14      escape:    ['e', 'Enable interpretation of backslash escapes'],\n   15      separator: ['s', 'Separate arguments using this value', 'string', ' '],\n   ..\n   38      }\n   39      \n   40:     if (!options.newline) {\n   41          output += '\\n';\n   42      }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\examples\\sort.js:\n    8  });\n    9  \n   10: cli.withStdinLines(function (lines, newline) {\n   11      lines.sort(!options.numeric ? null : function (a, b) {\n   12          return parseInt(a) > parseInt(b);\n   ..\n   15          lines.reverse();\n   16      }\n   17:     this.output(lines.join(newline));\n   18  });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\glob.js:\n   55    }\n   56  \n   57:   var g = new Glob(pattern, options, cb)\n   58    return g.sync ? g.found : g\n   59  }\n   ..\n   62  \n   63  function deprecated () {\n   64:   throw new Error(\"glob's interface has changed. Please see the docs.\")\n   65  }\n   66  \n   ..\n   83  function Glob (pattern, options, cb) {\n   84    if (!(this instanceof Glob)) {\n   85:     return new Glob(pattern, options, cb)\n   86    }\n   87  \n   ..\n  128  \n  129    if (!pattern) {\n  130:     throw new Error(\"must provide pattern\")\n  131    }\n  132  \n  ...\n  134    if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n  135      if (options.noglobstar) {\n  136:       throw new Error(\"base matching requires globstar\")\n  137      }\n  138      pattern = \"**/\" + pattern\n  ...\n  155    this.silent = !!options.silent\n  156  \n  157:   var mm = this.minimatch = new Minimatch(pattern, options)\n  158    this.options = mm.options\n  159    pattern = this.pattern = mm.pattern\n  ...\n  175    // Later, we do an Object.keys() on these.\n  176    // Keep them as a list so we can fill in when nonull is set.\n  177:   this.matches = new Array(n)\n  178  \n  179    this.minimatch.set.forEach(iterator.bind(this))\n  ...\n  270    if (this.paused) return\n  271    if (this.sync)\n  272:     this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  273    this.paused = true\n  274    this.emit(\"pause\")\n  ...\n  278    if (!this.paused) return\n  279    if (this.sync)\n  280:     this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  281    this.paused = false\n  282    this.emit(\"resume\")\n  ...\n  559  \n  560    if (f.length > this.maxLength) {\n  561:     var er = new Error(\"Path name too long\")\n  562      er.code = \"ENAMETOOLONG\"\n  563      er.path = f\n  ...\n  595      this.log(\"should be ENOTDIR, fake it\")\n  596  \n  597:     er = new Error(\"ENOTDIR, not a directory '\" + abs + \"'\")\n  598      er.path = abs\n  599      er.code = \"ENOTDIR\"\n  ...\n  627  \n  628    if (f.length > this.maxLength) {\n  629:     var er = new Error(\"Path name too long\")\n  630      er.code = \"ENAMETOOLONG\"\n  631      er.path = f\n  ...\n  644        // either ENOENT or ENOTDIR\n  645        var code = c ? \"ENOTDIR\" : \"ENOENT\"\n  646:       , er = new Error((c ? \"Not a directory\" : \"Not found\") + \": \" + f)\n  647        er.path = f\n  648        er.code = code\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\package.json:\n   30    },\n   31    \"license\": \"BSD\",\n   32:   \"readme\": \"# Glob\\n\\nMatch files using the patterns the shell uses, like stars and stuff.\\n\\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\\nlibrary to do its matching.\\n\\n## Attention: node-glob users!\\n\\nThe API has changed dramatically between 2.x and 3.x. This library is\\nnow 100% JavaScript, and the integer flags have been replaced with an\\noptions object.\\n\\nAlso, there's an event emitter class, proper tests, and all the other\\nthings you've come to expect from node modules.\\n\\nAnd best of all, no compilation!\\n\\n## Usage\\n\\n```javascript\\nvar glob = require(\\\"glob\\\")\\n\\n// options is optional\\nglob(\\\"**/*.js\\\", options, function (er, files) {\\n  // files is an array of filenames.\\n  // If the `nonull` option is set, and nothing\\n  // was found, then files is [\\\"**/*.js\\\"]\\n  // er is an error object or null.\\n})\\n```\\n\\n## Features\\n\\nPlease see the [minimatch\\ndocumentation](https://github.com/isaacs/minimatch) for more details.\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n* [minimatch documentation](https://github.com/isaacs/minimatch)\\n\\n## glob(pattern, [options], cb)\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* `cb` {Function}\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nPerform an asynchronous glob search.\\n\\n## glob.sync(pattern, [options])\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* return: {Array<String>} filenames found matching the pattern\\n\\nPerform a synchronous glob search.\\n\\n## Class: glob.Glob\\n\\nCreate a Glob object by instanting the `glob.Glob` class.\\n\\n```javascript\\nvar Glob = require(\\\"glob\\\").Glob\\nvar mg = new Glob(pattern, options, cb)\\n```\\n\\nIt's an EventEmitter, and starts walking the filesystem to find matches\\nimmediately.\\n\\n### new glob.Glob(pattern, [options], [cb])\\n\\n* `pattern` {String} pattern to search for\\n* `options` {Object}\\n* `cb` {Function} Called when an error occurs, or matches are found\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nNote that if the `sync` flag is set in the options, then matches will\\nbe immediately available on the `g.found` member.\\n\\n### Properties\\n\\n* `minimatch` The minimatch object that the glob uses.\\n* `options` The options object passed in.\\n* `error` The error encountered.  When an error is encountered, the\\n  glob object is in an undefined state, and should be discarded.\\n* `aborted` Boolean which is set to true when calling `abort()`.  There\\n  is no way at this time to continue a glob search after aborting, but\\n  you can re-use the statCache to avoid having to duplicate syscalls.\\n* `statCache` Collection of all the stat results the glob search\\n  performed.\\n* `cache` Convenience object.  Each field has the following possible\\n  values:\\n  * `false` - Path does not exist\\n  * `true` - Path exists\\n  * `1` - Path exists, and is not a directory\\n  * `2` - Path exists, and is a directory\\n  * `[file, entries, ...]` - Path exists, is a directory, and the\\n    array value is the results of `fs.readdir`\\n\\n### Events\\n\\n* `end` When the matching is finished, this is emitted with all the\\n  matches found.  If the `nonull` option is set, and no match was found,\\n  then the `matches` list contains the original pattern.  The matches\\n  are sorted, unless the `nosort` flag is set.\\n* `match` Every time a match is found, this is emitted with the matched.\\n* `error` Emitted when an unexpected error is encountered, or whenever\\n  any fs error occurs if `options.strict` is set.\\n* `abort` When `abort()` is called, this event is raised.\\n\\n### Methods\\n\\n* `abort` Stop the search.\\n\\n### Options\\n\\nAll the options that can be passed to Minimatch can also be passed to\\nGlob to change pattern matching behavior.  Also, some have been added,\\nor have glob-specific ramifications.\\n\\nAll options are false by default, unless otherwise noted.\\n\\nAll options are added to the glob object, as well.\\n\\n* `cwd` The current working directory in which to search.  Defaults\\n  to `process.cwd()`.\\n* `root` The place where patterns starting with `/` will be mounted\\n  onto.  Defaults to `path.resolve(options.cwd, \\\"/\\\")` (`/` on Unix\\n  systems, and `C:\\\\` or some such on Windows.)\\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\\n  Note that an explicit dot in a portion of the pattern will always\\n  match dot files.\\n* `nomount` By default, a pattern starting with a forward-slash will be\\n  \\\"mounted\\\" onto the root setting, so that a valid filesystem path is\\n  returned.  Set this flag to disable that behavior.\\n* `mark` Add a `/` character to directory matches.  Note that this\\n  requires additional stat calls.\\n* `nosort` Don't sort the results.\\n* `stat` Set to true to stat *all* results.  This reduces performance\\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\\n  to be an untrustworthy indicator of file existence.  It will cause\\n  ELOOP to be triggered one level sooner in the case of cyclical\\n  symbolic links.\\n* `silent` When an unusual error is encountered\\n  when attempting to read a directory, a warning will be printed to\\n  stderr.  Set the `silent` option to true to suppress these warnings.\\n* `strict` When an unusual error is encountered\\n  when attempting to read a directory, the process will just continue on\\n  in search of other matches.  Set the `strict` option to raise an error\\n  in these cases.\\n* `cache` See `cache` property above.  Pass in a previously generated\\n  cache object to save some fs calls.\\n* `statCache` A cache of results of filesystem information, to prevent\\n  unnecessary stat calls.  While it should not normally be necessary to\\n  set this, you may pass the statCache from one glob() call to the\\n  options object of another, if you know that the filesystem will not\\n  change between calls.  (See \\\"Race Conditions\\\" below.)\\n* `sync` Perform a synchronous glob search.\\n* `nounique` In some cases, brace-expanded patterns can result in the\\n  same file showing up multiple times in the result set.  By default,\\n  this implementation prevents duplicates in the result set.\\n  Set this flag to disable that behavior.\\n* `nonull` Set to never return an empty set, instead returning a set\\n  containing the pattern itself.  This is the default in glob(3).\\n* `nocase` Perform a case-insensitive match.  Note that case-insensitive\\n  filesystems will sometimes result in glob returning results that are\\n  case-insensitively matched anyway, since readdir and stat will not\\n  raise an error.\\n* `debug` Set to enable debug logging in minimatch and glob.\\n* `globDebug` Set to enable debug logging in glob, but not minimatch.\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between node-glob and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen glob returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`glob.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\\n## Windows\\n\\n**Please only use forward-slashes in glob expressions.**\\n\\nThough windows uses either `/` or `\\\\` as its path separator, only `/`\\ncharacters are used by this glob implementation.  You must use\\nforward-slashes **only** in glob expressions.  Back-slashes will always\\nbe interpreted as escape characters, not path separators.\\n\\nResults from absolute patterns such as `/foo/*` are mounted onto the\\nroot setting using `path.join`.  On windows, this will by default result\\nin `/foo/*` matching `C:\\\\foo\\\\bar.txt`.\\n\\n## Race Conditions\\n\\nGlob searching, by its very nature, is susceptible to race conditions,\\nsince it relies on directory walking and such.\\n\\nAs a result, it is possible that a file that exists when glob looks for\\nit may have been deleted or modified by the time it returns the result.\\n\\nAs part of its internal implementation, this program caches all stat\\nand readdir calls that it makes, in order to cut down on system\\noverhead.  However, this also makes it even more susceptible to races,\\nespecially if the cache or statCache objects are reused between glob\\ncalls.\\n\\nUsers are thus advised not to use a glob result as a guarantee of\\nfilesystem state in the face of rapid changes.  For the vast majority\\nof operations, this is never a problem.\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\README.md:\n   74  ```javascript\n   75  var Glob = require(\"glob\").Glob\n   76: var mg = new Glob(pattern, options, cb)\n   77  ```\n   78  \n   ..\n   80  immediately.\n   81  \n   82: ### new glob.Glob(pattern, [options], [cb])\n   83  \n   84  * `pattern` {String} pattern to search for\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\examples\\g.js:\n    4  console.log(pattern)\n    5  \n    6: var mg = new Glob(pattern, {mark: true, sync:true}, function (er, matches) {\n    7    console.log(\"matches\", matches)\n    8  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\examples\\usr-local.js:\n    4  console.log(pattern)\n    5  \n    6: var mg = new Glob(pattern, {mark: true}, function (er, matches) {\n    7    console.log(\"matches\", matches)\n    8  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\node_modules\\inherits\\inherits_browser.js:\n   18      var TempCtor = function () {}\n   19      TempCtor.prototype = superCtor.prototype\n   20:     ctor.prototype = new TempCtor()\n   21      ctor.prototype.constructor = ctor\n   22    }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   23      \"test\": \"node test\"\n   24    },\n   25:   \"readme\": \"Browser-friendly inheritance fully compatible with standard node.js\\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\\n\\nThis package exports standard `inherits` from node.js `util` module in\\nnode environment, but also provides alternative browser-friendly\\nimplementation through [browser\\nfield](https://gist.github.com/shtylman/4339901). Alternative\\nimplementation is a literal copy of standard one located in standalone\\nmodule to avoid requiring of `util`. It also has a shim for old\\nbrowsers with no `Object.create` support.\\n\\nWhile keeping you sure you are using standard `inherits`\\nimplementation in node.js environment, it allows bundlers such as\\n[browserify](https://github.com/substack/node-browserify) to not\\ninclude full `util` package to your client code if all you need is\\njust `inherits` function. It worth, because browser shim for `util`\\npackage is large and `inherits` is often the single function you need\\nfrom it.\\n\\nIt's recommended to use this package instead of\\n`require('util').inherits` for any code that has chances to be used\\nnot only in node.js but in browser too.\\n\\n## usage\\n\\n```js\\nvar inherits = require('inherits');\\n// then use exactly as the standard one\\n```\\n\\n## note on version ~1.0\\n\\nVersion ~1.0 had completely different motivation and is not compatible\\nneither with 2.0 nor with standard node.js `inherits`.\\n\\nIf you are using version ~1.0 and planning to switch to ~2.0, be\\ncareful:\\n\\n* new version uses `super_` instead of `super` for referencing\\n  superclass\\n* new version overwrites current prototype while old one preserves any\\n  existing fields on it\\n\",\n   26    \"readmeFilename\": \"README.md\",\n   27    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\node_modules\\inherits\\README.md:\n   37  careful:\n   38  \n   39: * new version uses `super_` instead of `super` for referencing\n   40    superclass\n   41: * new version overwrites current prototype while old one preserves any\n   42    existing fields on it\n   43  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\node_modules\\inherits\\test.js:\n   20  inherits(Child, Parent)\n   21  \n   22: var c = new Child\n   23  test(c)\n   24  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\test\\00-setup.js:\n  160    var s = 0\n  161    chunks.forEach(function (c) { s += c.length })\n  162:   var out = new Buffer(s)\n  163    s = 0\n  164    chunks.forEach(function (c) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\test\\bash-results.json:\n  296      \"./test/globstar-match.js\",\n  297      \"./test/mark.js\",\n  298:     \"./test/new-glob-optional-options.js\",\n  299      \"./test/nocase-nomagic.js\",\n  300      \"./test/pause-resume.js\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\test\\globstar-match.js:\n    4  test('globstar should not have dupe matches', function(t) {\n    5    var pattern = 'a/**/[gh]'\n    6:   var g = new Glob(pattern, { cwd: __dirname })\n    7    var matches = []\n    8    g.on('match', function(m) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\test\\new-glob-optional-options.js:\n    2  var test = require('tap').test;\n    3  \n    4: test('new glob, with cb, and no options', function (t) {\n    5:   new Glob(__filename, function(er, results) {\n    6      if (er) throw er;\n    7      t.same(results, [__filename]);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\test\\pause-resume.js:\n   37  var globResults = []\n   38  tap.test(\"use a Glob object, and pause/resume it\", function (t) {\n   39:   var g = new Glob(pattern)\n   40    , paused = false\n   41    , res = []\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\test\\stat.js:\n    4  \n    5  test('stat all the things', function(t) {\n    6:   var g = new glob.Glob('a/*abc*/**', { stat: true, cwd: __dirname })\n    7    var matches = []\n    8    g.on('match', function(m) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\console-browserify\\index.js:\n   60      var time = times[label]\n   61      if (!time) {\n   62:         throw new Error(\"No such label: \" + label)\n   63      }\n   64  \n   ..\n   68  \n   69  function trace() {\n   70:     var err = new Error()\n   71      err.name = \"Trace\"\n   72      err.message = util.format.apply(null, arguments)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\minimatch.js:\n   34  \n   35  var LRU = require(\"lru-cache\")\n   36:   , cache = minimatch.cache = new LRU({max: 100})\n   37    , GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\n   38    , sigmund = require(\"sigmund\")\n   ..\n   40  var path = require(\"path\")\n   41    // any single thing other than /\n   42:   // don't need to escape / when using new RegExp()\n   43    , qmark = \"[^/]\"\n   44  \n   ..\n  100  \n  101    m.Minimatch = function Minimatch (pattern, options) {\n  102:     return new orig.Minimatch(pattern, ext(def, options))\n  103    }\n  104  \n  ...\n  114  function minimatch (p, pattern, options) {\n  115    if (typeof pattern !== \"string\") {\n  116:     throw new TypeError(\"glob pattern string required\")\n  117    }\n  118  \n  ...\n  127    if (pattern.trim() === \"\") return p === \"\"\n  128  \n  129:   return new Minimatch(pattern, options).match(p)\n  130  }\n  131  \n  132  function Minimatch (pattern, options) {\n  133    if (!(this instanceof Minimatch)) {\n  134:     return new Minimatch(pattern, options, cache)\n  135    }\n  136  \n  137    if (typeof pattern !== \"string\") {\n  138:     throw new TypeError(\"glob pattern string required\")\n  139    }\n  140  \n  ...\n  257  // a{b}c -> a{b}c\n  258  minimatch.braceExpand = function (pattern, options) {\n  259:   return new Minimatch(pattern, options).braceExpand()\n  260  }\n  261  \n  ...\n  267  \n  268    if (typeof pattern === \"undefined\") {\n  269:     throw new Error(\"undefined pattern\")\n  270    }\n  271  \n  ...\n  759  \n  760    var flags = options.nocase ? \"i\" : \"\"\n  761:     , regExp = new RegExp(\"^\" + re + \"$\", flags)\n  762  \n  763    regExp._glob = pattern\n  ...\n  768  \n  769  minimatch.makeRe = function (pattern, options) {\n  770:   return new Minimatch(pattern, options || {}).makeRe()\n  771  }\n  772  \n  ...\n  807  \n  808    try {\n  809:     return this.regexp = new RegExp(re, flags)\n  810    } catch (ex) {\n  811      return this.regexp = false\n  ...\n  814  \n  815  minimatch.match = function (list, pattern, options) {\n  816:   var mm = new Minimatch(pattern, options)\n  817    list = list.filter(function (f) {\n  818      return mm.match(f)\n  ...\n 1035  \n 1036    // should be unreachable.\n 1037:   throw new Error(\"wtf?\")\n 1038  }\n 1039  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\package.json:\n   30      \"url\": \"http://github.com/isaacs/minimatch/raw/master/LICENSE\"\n   31    },\n   32:   \"readme\": \"# minimatch\\n\\nA minimal matching utility.\\n\\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.png)](http://travis-ci.org/isaacs/minimatch)\\n\\n\\nThis is the matching library used internally by npm.\\n\\nEventually, it will replace the C binding in node-glob.\\n\\nIt works by converting glob expressions into JavaScript `RegExp`\\nobjects.\\n\\n## Usage\\n\\n```javascript\\nvar minimatch = require(\\\"minimatch\\\")\\n\\nminimatch(\\\"bar.foo\\\", \\\"*.foo\\\") // true!\\nminimatch(\\\"bar.foo\\\", \\\"*.bar\\\") // false!\\nminimatch(\\\"bar.foo\\\", \\\"*.+(bar|foo)\\\", { debug: true }) // true, and noisy!\\n```\\n\\n## Features\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n\\n## Minimatch Class\\n\\nCreate a minimatch object by instanting the `minimatch.Minimatch` class.\\n\\n```javascript\\nvar Minimatch = require(\\\"minimatch\\\").Minimatch\\nvar mm = new Minimatch(pattern, options)\\n```\\n\\n### Properties\\n\\n* `pattern` The original pattern the minimatch object represents.\\n* `options` The options supplied to the constructor.\\n* `set` A 2-dimensional array of regexp or string expressions.\\n  Each row in the\\n  array corresponds to a brace-expanded pattern.  Each item in the row\\n  corresponds to a single path-part.  For example, the pattern\\n  `{a,b/c}/d` would expand to a set of patterns like:\\n\\n        [ [ a, d ]\\n        , [ b, c, d ] ]\\n\\n    If a portion of the pattern doesn't have any \\\"magic\\\" in it\\n    (that is, it's something like `\\\"foo\\\"` rather than `fo*o?`), then it\\n    will be left as a string rather than converted to a regular\\n    expression.\\n\\n* `regexp` Created by the `makeRe` method.  A single regular expression\\n  expressing the entire pattern.  This is useful in cases where you wish\\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\\n* `negate` True if the pattern is negated.\\n* `comment` True if the pattern is a comment.\\n* `empty` True if the pattern is `\\\"\\\"`.\\n\\n### Methods\\n\\n* `makeRe` Generate the `regexp` member if necessary, and return it.\\n  Will return `false` if the pattern is invalid.\\n* `match(fname)` Return true if the filename matches the pattern, or\\n  false otherwise.\\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\\n  filename, and match it against a single row in the `regExpSet`.  This\\n  method is mainly for internal use, but is exposed so that it can be\\n  used by a glob-walker that needs to avoid excessive filesystem calls.\\n\\nAll other methods are internal, and will be called as necessary.\\n\\n## Functions\\n\\nThe top-level exported function has a `cache` property, which is an LRU\\ncache set to store 100 items.  So, calling these methods repeatedly\\nwith the same pattern and options will use the same Minimatch object,\\nsaving the cost of parsing it multiple times.\\n\\n### minimatch(path, pattern, options)\\n\\nMain export.  Tests a path against the pattern using the options.\\n\\n```javascript\\nvar isJS = minimatch(file, \\\"*.js\\\", { matchBase: true })\\n```\\n\\n### minimatch.filter(pattern, options)\\n\\nReturns a function that tests its\\nsupplied argument, suitable for use with `Array.filter`.  Example:\\n\\n```javascript\\nvar javascripts = fileList.filter(minimatch.filter(\\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.match(list, pattern, options)\\n\\nMatch against the list of\\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\\noptions.nonull is set, then return a list containing the pattern itself.\\n\\n```javascript\\nvar javascripts = minimatch.match(fileList, \\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.makeRe(pattern, options)\\n\\nMake a regular expression object from the pattern.\\n\\n## Options\\n\\nAll options are `false` by default.\\n\\n### debug\\n\\nDump a ton of stuff to stderr.\\n\\n### nobrace\\n\\nDo not expand `{a,b}` and `{1..3}` brace sets.\\n\\n### noglobstar\\n\\nDisable `**` matching against multiple folder names.\\n\\n### dot\\n\\nAllow patterns to match filenames starting with a period, even if\\nthe pattern does not explicitly have a period in that spot.\\n\\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\\nis set.\\n\\n### noext\\n\\nDisable \\\"extglob\\\" style patterns like `+(a|b)`.\\n\\n### nocase\\n\\nPerform a case-insensitive match.\\n\\n### nonull\\n\\nWhen a match is not found by `minimatch.match`, return a list containing\\nthe pattern itself.  When set, an empty list is returned if there are\\nno matches.\\n\\n### matchBase\\n\\nIf set, then patterns without slashes will be matched\\nagainst the basename of the path if it contains slashes.  For example,\\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\\n\\n### nocomment\\n\\nSuppress the behavior of treating `#` at the start of a pattern as a\\ncomment.\\n\\n### nonegate\\n\\nSuppress the behavior of treating a leading `!` character as negation.\\n\\n### flipNegate\\n\\nReturns from negate expressions the same as if they were not negated.\\n(Ie, true on a hit, false on a miss.)\\n\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between minimatch and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen minimatch.match returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`minimatch.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\README.md:\n   44  ```javascript\n   45  var Minimatch = require(\"minimatch\").Minimatch\n   46: var mm = new Minimatch(pattern, options)\n   47  ```\n   48  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\node_modules\\lru-cache\\lib\\lru-cache.js:\n   16  function LRUCache (options) {\n   17    if (!(this instanceof LRUCache))\n   18:     return new LRUCache(options)\n   19  \n   20    if (typeof options === 'number')\n   ..\n  102  \n  103  LRUCache.prototype.keys = function () {\n  104:   var keys = new Array(this._itemCount)\n  105    var i = 0\n  106    for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n  ...\n  112  \n  113  LRUCache.prototype.values = function () {\n  114:   var values = new Array(this._itemCount)\n  115    var i = 0\n  116    for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n  ...\n  158    var len = this._lengthCalculator(value)\n  159    var age = this._maxAge ? Date.now() : 0\n  160:   var hit = new Entry(key, value, this._mru++, len, age)\n  161  \n  162    // oversized objects fall out of cache automatically.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\basic.js:\n    3  \n    4  test(\"basic\", function (t) {\n    5:   var cache = new LRU({max: 10})\n    6    cache.set(\"key\", \"value\")\n    7    t.equal(cache.get(\"key\"), \"value\")\n    .\n   13  \n   14  test(\"least recently set\", function (t) {\n   15:   var cache = new LRU(2)\n   16    cache.set(\"a\", \"A\")\n   17    cache.set(\"b\", \"B\")\n   ..\n   24  \n   25  test(\"lru recently gotten\", function (t) {\n   26:   var cache = new LRU(2)\n   27    cache.set(\"a\", \"A\")\n   28    cache.set(\"b\", \"B\")\n   ..\n   36  \n   37  test(\"del\", function (t) {\n   38:   var cache = new LRU(2)\n   39    cache.set(\"a\", \"A\")\n   40    cache.del(\"a\")\n   ..\n   44  \n   45  test(\"max\", function (t) {\n   46:   var cache = new LRU(3)\n   47  \n   48    // test changing the max, verify that the LRU items get dropped.\n   ..\n   82  \n   83  test(\"reset\", function (t) {\n   84:   var cache = new LRU(10)\n   85    cache.set(\"a\", \"A\")\n   86    cache.set(\"b\", \"B\")\n   ..\n   97  // about the format/layout of the response.\n   98  test(\"dump\", function (t) {\n   99:   var cache = new LRU(10)\n  100    var d = cache.dump();\n  101    t.equal(Object.keys(d).length, 0, \"nothing in dump for empty cache\")\n  ...\n  120  \n  121  test(\"basic with weighed length\", function (t) {\n  122:   var cache = new LRU({\n  123      max: 100,\n  124      length: function (item) { return item.size }\n  ...\n  135  \n  136  test(\"weighed length item too large\", function (t) {\n  137:   var cache = new LRU({\n  138      max: 10,\n  139      length: function (item) { return item.size }\n  ...\n  150  \n  151  test(\"least recently set with weighed length\", function (t) {\n  152:   var cache = new LRU({\n  153      max:8,\n  154      length: function (item) { return item.length }\n  ...\n  166  \n  167  test(\"lru recently gotten with weighed length\", function (t) {\n  168:   var cache = new LRU({\n  169      max: 8,\n  170      length: function (item) { return item.length }\n  ...\n  184  \n  185  test(\"set returns proper booleans\", function(t) {\n  186:   var cache = new LRU({\n  187      max: 5,\n  188      length: function (item) { return item.length }\n  ...\n  200  \n  201  test(\"drop the old items\", function(t) {\n  202:   var cache = new LRU({\n  203      max: 5,\n  204      maxAge: 50\n  ...\n  231  test(\"disposal function\", function(t) {\n  232    var disposed = false\n  233:   var cache = new LRU({\n  234      max: 1,\n  235      dispose: function (k, n) {\n  ...\n  250  test(\"disposal function on too big of item\", function(t) {\n  251    var disposed = false\n  252:   var cache = new LRU({\n  253      max: 1,\n  254      length: function (k) {\n  ...\n  268  \n  269  test(\"has()\", function(t) {\n  270:   var cache = new LRU({\n  271      max: 1,\n  272      maxAge: 10\n  ...\n  285  \n  286  test(\"stale\", function(t) {\n  287:   var cache = new LRU({\n  288      maxAge: 10,\n  289      stale: true\n  ...\n  318  \n  319  test(\"least recently set w/ peek\", function (t) {\n  320:   var cache = new LRU(2)\n  321    cache.set(\"a\", \"A\")\n  322    cache.set(\"b\", \"B\")\n  ...\n  330  \n  331  test(\"pop the least used item\", function (t) {\n  332:   var cache = new LRU(3)\n  333    , last\n  334  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\foreach.js:\n    3  \n    4  test('forEach', function (t) {\n    5:   var l = new LRU(5)\n    6    for (var i = 0; i < 10; i ++) {\n    7      l.set(i.toString(), i.toString(2))\n    .\n   34  \n   35  test('keys() and values()', function (t) {\n   36:   var l = new LRU(5)\n   37    for (var i = 0; i < 10; i ++) {\n   38      l.set(i.toString(), i.toString(2))\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\memory-leak.js:\n    4  var test = require('tap').test\n    5  var LRU = require('../')\n    6: var l = new LRU({ max: 10 })\n    7  var refs = 0\n    8  function X() {\n    .\n   18    // fill up the cache\n   19    for (var i = 0; i < 100; i++) {\n   20:     l.set(i, new X);\n   21      // throw some gets in there, too.\n   22      if (i % 2 === 0)\n   ..\n   33    // do it again, but more\n   34    for (var i = 0; i < 10000; i++) {\n   35:     l.set(i, new X);\n   36      // throw some gets in there, too.\n   37      if (i % 2 === 0)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\test\\basic.js:\n  366  \n  367      // options.debug = true\n  368:     var m = new mm.Minimatch(pattern, options)\n  369      var r = m.makeRe()\n  370      var expectRe = regexps[re++]\n  ...\n  391  tap.test(\"global leak test\", function (t) {\n  392    var globalAfter = Object.keys(global)\n  393:   t.equivalent(globalAfter, globalBefore, \"no new globals, please\")\n  394    t.end()\n  395  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\test\\caching.js:\n    2  var tap = require(\"tap\")\n    3  tap.test(\"cache test\", function (t) {\n    4:   var mm1 = new Minimatch(\"a?b\")\n    5:   var mm2 = new Minimatch(\"a?b\")\n    6    t.equal(mm1, mm2, \"should get the same object\")\n    7    // the lru should drop it after 100 entries\n    8    for (var i = 0; i < 100; i ++) {\n    9:     new Minimatch(\"a\"+i)\n   10    }\n   11:   mm2 = new Minimatch(\"a?b\")\n   12    t.notEqual(mm1, mm2, \"cache should have dropped\")\n   13    t.end()\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\test\\defaults.js:\n  244        // options.debug = true\n  245        var Class = mm.defaults(options).Minimatch\n  246:       var m = new Class(pattern, {})\n  247        var r = m.makeRe()\n  248        tapOpts.re = String(r) || JSON.stringify(r)\n  ...\n  266  tap.test(\"global leak test\", function (t) {\n  267    var globalAfter = Object.keys(global)\n  268:   t.equivalent(globalAfter, globalBefore, \"no new globals, please\")\n  269    t.end()\n  270  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\shelljs\\LICENSE:\n    2  All rights reserved.\n    3  \n    4: You may use this project under the terms of the New BSD license as follows:\n    5  \n    6  Redistribution and use in source and binary forms, with or without\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\shelljs\\package.json:\n   35      \"node\": \"*\"\n   36    },\n   37:   \"readme\": \"# ShellJS - Unix shell commands for Node.js [![Build Status](https://secure.travis-ci.org/arturadib/shelljs.png)](http://travis-ci.org/arturadib/shelljs)\\n\\nShellJS is a portable **(Windows/Linux/OS X)** implementation of Unix shell commands on top of the Node.js API. You can use it to eliminate your shell script's dependency on Unix while still keeping its familiar and powerful commands. You can also install it globally so you can run it from outside Node projects - say goodbye to those gnarly Bash scripts!\\n\\nThe project is [unit-tested](http://travis-ci.org/arturadib/shelljs) and battled-tested in projects like:\\n\\n+ [PDF.js](http://github.com/mozilla/pdf.js) - Firefox's next-gen PDF reader\\n+ [Firebug](http://getfirebug.com/) - Firefox's infamous debugger\\n+ [JSHint](http://jshint.com) - Most popular JavaScript linter\\n+ [Zepto](http://zeptojs.com) - jQuery-compatible JavaScript library for modern browsers\\n+ [Yeoman](http://yeoman.io/) - Web application stack and development tool\\n+ [Deployd.com](http://deployd.com) - Open source PaaS for quick API backend generation\\n\\nand [many more](https://npmjs.org/browse/depended/shelljs).\\n\\n## Installing\\n\\nVia npm:\\n\\n```bash\\n$ npm install [-g] shelljs\\n```\\n\\nIf the global option `-g` is specified, the binary `shjs` will be installed. This makes it possible to\\nrun ShellJS scripts much like any shell script from the command line, i.e. without requiring a `node_modules` folder:\\n\\n```bash\\n$ shjs my_script\\n```\\n\\nYou can also just copy `shell.js` into your project's directory, and `require()` accordingly.\\n\\n\\n## Examples\\n\\n### JavaScript\\n\\n```javascript\\nrequire('shelljs/global');\\n\\nif (!which('git')) {\\n  echo('Sorry, this script requires git');\\n  exit(1);\\n}\\n\\n// Copy files to release dir\\nmkdir('-p', 'out/Release');\\ncp('-R', 'stuff/*', 'out/Release');\\n\\n// Replace macros in each .js file\\ncd('lib');\\nls('*.js').forEach(function(file) {\\n  sed('-i', 'BUILD_VERSION', 'v0.1.2', file);\\n  sed('-i', /.*REMOVE_THIS_LINE.*\\\\n/, '', file);\\n  sed('-i', /.*REPLACE_LINE_WITH_MACRO.*\\\\n/, cat('macro.js'), file);\\n});\\ncd('..');\\n\\n// Run external tool synchronously\\nif (exec('git commit -am \\\"Auto-commit\\\"').code !== 0) {\\n  echo('Error: Git commit failed');\\n  exit(1);\\n}\\n```\\n\\n### CoffeeScript\\n\\n```coffeescript\\nrequire 'shelljs/global'\\n\\nif not which 'git'\\n  echo 'Sorry, this script requires git'\\n  exit 1\\n\\n# Copy files to release dir\\nmkdir '-p', 'out/Release'\\ncp '-R', 'stuff/*', 'out/Release'\\n\\n# Replace macros in each .js file\\ncd 'lib'\\nfor file in ls '*.js'\\n  sed '-i', 'BUILD_VERSION', 'v0.1.2', file\\n  sed '-i', /.*REMOVE_THIS_LINE.*\\\\n/, '', file\\n  sed '-i', /.*REPLACE_LINE_WITH_MACRO.*\\\\n/, cat 'macro.js', file\\ncd '..'\\n\\n# Run external tool synchronously\\nif (exec 'git commit -am \\\"Auto-commit\\\"').code != 0\\n  echo 'Error: Git commit failed'\\n  exit 1\\n```\\n\\n## Global vs. Local\\n\\nThe example above uses the convenience script `shelljs/global` to reduce verbosity. If polluting your global namespace is not desirable, simply require `shelljs`.\\n\\nExample:\\n\\n```javascript\\nvar shell = require('shelljs');\\nshell.echo('hello world');\\n```\\n\\n## Make tool\\n\\nA convenience script `shelljs/make` is also provided to mimic the behavior of a Unix Makefile. In this case all shell objects are global, and command line arguments will cause the script to execute only the corresponding function in the global `target` object. To avoid redundant calls, target functions are executed only once per script.\\n\\nExample (CoffeeScript):\\n\\n```coffeescript\\nrequire 'shelljs/make'\\n\\ntarget.all = ->\\n  target.bundle()\\n  target.docs()\\n\\ntarget.bundle = ->\\n  cd __dirname\\n  mkdir 'build'\\n  cd 'lib'\\n  (cat '*.js').to '../build/output.js'\\n\\ntarget.docs = ->\\n  cd __dirname\\n  mkdir 'docs'\\n  cd 'lib'\\n  for file in ls '*.js'\\n    text = grep '//@', file     # extract special comments\\n    text.replace '//@', ''      # remove comment tags\\n    text.to 'docs/my_docs.md'\\n```\\n\\nTo run the target `all`, call the above script without arguments: `$ node make`. To run the target `docs`: `$ node make docs`, and so on.\\n\\n\\n\\n<!-- \\n\\n  DO NOT MODIFY BEYOND THIS POINT - IT'S AUTOMATICALLY GENERATED\\n\\n-->\\n\\n\\n## Command reference\\n\\n\\nAll commands run synchronously, unless otherwise stated.\\n\\n\\n### cd('dir')\\nChanges to directory `dir` for the duration of the script\\n\\n### pwd()\\nReturns the current directory.\\n\\n### ls([options ,] path [,path ...])\\n### ls([options ,] path_array)\\nAvailable options:\\n\\n+ `-R`: recursive\\n+ `-A`: all files (include files beginning with `.`, except for `.` and `..`)\\n\\nExamples:\\n\\n```javascript\\nls('projs/*.js');\\nls('-R', '/users/me', '/tmp');\\nls('-R', ['/users/me', '/tmp']); // same as above\\n```\\n\\nReturns array of files in the given path, or in current directory if no path provided.\\n\\n### find(path [,path ...])\\n### find(path_array)\\nExamples:\\n\\n```javascript\\nfind('src', 'lib');\\nfind(['src', 'lib']); // same as above\\nfind('.').filter(function(file) { return file.match(/\\\\.js$/); });\\n```\\n\\nReturns array of all files (however deep) in the given paths.\\n\\nThe main difference from `ls('-R', path)` is that the resulting file names\\ninclude the base directories, e.g. `lib/resources/file1` instead of just `file1`.\\n\\n### cp([options ,] source [,source ...], dest)\\n### cp([options ,] source_array, dest)\\nAvailable options:\\n\\n+ `-f`: force\\n+ `-r, -R`: recursive\\n\\nExamples:\\n\\n```javascript\\ncp('file1', 'dir1');\\ncp('-Rf', '/tmp/*', '/usr/local/*', '/home/tmp');\\ncp('-Rf', ['/tmp/*', '/usr/local/*'], '/home/tmp'); // same as above\\n```\\n\\nCopies files. The wildcard `*` is accepted.\\n\\n### rm([options ,] file [, file ...])\\n### rm([options ,] file_array)\\nAvailable options:\\n\\n+ `-f`: force\\n+ `-r, -R`: recursive\\n\\nExamples:\\n\\n```javascript\\nrm('-rf', '/tmp/*');\\nrm('some_file.txt', 'another_file.txt');\\nrm(['some_file.txt', 'another_file.txt']); // same as above\\n```\\n\\nRemoves files. The wildcard `*` is accepted.\\n\\n### mv(source [, source ...], dest')\\n### mv(source_array, dest')\\nAvailable options:\\n\\n+ `f`: force\\n\\nExamples:\\n\\n```javascript\\nmv('-f', 'file', 'dir/');\\nmv('file1', 'file2', 'dir/');\\nmv(['file1', 'file2'], 'dir/'); // same as above\\n```\\n\\nMoves files. The wildcard `*` is accepted.\\n\\n### mkdir([options ,] dir [, dir ...])\\n### mkdir([options ,] dir_array)\\nAvailable options:\\n\\n+ `p`: full path (will create intermediate dirs if necessary)\\n\\nExamples:\\n\\n```javascript\\nmkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\\nmkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\\n```\\n\\nCreates directories.\\n\\n### test(expression)\\nAvailable expression primaries:\\n\\n+ `'-b', 'path'`: true if path is a block device\\n+ `'-c', 'path'`: true if path is a character device\\n+ `'-d', 'path'`: true if path is a directory\\n+ `'-e', 'path'`: true if path exists\\n+ `'-f', 'path'`: true if path is a regular file\\n+ `'-L', 'path'`: true if path is a symboilc link\\n+ `'-p', 'path'`: true if path is a pipe (FIFO)\\n+ `'-S', 'path'`: true if path is a socket\\n\\nExamples:\\n\\n```javascript\\nif (test('-d', path)) { /* do something with dir */ };\\nif (!test('-f', path)) continue; // skip if it's a regular file\\n```\\n\\nEvaluates expression using the available primaries and returns corresponding value.\\n\\n### cat(file [, file ...])\\n### cat(file_array)\\n\\nExamples:\\n\\n```javascript\\nvar str = cat('file*.txt');\\nvar str = cat('file1', 'file2');\\nvar str = cat(['file1', 'file2']); // same as above\\n```\\n\\nReturns a string containing the given file, or a concatenated string\\ncontaining the files if more than one file is given (a new line character is\\nintroduced between each file). Wildcard `*` accepted.\\n\\n### 'string'.to(file)\\n\\nExamples:\\n\\n```javascript\\ncat('input.txt').to('output.txt');\\n```\\n\\nAnalogous to the redirection operator `>` in Unix, but works with JavaScript strings (such as\\nthose returned by `cat`, `grep`, etc). _Like Unix redirections, `to()` will overwrite any existing file!_\\n\\n### sed([options ,] search_regex, replace_str, file)\\nAvailable options:\\n\\n+ `-i`: Replace contents of 'file' in-place. _Note that no backups will be created!_\\n\\nExamples:\\n\\n```javascript\\nsed('-i', 'PROGRAM_VERSION', 'v0.1.3', 'source.js');\\nsed(/.*DELETE_THIS_LINE.*\\\\n/, '', 'source.js');\\n```\\n\\nReads an input string from `file` and performs a JavaScript `replace()` on the input\\nusing the given search regex and replacement string. Returns the new string after replacement.\\n\\n### grep([options ,] regex_filter, file [, file ...])\\n### grep([options ,] regex_filter, file_array)\\nAvailable options:\\n\\n+ `-v`: Inverse the sense of the regex and print the lines not matching the criteria.\\n\\nExamples:\\n\\n```javascript\\ngrep('-v', 'GLOBAL_VARIABLE', '*.js');\\ngrep('GLOBAL_VARIABLE', '*.js');\\n```\\n\\nReads input string from given files and returns a string containing all lines of the\\nfile that match the given `regex_filter`. Wildcard `*` accepted.\\n\\n### which(command)\\n\\nExamples:\\n\\n```javascript\\nvar nodeExec = which('node');\\n```\\n\\nSearches for `command` in the system's PATH. On Windows looks for `.exe`, `.cmd`, and `.bat` extensions.\\nReturns string containing the absolute path to the command.\\n\\n### echo(string [,string ...])\\n\\nExamples:\\n\\n```javascript\\necho('hello world');\\nvar str = echo('hello world');\\n```\\n\\nPrints string to stdout, and returns string with additional utility methods\\nlike `.to()`.\\n\\n### dirs([options | '+N' | '-N'])\\n\\nAvailable options:\\n\\n+ `-c`: Clears the directory stack by deleting all of the elements.\\n\\nArguments:\\n\\n+ `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\\n+ `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\\n\\nDisplay the list of currently remembered directories. Returns an array of paths in the stack, or a single path if +N or -N was specified.\\n\\nSee also: pushd, popd\\n\\n### pushd([options,] [dir | '-N' | '+N'])\\n\\nAvailable options:\\n\\n+ `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\\n\\nArguments:\\n\\n+ `dir`: Makes the current working directory be the top of the stack, and then executes the equivalent of `cd dir`.\\n+ `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\\n+ `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\\n\\nExamples:\\n\\n```javascript\\n// process.cwd() === '/usr'\\npushd('/etc'); // Returns /etc /usr\\npushd('+1');   // Returns /usr /etc\\n```\\n\\nSave the current directory on the top of the directory stack and then cd to `dir`. With no arguments, pushd exchanges the top two directories. Returns an array of paths in the stack.\\n\\n### popd([options,] ['-N' | '+N'])\\n\\nAvailable options:\\n\\n+ `-n`: Suppresses the normal change of directory when removing directories from the stack, so that only the stack is manipulated.\\n\\nArguments:\\n\\n+ `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\\n+ `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\\n\\nExamples:\\n\\n```javascript\\necho(process.cwd()); // '/usr'\\npushd('/etc');       // '/etc /usr'\\necho(process.cwd()); // '/etc'\\npopd();              // '/usr'\\necho(process.cwd()); // '/usr'\\n```\\n\\nWhen no arguments are given, popd removes the top directory from the stack and performs a cd to the new top directory. The elements are numbered from 0 starting at the first directory listed with dirs; i.e., popd is equivalent to popd +0. Returns an array of paths in the stack.\\n\\n### exit(code)\\nExits the current process with the given exit code.\\n\\n### env['VAR_NAME']\\nObject containing environment variables (both getter and setter). Shortcut to process.env.\\n\\n### exec(command [, options] [, callback])\\nAvailable options (all `false` by default):\\n\\n+ `async`: Asynchronous execution. Defaults to true if a callback is provided.\\n+ `silent`: Do not echo program output to console.\\n\\nExamples:\\n\\n```javascript\\nvar version = exec('node --version', {silent:true}).output;\\n\\nvar child = exec('some_long_running_process', {async:true});\\nchild.stdout.on('data', function(data) {\\n  /* ... do something with data ... */\\n});\\n\\nexec('some_long_running_process', function(code, output) {\\n  console.log('Exit code:', code);\\n  console.log('Program output:', output);\\n});\\n```\\n\\nExecutes the given `command` _synchronously_, unless otherwise specified.\\nWhen in synchronous mode returns the object `{ code:..., output:... }`, containing the program's\\n`output` (stdout + stderr)  and its exit `code`. Otherwise returns the child process object, and\\nthe `callback` gets the arguments `(code, output)`.\\n\\n**Note:** For long-lived processes, it's best to run `exec()` asynchronously as\\nthe current synchronous implementation uses a lot of CPU. This should be getting\\nfixed soon.\\n\\n### chmod(octal_mode || octal_string, file)\\n### chmod(symbolic_mode, file)\\n\\nAvailable options:\\n\\n+ `-v`: output a diagnostic for every file processed\\n+ `-c`: like verbose but report only when a change is made\\n+ `-R`: change files and directories recursively\\n\\nExamples:\\n\\n```javascript\\nchmod(755, '/Users/brandon');\\nchmod('755', '/Users/brandon'); // same as above \\nchmod('u+x', '/Users/brandon');\\n```\\n\\nAlters the permissions of a file or directory by either specifying the\\nabsolute permissions in octal form or expressing the changes in symbols.\\nThis command tries to mimic the POSIX behavior as much as possible.\\nNotable exceptions:\\n\\n+ In symbolic modes, 'a-r' and '-r' are identical.  No consideration is\\n  given to the umask.\\n+ There is no \\\"quiet\\\" option since default behavior is to run silent.\\n\\n## Configuration\\n\\n\\n### config.silent\\nExample:\\n\\n```javascript\\nvar silentState = config.silent; // save old silent state\\nconfig.silent = true;\\n/* ... */\\nconfig.silent = silentState; // restore old silent state\\n```\\n\\nSuppresses all command output if `true`, except for `echo()` calls.\\nDefault is `false`.\\n\\n### config.fatal\\nExample:\\n\\n```javascript\\nconfig.fatal = true;\\ncp('this_file_does_not_exist', '/dev/null'); // dies here\\n/* more commands... */\\n```\\n\\nIf `true` the script will die on errors. Default is `false`.\\n\\n## Non-Unix commands\\n\\n\\n### tempdir()\\nSearches and returns string containing a writeable, platform-dependent temporary directory.\\nFollows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\\n\\n### error()\\nTests if error occurred in the last command. Returns `null` if no error occurred,\\notherwise returns string explaining the error\\n\",\n   38    \"readmeFilename\": \"README.md\",\n   39    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\shelljs\\README.md:\n  284  \n  285  Returns a string containing the given file, or a concatenated string\n  286: containing the files if more than one file is given (a new line character is\n  287  introduced between each file). Wildcard `*` accepted.\n  288  \n  ...\n  311  \n  312  Reads an input string from `file` and performs a JavaScript `replace()` on the input\n  313: using the given search regex and replacement string. Returns the new string after replacement.\n  314  \n  315  ### grep([options ,] regex_filter, file [, file ...])\n  ...\n  410  ```\n  411  \n  412: When no arguments are given, popd removes the top directory from the stack and performs a cd to the new top directory. The elements are numbered from 0 starting at the first directory listed with dirs; i.e., popd is equivalent to popd +0. Returns an array of paths in the stack.\n  413  \n  414  ### exit(code)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\shelljs\\shell.js:\n  161        // Iterate over directory contents\n  162        fs.readdirSync(dirname).forEach(function(file) {\n  163:         if (file.match(new RegExp(regexp))) {\n  164            if (!pushFile(path.normalize(dirname+'/'+file), basename))\n  165              return;\n  ...\n  314          // Recursive\n  315          // 'cp /a/source dest' should create 'source' in 'dest'\n  316:         var newDest = path.join(dest, path.basename(src)),\n  317              checkDir = fs.statSync(src);\n  318          try {\n  319:           fs.mkdirSync(newDest, checkDir.mode);\n  320          } catch (e) {\n  321            //if the directory already exists, that's okay\n  ...\n  323          }\n  324  \n  325:         cpdirSyncRecursive(src, newDest, {force: options.force});\n  326        }\n  327        return; // done with dir\n  ...\n  643  //@\n  644  //@ Returns a string containing the given file, or a concatenated string\n  645: //@ containing the files if more than one file is given (a new line character is\n  646  //@ introduced between each file). Wildcard `*` accepted.\n  647  function _cat(options, files) {\n  ...\n  716  //@\n  717  //@ Reads an input string from `file` and performs a JavaScript `replace()` on the input\n  718: //@ using the given search regex and replacement string. Returns the new string after replacement.\n  719  function _sed(options, regex, replacement, file) {\n  720    options = parseOptions(options, {\n  ...\n 1035  //@ ```\n 1036  //@\n 1037: //@ When no arguments are given, popd removes the top directory from the stack and performs a cd to the new top directory. The elements are numbered from 0 starting at the first directory listed with dirs; i.e., popd is equivalent to popd +0. Returns an array of paths in the stack.\n 1038  function _popd(options, index) {\n 1039    if (_isStackIndex(options)) {\n ....\n 1248      var type = perms & PERMS.TYPE_MASK;\n 1249  \n 1250:     var newPerms = perms;\n 1251  \n 1252      if (isNaN(parseInt(mode, 8))) {\n ....\n 1290            switch (operator) {\n 1291              case '+':\n 1292:               newPerms |= mask;\n 1293                break;\n 1294  \n 1295              case '-':\n 1296:               newPerms &= ~mask;\n 1297                break;\n 1298  \n 1299              case '=':\n 1300:               newPerms = type + mask;\n 1301  \n 1302                // According to POSIX, when using = to explicitly set the permissions, setuid and setgid can never be cleared.\n 1303                if (fs.statSync(file).isDirectory()) {\n 1304:                 newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n 1305                }\n 1306                break;\n ....\n 1308  \n 1309            if (options.verbose) {\n 1310:             log(file + ' -> ' + newPerms.toString(8));\n 1311            }\n 1312  \n 1313:           if (perms != newPerms) {\n 1314              if (!options.verbose && options.changes) {\n 1315:               log(file + ' -> ' + newPerms.toString(8));\n 1316              }\n 1317:             fs.chmodSync(file, newPerms);\n 1318            }\n 1319          }\n ....\n 1325      else {\n 1326        // they gave us a full number\n 1327:       newPerms = type + parseInt(mode, 8);\n 1328  \n 1329        // POSIX rules are that setuid and setgid can only be added using numeric form, but not cleared.\n 1330        if (fs.statSync(file).isDirectory()) {\n 1331:         newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n 1332        }\n 1333  \n 1334:       fs.chmodSync(file, newPerms);\n 1335      }\n 1336    });\n ....\n 1515  \n 1516    var BUF_LENGTH = 64*1024,\n 1517:       buf = new Buffer(BUF_LENGTH),\n 1518        bytesRead = BUF_LENGTH,\n 1519        pos = 0,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\underscore\\CONTRIBUTING.md:\n    7  * Use the same coding style as the rest of the [codebase](https://github.com/documentcloud/underscore/blob/master/underscore.js).\n    8  \n    9: * In your pull request, do not add documentation or re-build the minified `underscore-min.js` file. We'll do those things before cutting a new release.\n   10  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\underscore\\index.html:\n  422          <span class=\"alias\">Alias: <b>collect</b></span>\n  423          <br />\n  424:         Produces a new array of values by mapping each value in <b>list</b>\n  425          through a transformation function (<b>iterator</b>). If the native <b>map</b> method\n  426          exists, it will be used instead. If <b>list</b> is a JavaScript object,\n  ...\n  510        </p>\n  511        <pre>\n  512: _.findWhere(publicServicePulitzers, {newsroom: \"The New York Times\"});\n  513: =&gt; {year: 1918, newsroom: \"The New York Times\",\n  514    reason: \"For its public service in publishing in full so many official reports,\n  515    documents and speeches by European statesmen relating to the progress and\n  ...\n 1022          <b class=\"header\">throttle</b><code>_.throttle(function, wait)</code>\n 1023          <br />\n 1024:         Creates and returns a new, throttled version of the passed function,\n 1025          that, when invoked repeatedly, will only actually call the original function\n 1026          at most once per every <b>wait</b>\n ....\n 1036          <b class=\"header\">debounce</b><code>_.debounce(function, wait, [immediate])</code>\n 1037          <br />\n 1038:         Creates and returns a new debounced version of the passed function that\n 1039          will postpone its execution until after\n 1040          <b>wait</b> milliseconds have elapsed since the last time it\n ....\n 1399        </p>\n 1400        <pre>\n 1401: _.isDate(new Date());\n 1402  =&gt; true\n 1403  </pre>\n ....\n 2134            </li>\n 2135            <li>\n 2136:             A new <tt>_.initial</tt> function was added, as a mirror of <tt>_.rest</tt>,\n 2137              which returns all the initial values of a list (except the last N).\n 2138            </li>\n ....\n 2222          This is a backwards-incompatible change. <tt>_.template</tt> may now be\n 2223          called with no arguments, and preserves whitespace. <tt>_.contains</tt>\n 2224:         is a new alias for <tt>_.include</tt>.\n 2225        </p>\n 2226  \n ....\n 2263          Major release. Incorporates a number of\n 2264          <a href=\"http://github.com/ratbeard\">Mile Frawley's</a> refactors for\n 2265:         safer duck-typing on collection functions, and cleaner internals. A new\n 2266          <tt>_.mixin</tt> method that allows you to extend Underscore with utility\n 2267          functions of your own. Added <tt>_.times</tt>, which works the same as in\n ....\n 2306        <p>\n 2307          <b class=\"header\">0.5.2</b><br />\n 2308:         New implementations of <tt>isArray</tt>, <tt>isDate</tt>, <tt>isFunction</tt>,\n 2309          <tt>isNumber</tt>, <tt>isRegExp</tt>, and <tt>isString</tt>, thanks to\n 2310          a suggestion from\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\underscore\\underscore-min.js:\n    1: (function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,d=e.filter,g=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,_=Object.keys,j=i.bind,w=function(n){return n instanceof w?n:this instanceof w?(this._wrapped=n,void 0):new w(n)};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=w),exports._=w):n._=w,w.VERSION=\"1.4.4\";var A=w.each=w.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a in n)if(w.has(n,a)&&t.call(e,n[a],a,n)===r)return};w.map=w.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e[e.length]=t.call(r,n,u,i)}),e)};var O=\"Reduce of empty array with no initial value\";w.reduce=w.foldl=w.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=w.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(O);return r},w.reduceRight=w.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=w.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=w.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(O);return r},w.find=w.detect=function(n,t,r){var e;return E(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},w.filter=w.select=function(n,t,r){var e=[];return null==n?e:d&&n.filter===d?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&(e[e.length]=n)}),e)},w.reject=function(n,t,r){return w.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},w.every=w.all=function(n,t,e){t||(t=w.identity);var u=!0;return null==n?u:g&&n.every===g?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var E=w.some=w.any=function(n,t,e){t||(t=w.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};w.contains=w.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:E(n,function(n){return n===t})},w.invoke=function(n,t){var r=o.call(arguments,2),e=w.isFunction(t);return w.map(n,function(n){return(e?t:n[t]).apply(n,r)})},w.pluck=function(n,t){return w.map(n,function(n){return n[t]})},w.where=function(n,t,r){return w.isEmpty(t)?r?null:[]:w[r?\"find\":\"filter\"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},w.findWhere=function(n,t){return w.where(n,t,!0)},w.max=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.max.apply(Math,n);if(!t&&w.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>=e.computed&&(e={value:n,computed:a})}),e.value},w.min=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.min.apply(Math,n);if(!t&&w.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;e.computed>a&&(e={value:n,computed:a})}),e.value},w.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=w.random(r++),e[r-1]=e[t],e[t]=n}),e};var k=function(n){return w.isFunction(n)?n:function(t){return t[n]}};w.sortBy=function(n,t,r){var e=k(t);return w.pluck(w.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index<t.index?-1:1}),\"value\")};var F=function(n,t,r,e){var u={},i=k(t||w.identity);return A(n,function(t,a){var o=i.call(r,t,a,n);e(u,o,t)}),u};w.groupBy=function(n,t,r){return F(n,t,r,function(n,t,r){(w.has(n,t)?n[t]:n[t]=[]).push(r)})},w.countBy=function(n,t,r){return F(n,t,r,function(n,t){w.has(n,t)||(n[t]=0),n[t]++})},w.sortedIndex=function(n,t,r,e){r=null==r?w.identity:k(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;u>r.call(e,n[o])?i=o+1:a=o}return i},w.toArray=function(n){return n?w.isArray(n)?o.call(n):n.length===+n.length?w.map(n,w.identity):w.values(n):[]},w.size=function(n){return null==n?0:n.length===+n.length?n.length:w.keys(n).length},w.first=w.head=w.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},w.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},w.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},w.rest=w.tail=w.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},w.compact=function(n){return w.filter(n,w.identity)};var R=function(n,t,r){return A(n,function(n){w.isArray(n)?t?a.apply(r,n):R(n,t,r):r.push(n)}),r};w.flatten=function(n,t){return R(n,t,[])},w.without=function(n){return w.difference(n,o.call(arguments,1))},w.uniq=w.unique=function(n,t,r,e){w.isFunction(t)&&(e=r,r=t,t=!1);var u=r?w.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:w.contains(a,r))||(a.push(r),i.push(n[e]))}),i},w.union=function(){return w.uniq(c.apply(e,arguments))},w.intersection=function(n){var t=o.call(arguments,1);return w.filter(w.uniq(n),function(n){return w.every(t,function(t){return w.indexOf(t,n)>=0})})},w.difference=function(n){var t=c.apply(e,o.call(arguments,1));return w.filter(n,function(n){return!w.contains(t,n)})},w.zip=function(){for(var n=o.call(arguments),t=w.max(w.pluck(n,\"length\")),r=Array(t),e=0;t>e;e++)r[e]=w.pluck(n,\"\"+e);return r},w.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},w.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if(\"number\"!=typeof r)return e=w.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},w.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},w.range=function(n,t,r){1>=arguments.length&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=Array(e);e>u;)i[u++]=n,n+=r;return i},w.bind=function(n,t){if(n.bind===j&&j)return j.apply(n,o.call(arguments,1));var r=o.call(arguments,2);return function(){return n.apply(t,r.concat(o.call(arguments)))}},w.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},w.bindAll=function(n){var t=o.call(arguments,1);return 0===t.length&&(t=w.functions(n)),A(t,function(t){n[t]=w.bind(n[t],n)}),n},w.memoize=function(n,t){var r={};return t||(t=w.identity),function(){var e=t.apply(this,arguments);return w.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},w.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},w.defer=function(n){return w.delay.apply(w,[n,1].concat(o.call(arguments,1)))},w.throttle=function(n,t){var r,e,u,i,a=0,o=function(){a=new Date,u=null,i=n.apply(r,e)};return function(){var c=new Date,l=t-(c-a);return r=this,e=arguments,0>=l?(clearTimeout(u),u=null,a=c,i=n.apply(r,e)):u||(u=setTimeout(o,l)),i}},w.debounce=function(n,t,r){var e,u;return function(){var i=this,a=arguments,o=function(){e=null,r||(u=n.apply(i,a))},c=r&&!e;return clearTimeout(e),e=setTimeout(o,t),c&&(u=n.apply(i,a)),u}},w.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},w.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},w.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},w.after=function(n,t){return 0>=n?t():function(){return 1>--n?t.apply(this,arguments):void 0}},w.keys=_||function(n){if(n!==Object(n))throw new TypeError(\"Invalid object\");var t=[];for(var r in n)w.has(n,r)&&(t[t.length]=r);return t},w.values=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push(n[r]);return t},w.pairs=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push([r,n[r]]);return t},w.invert=function(n){var t={};for(var r in n)w.has(n,r)&&(t[n[r]]=r);return t},w.functions=w.methods=function(n){var t=[];for(var r in n)w.isFunction(n[r])&&t.push(r);return t.sort()},w.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},w.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},w.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)w.contains(r,u)||(t[u]=n[u]);return t},w.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)null==n[r]&&(n[r]=t[r])}),n},w.clone=function(n){return w.isObject(n)?w.isArray(n)?n.slice():w.extend({},n):n},w.tap=function(n,t){return t(n),n};var I=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof w&&(n=n._wrapped),t instanceof w&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case\"[object String]\":return n==t+\"\";case\"[object Number]\":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case\"[object Date]\":case\"[object Boolean]\":return+n==+t;case\"[object RegExp]\":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if(\"object\"!=typeof n||\"object\"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;r.push(n),e.push(t);var a=0,o=!0;if(\"[object Array]\"==u){if(a=n.length,o=a==t.length)for(;a--&&(o=I(n[a],t[a],r,e)););}else{var c=n.constructor,f=t.constructor;if(c!==f&&!(w.isFunction(c)&&c instanceof c&&w.isFunction(f)&&f instanceof f))return!1;for(var s in n)if(w.has(n,s)&&(a++,!(o=w.has(t,s)&&I(n[s],t[s],r,e))))break;if(o){for(s in t)if(w.has(t,s)&&!a--)break;o=!a}}return r.pop(),e.pop(),o};w.isEqual=function(n,t){return I(n,t,[],[])},w.isEmpty=function(n){if(null==n)return!0;if(w.isArray(n)||w.isString(n))return 0===n.length;for(var t in n)if(w.has(n,t))return!1;return!0},w.isElement=function(n){return!(!n||1!==n.nodeType)},w.isArray=x||function(n){return\"[object Array]\"==l.call(n)},w.isObject=function(n){return n===Object(n)},A([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\"],function(n){w[\"is\"+n]=function(t){return l.call(t)==\"[object \"+n+\"]\"}}),w.isArguments(arguments)||(w.isArguments=function(n){return!(!n||!w.has(n,\"callee\"))}),\"function\"!=typeof/./&&(w.isFunction=function(n){return\"function\"==typeof n}),w.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},w.isNaN=function(n){return w.isNumber(n)&&n!=+n},w.isBoolean=function(n){return n===!0||n===!1||\"[object Boolean]\"==l.call(n)},w.isNull=function(n){return null===n},w.isUndefined=function(n){return n===void 0},w.has=function(n,t){return f.call(n,t)},w.noConflict=function(){return n._=t,this},w.identity=function(n){return n},w.times=function(n,t,r){for(var e=Array(n),u=0;n>u;u++)e[u]=t.call(r,u);return e},w.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var M={escape:{\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"/\":\"&#x2F;\"}};M.unescape=w.invert(M.escape);var S={escape:RegExp(\"[\"+w.keys(M.escape).join(\"\")+\"]\",\"g\"),unescape:RegExp(\"(\"+w.keys(M.unescape).join(\"|\")+\")\",\"g\")};w.each([\"escape\",\"unescape\"],function(n){w[n]=function(t){return null==t?\"\":(\"\"+t).replace(S[n],function(t){return M[n][t]})}}),w.result=function(n,t){if(null==n)return null;var r=n[t];return w.isFunction(r)?r.call(n):r},w.mixin=function(n){A(w.functions(n),function(t){var r=w[t]=n[t];w.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),D.call(this,r.apply(w,n))}})};var N=0;w.uniqueId=function(n){var t=++N+\"\";return n?n+t:t},w.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var T=/(.)^/,q={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},B=/\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;w.template=function(n,t,r){var e;r=w.defaults({},r,w.templateSettings);var u=RegExp([(r.escape||T).source,(r.interpolate||T).source,(r.evaluate||T).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(B,function(n){return\"\\\\\"+q[n]}),r&&(a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\"),e&&(a+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\"),u&&(a+=\"';\\n\"+u+\"\\n__p+='\"),i=o+t.length,t}),a+=\"';\\n\",r.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{e=Function(r.variable||\"obj\",\"_\",a)}catch(o){throw o.source=a,o}if(t)return e(t,w);var c=function(n){return e.call(this,n,w)};return c.source=\"function(\"+(r.variable||\"obj\")+\"){\\n\"+a+\"}\",c},w.chain=function(n){return w(n).chain()};var D=function(n){return this._chain?w(n).chain():n};w.mixin(w),A([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=e[n];w.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),\"shift\"!=n&&\"splice\"!=n||0!==r.length||delete r[0],D.call(this,r)}}),A([\"concat\",\"join\",\"slice\"],function(n){var t=e[n];w.prototype[n]=function(){return D.call(this,t.apply(this._wrapped,arguments))}}),w.extend(w.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\underscore\\underscore.js:\n   47    var _ = function(obj) {\n   48      if (obj instanceof _) return obj;\n   49:     if (!(this instanceof _)) return new _(obj);\n   50      this._wrapped = obj;\n   51    };\n   ..\n  121        }\n  122      });\n  123:     if (!initial) throw new TypeError(reduceError);\n  124      return memo;\n  125    };\n  ...\n  148        }\n  149      });\n  150:     if (!initial) throw new TypeError(reduceError);\n  151      return memo;\n  152    };\n  ...\n  493      var args = slice.call(arguments);\n  494      var length = _.max(_.pluck(args, 'length'));\n  495:     var results = new Array(length);\n  496      for (var i = 0; i < length; i++) {\n  497        results[i] = _.pluck(args, \"\" + i);\n  ...\n  562      var len = Math.max(Math.ceil((stop - start) / step), 0);\n  563      var idx = 0;\n  564:     var range = new Array(len);\n  565  \n  566      while(idx < len) {\n  ...\n  633      var previous = 0;\n  634      var later = function() {\n  635:       previous = new Date;\n  636        timeout = null;\n  637        result = func.apply(context, args);\n  638      };\n  639      return function() {\n  640:       var now = new Date;\n  641        var remaining = wait - (now - previous);\n  642        context = this;\n  ...\n  727    // Delegates to **ECMAScript 5**'s native `Object.keys`\n  728    _.keys = nativeKeys || function(obj) {\n  729:     if (obj !== Object(obj)) throw new TypeError('Invalid object');\n  730      var keys = [];\n  731      for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n  ...\n  839        case '[object String]':\n  840          // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n  841:         // equivalent to `new String(\"5\")`.\n  842          return a == String(b);\n  843        case '[object Number]':\n  ...\n 1042    // Regexes containing the keys and values listed immediately above.\n 1043    var entityRegexes = {\n 1044:     escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n 1045:     unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n 1046    };\n 1047  \n ....\n 1119  \n 1120      // Combine delimiters into one regular expression via alternation.\n 1121:     var matcher = new RegExp([\n 1122        (settings.escape || noMatch).source,\n 1123        (settings.interpolate || noMatch).source,\n ....\n 1154  \n 1155      try {\n 1156:       render = new Function(settings.variable || 'obj', '_', source);\n 1157      } catch (e) {\n 1158        e.source = source;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\src\\cli.js:\n  213  \n  214  		if (shjs.test(\"-d\", fp) && ip.match(/^[^\\/]*\\/?$/) &&\n  215: 			fp.match(new RegExp(\"^\" + ip + \".*\"))) {\n  216  			return true;\n  217  		}\n  ...\n  342  		var files = [];\n  343  \n  344: 		var reg = new RegExp(\"\\\\.(js\" +\n  345  			(!opts.extensions ? \"\" : \"|\" +\n  346  				opts.extensions.replace(/,/g, \"|\").replace(/[\\. ]/g, \"\")) + \")$\");\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\src\\jshint.js:\n  111  			multistr    : true, // allow multiline strings\n  112  			freeze      : true, // if modifying native object prototypes should be disallowed\n  113: 			newcap      : true, // if constructor names must be capitalized\n  114  			noarg       : true, // if arguments.caller and arguments.callee should be\n  115  			                    // disallowed\n  ...\n  117  			                    // predefined\n  118  			noempty     : true, // if empty blocks should be disallowed\n  119: 			nonew       : true, // if using `new` for side-effects should be disallowed\n  120  			nonstandard : true, // if non-standard (but widely adopted) globals should\n  121  			                    // be predefined\n  ...\n  139  			strict      : true, // require the \"use strict\"; pragma\n  140  			sub         : true, // if all forms of subscript notation are tolerated\n  141: 			supernew    : true, // if `new function () { ... };` and `new Object;`\n  142  			                    // should be tolerated\n  143  			trailing    : true, // if trailing whitespace rules apply\n  ...\n  193  			bitwise : true,\n  194  			forin   : true,\n  195: 			newcap  : true,\n  196  			nomen   : true,\n  197  			plusplus: true,\n  ...\n  244  \n  245  		extraModules = [],\n  246: 		emitter = new events.EventEmitter();\n  247  \n  248  	function checkOption(name, t) {\n  ...\n  802  					}\n  803  \n  804: 					if (key === \"newcap\") {\n  805: 						state.option[\"(explicitNewcap)\"] = true;\n  806  					}\n  807  					return;\n  ...\n  937  			}\n  938  			isLetExpr = true;\n  939: 			// create a new block scope we use only for the current expression\n  940  			funct[\"(blockscope)\"].stack();\n  941  			advance(\"let\");\n  ...\n  968  				isObject = state.tokens.curr.value === \"Object\";\n  969  \n  970: 				// #527, new Foo.Array(), Foo.Array(), new Foo.Object(), Foo.Object()\n  971  				// Line breaks in IfStatement heads exist to satisfy the checkJSHint\n  972  				// \"Line too long.\" error.\n  973  				if (left && (left.value || (left.first && left.first.value))) {\n  974: 					// If the left.value is not \"new\", or the left.first.value is a \".\"\n  975: 					// then safely assume that this is not \"new Array()\" and possibly\n  976: 					// not \"new Object()\"...\n  977: 					if (left.value !== \"new\" ||\n  978  					  (left.first && left.first.value && left.first.value === \".\")) {\n  979  						isArray = false;\n  980  						// ...In the case of Object, if the left.value and state.tokens.curr.value\n  981: 						// are not equal, then safely assume that this not \"new Object()\"\n  982  						if (left.value !== state.tokens.curr.value) {\n  983  							isObject = false;\n  ...\n 1689  			if (!state.option.expr && (!r || !r.exps)) {\n 1690  				warning(\"W030\", state.tokens.curr);\n 1691: 			} else if (state.option.nonew && r && r.left && r.id === \"(\" && r.left.id === \"new\") {\n 1692  				warning(\"W031\", t);\n 1693  			}\n ....\n 1780  \n 1781  				if (state.tokens.curr.value === \"use strict\") {\n 1782: 					if (!state.option[\"(explicitNewcap)\"])\n 1783: 						state.option.newcap = true;\n 1784  					state.option.undef = true;\n 1785  				}\n ....\n 1833  			advance(\"{\");\n 1834  \n 1835: 			// create a new block scope\n 1836  			funct[\"(blockscope)\"].stack();\n 1837  \n ....\n 1914  			noreach = true;\n 1915  			indent += state.option.indent;\n 1916: 			// test indentation only if statement is in new line\n 1917  			a = [statement(state.tokens.next.line === state.tokens.curr.line)];\n 1918  			indent -= state.option.indent;\n ....\n 2361  \n 2362  	prefix(\"typeof\", \"typeof\");\n 2363: 	prefix(\"new\", function () {\n 2364  		var c = expression(155), i;\n 2365  		if (c && c.id !== \"function\") {\n 2366  			if (c.identifier) {\n 2367: 				c[\"new\"] = true;\n 2368  				switch (c.value) {\n 2369  				case \"Number\":\n ....\n 2386  					if (c.id !== \"function\") {\n 2387  						i = c.value.substr(0, 1);\n 2388: 						if (state.option.newcap && (i < \"A\" || i > \"Z\") && !_.has(global, c.value)) {\n 2389  							warning(\"W055\", state.tokens.curr);\n 2390  						}\n ....\n 2397  			}\n 2398  		} else {\n 2399: 			if (!state.option.supernew)\n 2400  				warning(\"W057\", this);\n 2401  		}\n 2402  		adjacent(state.tokens.curr, state.tokens.next);\n 2403: 		if (state.tokens.next.id !== \"(\" && !state.option.supernew) {\n 2404  			warning(\"W058\", state.tokens.curr, state.tokens.curr.value);\n 2405  		}\n ....\n 2407  		return this;\n 2408  	});\n 2409: 	state.syntax[\"new\"].exps = true;\n 2410  \n 2411  	prefix(\"void\").exps = true;\n ....\n 2463  						if (left.value === \"Math\") {\n 2464  							warning(\"W063\", left);\n 2465: 						} else if (state.option.newcap) {\n 2466  							warning(\"W064\", left);\n 2467  						}\n ....\n 3877  			} else if (state.tokens.next.id === \"let\") {\n 3878  				advance(\"let\");\n 3879: 				// create a new block scope\n 3880  				letscope = true;\n 3881  				funct[\"(blockscope)\"].stack();\n ....\n 3914  				} else if (state.tokens.next.id === \"let\") {\n 3915  					advance(\"let\");\n 3916: 					// create a new block scope\n 3917  					letscope = true;\n 3918  					funct[\"(blockscope)\"].stack();\n ....\n 4307  		}\n 4308  		return {stack: function () {\n 4309: 					_current = new CompArray();\n 4310  					_carrays.push(_current);\n 4311  				},\n ....\n 4515  		var i, k, x;\n 4516  		var optionKeys;\n 4517: 		var newOptionObj = {};\n 4518: 		var newIgnoredObj = {};\n 4519  \n 4520  		state.reset();\n ....\n 4572  			for (x = 0; x < optionKeys.length; x++) {\n 4573  				if (/^-W\\d{3}$/g.test(optionKeys[x])) {\n 4574: 					newIgnoredObj[optionKeys[x].slice(1)] = true;\n 4575  				} else {\n 4576: 					newOptionObj[optionKeys[x]] = o[optionKeys[x]];\n 4577  \n 4578: 					if (optionKeys[x] === \"newcap\" && o[optionKeys[x]] === false)\n 4579: 						newOptionObj[\"(explicitNewcap)\"] = true;\n 4580  \n 4581  					if (optionKeys[x] === \"indent\")\n 4582: 						newOptionObj[\"(explicitIndent)\"] = o[optionKeys[x]] === false ? false : true;\n 4583  				}\n 4584  			}\n 4585  		}\n 4586  \n 4587: 		state.option = newOptionObj;\n 4588: 		state.ignored = newIgnoredObj;\n 4589  \n 4590  		state.option.indent = state.option.indent || 4;\n ....\n 4656  		state.tokens.prev = state.tokens.curr = state.tokens.next = state.syntax[\"(begin)\"];\n 4657  \n 4658: 		lex = new Lexer(s);\n 4659  \n 4660  		lex.on(\"warning\", function (ev) {\n ....\n 4747  					return;\n 4748  \n 4749: 				var newImplied = [];\n 4750  				for (var i = 0; i < implied[name].length; i += 1) {\n 4751  					if (implied[name][i] !== line)\n 4752: 						newImplied.push(implied[name][i]);\n 4753  				}\n 4754  \n 4755: 				if (newImplied.length === 0)\n 4756  					delete implied[name];\n 4757  				else\n 4758: 					implied[name] = newImplied;\n 4759  			};\n 4760  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\src\\lex.js:\n   59   * and produces a sequence of tokens.\n   60   *\n   61:  *   var lex = new Lexer(\"var i = 0;\");\n   62   *   lex.start();\n   63   *   lex.token(); // returns the next token\n   ..\n   99  	}\n  100  \n  101: 	this.emitter = new events.EventEmitter();\n  102  	this.source = source;\n  103  	this.setLines(lines);\n  ...\n  486  		var result = /^[a-zA-Z_$][a-zA-Z0-9_$]*/.exec(this.input);\n  487  		var keywords = [\n  488: 			\"if\", \"in\", \"do\", \"var\", \"for\", \"new\",\n  489  			\"try\", \"let\", \"this\", \"else\", \"case\",\n  490  			\"void\", \"with\", \"enum\", \"while\", \"break\",\n  ...\n  871  		var startLine = this.line;\n  872  		var startChar = this.char;\n  873: 		var allowNewLine = false;\n  874  \n  875  		this.skip();\n  ...\n  880  				// If an EOL is not preceded by a backslash, show a warning\n  881  				// and proceed like it was a legit multi-line string where\n  882: 				// author simply forgot to escape the newline symbol.\n  883  				//\n  884  				// Another approach is to implicitly close a string on EOL\n  885  				// but it generates too many false positives.\n  886  \n  887: 				if (!allowNewLine) {\n  888  					this.trigger(\"warning\", {\n  889  						code: \"W112\",\n  ...\n  892  					});\n  893  				} else {\n  894: 					allowNewLine = false;\n  895  \n  896  					// Otherwise show a warning if multistr option was not set.\n  ...\n  929  			}\n  930  \n  931: 			allowNewLine = false;\n  932  			var char = this.peek();\n  933  			var jump = 1; // A length of a jump, after we're done\n  ...\n 1019  					break;\n 1020  				case \"\":\n 1021: 					allowNewLine = true;\n 1022  					char = \"\";\n 1023  					break;\n ....\n 1199  \n 1200  		try {\n 1201: 			new RegExp(body, flags.join(\"\"));\n 1202  		} catch (err) {\n 1203  			malformed = true;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\src\\messages.js:\n  100  	W028: \"Label '{a}' on {b} statement.\",\n  101  	W030: \"Expected an assignment or function call and instead saw an expression.\",\n  102: 	W031: \"Do not use 'new' for side effects.\",\n  103  	W032: \"Unnecessary semicolon.\",\n  104  	W033: \"Missing semicolon.\",\n  ...\n  126  	W055: \"A constructor name should start with an uppercase letter.\",\n  127  	W056: \"Bad constructor.\",\n  128: 	W057: \"Weird construction. Is 'new' unnecessary?\",\n  129  	W058: \"Missing '()' invoking a constructor.\",\n  130  	W059: \"Avoid arguments.{a}.\",\n  ...\n  135  		\"is the result of a function, and not the function itself.\",\n  136  	W063: \"Math is not a function.\",\n  137: 	W064: \"Missing 'new' prefix when invoking a constructor.\",\n  138  	W065: \"Missing radix parameter.\",\n  139  	W066: \"Implied eval. Consider passing a function instead of a string.\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\src\\reporters\\checkstyle.js:\n   23  			for (var r in pairs) {\n   24  				if (typeof(s) !== \"undefined\") {\n   25: 					s = s.replace(new RegExp(r, \"g\"), pairs[r]);\n   26  				}\n   27  			}\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\src\\reporters\\jslint_xml.js:\n   19  			for (var r in pairs) {\n   20  				if (typeof(s) !== \"undefined\") {\n   21: 					s = s.replace(new RegExp(r, \"g\"), pairs[r]);\n   22  				}\n   23  			}\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-jshint\\tasks\\lib\\jshint.js:\n  100      // Tab size as reported by JSHint.\n  101      var tabstr = getTabStr(options);\n  102:     var placeholderregex = new RegExp(tabstr, 'g');\n  103  \n  104      var lastfile = null;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\.editorconfig:\n    8  charset = utf-8\n    9  trim_trailing_whitespace = true\n   10: insert_final_newline = true\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\.jshintrc:\n    4    \"immed\": true,\n    5    \"latedef\": true,\n    6:   \"newcap\": true,\n    7    \"noarg\": true,\n    8    \"sub\": true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\CHANGELOG:\n   98    changes:\n   99      - Better method to spawn the grunt bin\n  100:     - Bump gaze to v0.2.0. Better handles some events and new option forceWatchMethod\n  101      - Only support Node.js >= v0.8\n  102  v0.1.2:\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\package.json:\n  113      }\n  114    ],\n  115:   \"readme\": \"# grunt-contrib-watch v0.5.3 [![Build Status](https://travis-ci.org/gruntjs/grunt-contrib-watch.png?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-watch)\\n\\n> Run predefined tasks whenever watched file patterns are added, changed or deleted.\\n\\n\\n\\n## Getting Started\\nThis plugin requires Grunt `~0.4.0`\\n\\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\\n\\n```shell\\nnpm install grunt-contrib-watch --save-dev\\n```\\n\\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\\n\\n```js\\ngrunt.loadNpmTasks('grunt-contrib-watch');\\n```\\n\\n\\n\\n\\n## Watch task\\n_Run this task with the `grunt watch` command._\\n\\n\\n### Settings\\n\\nThere are a number of options available. Please review the [minimatch options here](https://github.com/isaacs/minimatch#options). As well as some additional options as follows:\\n\\n#### files\\nType: `String|Array`\\n\\nThis defines what file patterns this task will watch. Can be a string or an array of files and/or minimatch patterns.\\n\\n#### tasks\\nType: `String|Array`\\n\\nThis defines which tasks to run when a watched file event occurs.\\n\\n#### options.spawn\\nType: `Boolean`\\nDefault: true\\n\\nWhether to spawn task runs in a child process. Setting this option to `false` speeds up the reaction time of the watch (usually 500ms faster for most) and allows subsequent task runs to share the same context. Not spawning task runs can make the watch more prone to failing so please use as needed.\\n\\nExample:\\n```js\\nwatch: {\\n  scripts: {\\n    files: ['**/*.js'],\\n    tasks: ['jshint'],\\n    options: {\\n      spawn: false,\\n    },\\n  },\\n},\\n```\\n\\n*For backwards compatibility the option `nospawn` is still available and will do the opposite of `spawn`.*\\n\\n#### options.interrupt\\nType: `Boolean`\\nDefault: false\\n\\nAs files are modified this watch task will spawn tasks in child processes. The default behavior will only spawn a new child process per target when the previous process has finished. Set the `interrupt` option to true to terminate the previous process and spawn a new one upon later changes.\\n\\nExample:\\n```js\\nwatch: {\\n  scripts: {\\n    files: '**/*.js',\\n    tasks: ['jshint'],\\n    options: {\\n      interrupt: true,\\n    },\\n  },\\n},\\n```\\n\\n#### options.debounceDelay\\nType: `Integer`\\nDefault: 500\\n\\nHow long to wait before emitting events in succession for the same filepath and status. For example if your `Gruntfile.js` file was `changed`, a `changed` event will only fire again after the given milliseconds.\\n\\nExample:\\n```js\\nwatch: {\\n  scripts: {\\n    files: '**/*.js',\\n    tasks: ['jshint'],\\n    options: {\\n      debounceDelay: 250,\\n    },\\n  },\\n},\\n```\\n\\n#### options.interval\\nType: `Integer`\\nDefault: 100\\n\\nThe `interval` is passed to `fs.watchFile`. Since `interval` is only used by `fs.watchFile` and this watcher also uses `fs.watch`; it is recommended to ignore this option. *Default is 100ms*.\\n\\n#### options.event\\nType: `String|Array`\\nDefault: `'all'`\\n\\nSpecify the type watch event that trigger the specified task. This option can be one or many of: `'all'`, `'changed'`, `'added'` and `'deleted'`.\\n\\nExample:\\n```js\\nwatch: {\\n  scripts: {\\n    files: '**/*.js',\\n    tasks: ['generateFileManifest'],\\n    options: {\\n      event: ['added', 'deleted'],\\n    },\\n  },\\n},\\n```\\n\\n#### options.forever\\nType: `Boolean`\\nDefault: true\\n\\nThis is *only a task level option* and cannot be configured per target. By default the watch task will duck punch `grunt.fatal` and `grunt.warn` to try and prevent them from exiting the watch process. If you don't want `grunt.fatal` and `grunt.warn` to be overridden set the `forever` option to `false`.\\n\\n#### options.dateFormat\\nType: `Function`\\n\\nThis is *only a task level option* and cannot be configured per target. By default when the watch has finished running tasks it will display the message `Completed in 1.301s at Thu Jul 18 2013 14:58:21 GMT-0700 (PDT) - Waiting...`. You can override this message by supplying your own function:\\n\\n```js\\nwatch: {\\n  options: {\\n    dateFormat: function(time) {\\n      grunt.log.writeln('The watch finished in ' + time + 'ms at' + (new Date()).toString());\\n      grunt.log.writeln('Waiting for more changes...');\\n    },\\n  },\\n  scripts: {\\n    files: '**/*.js',\\n    tasks: 'jshint',\\n  },\\n},\\n```\\n\\n#### options.atBegin\\nType: `Boolean`\\nDefault: false\\n\\nThis option will trigger the run of each specified task at startup of the watcher.\\n\\n#### options.livereload\\nType: `Boolean|Number|Object`\\nDefault: false\\n\\nSet to `true` or set `livereload: 1337` to a port number to enable live reloading. Default and recommended port is `35729`.\\n\\nIf enabled a live reload server will be started with the watch task per target. Then after the indicated tasks have ran, the live reload server will be triggered with the modified files.\\n\\nExample:\\n```js\\nwatch: {\\n  css: {\\n    files: '**/*.sass',\\n    tasks: ['sass'],\\n    options: {\\n      livereload: true,\\n    },\\n  },\\n},\\n```\\n\\n### Examples\\n\\n```js\\n// Simple config to run jshint any time a file is added, changed or deleted\\ngrunt.initConfig({\\n  watch: {\\n    files: ['**/*'],\\n    tasks: ['jshint'],\\n  },\\n});\\n```\\n\\n```js\\n// Advanced config. Run specific tasks when specific files are added, changed or deleted.\\ngrunt.initConfig({\\n  watch: {\\n    gruntfile: {\\n      files: 'Gruntfile.js',\\n      tasks: ['jshint:gruntfile'],\\n    },\\n    src: {\\n      files: ['lib/*.js', 'css/**/*.scss', '!lib/dontwatch.js'],\\n      tasks: ['default'],\\n    },\\n    test: {\\n      files: '<%= jshint.test.src %>',\\n      tasks: ['jshint:test', 'qunit'],\\n    },\\n  },\\n});\\n```\\n\\n#### Using the `watch` event\\nThis task will emit a `watch` event when watched files are modified. This is useful if you would like a simple notification when files are edited or if you're using this task in tandem with another task. Here is a simple example using the `watch` event:\\n\\n```js\\ngrunt.initConfig({\\n  watch: {\\n    scripts: {\\n      files: ['lib/*.js'],\\n    },\\n  },\\n});\\ngrunt.event.on('watch', function(action, filepath, target) {\\n  grunt.log.writeln(target + ': ' + filepath + ' has ' + action);\\n});\\n```\\n\\n**The `watch` event is not intended for replacing the standard Grunt API for configuring and running tasks. If you're trying to run tasks from within the `watch` event you're more than likely doing it wrong. Please read [configuring tasks](http://gruntjs.com/configuring-tasks).**\\n\\n##### Compiling Files As Needed\\nA very common request is to only compile files as needed. Here is an example that will only lint changed files with the `jshint` task:\\n\\n```js\\ngrunt.initConfig({\\n  watch: {\\n    scripts: {\\n      files: ['lib/*.js'],\\n      tasks: ['jshint'],\\n      options: {\\n        spawn: false,\\n      },\\n    },\\n  },\\n  jshint: {\\n    all: ['lib/*.js'],\\n  },\\n});\\n\\n// on watch events configure jshint:all to only run on changed file\\ngrunt.event.on('watch', function(action, filepath) {\\n  grunt.config(['jshint', 'all'], filepath);\\n});\\n```\\n\\nIf you need to dynamically modify your config, the `spawn` option must be disabled to keep the watch running under the same context.\\n\\nIf you save multiple files simultaneously you may opt for a more robust method:\\n\\n```js\\nvar changedFiles = Object.create(null);\\nvar onChange = grunt.util._.debounce(function() {\\n  grunt.config(['jshint', 'all'], Object.keys(changedFiles));\\n  changedFiles = Object.create(null);\\n}, 200);\\ngrunt.event.on('watch', function(action, filepath) {\\n  changedFiles[filepath] = action;\\n  onChange();\\n});\\n```\\n\\n#### Live Reloading\\nLive reloading is built into the watch task. Set the option `livereload` to `true` to enable on the default port `35729` or set to a custom port: `livereload: 1337`.\\n\\nThe simplest way to add live reloading to all your watch targets is by setting `livereload` to `true` at the task level. This will run a single live reload server and trigger the live reload for all your watch targets:\\n\\n```js\\ngrunt.initConfig({\\n  watch: {\\n    options: {\\n      livereload: true,\\n    },\\n    css: {\\n      files: ['public/scss/*.scss'],\\n      tasks: ['compass'],\\n    },\\n  },\\n});\\n```\\n\\nYou can also configure live reload for individual watch targets or run multiple live reload servers. Just be sure if you're starting multiple servers they operate on different ports:\\n\\n```js\\ngrunt.initConfig({\\n  watch: {\\n    css: {\\n      files: ['public/scss/*.scss'],\\n      tasks: ['compass'],\\n      options: {\\n        // Start a live reload server on the default port 35729\\n        livereload: true,\\n      },\\n    },\\n    another: {\\n      files: ['lib/*.js'],\\n      tasks: ['anothertask'],\\n      options: {\\n        // Start another live reload server on port 1337\\n        livereload: 1337,\\n      },\\n    },\\n    dont: {\\n      files: ['other/stuff/*'],\\n      tasks: ['dostuff'],\\n    },\\n  },\\n});\\n```\\n\\n##### Enabling Live Reload in Your HTML\\nOnce you've started a live reload server you'll be able to access the live reload script. To enable live reload on your page, add a script tag before your closing `</body>` tag pointing to the `livereload.js` script:\\n\\n```html\\n<script src=\\\"http://localhost:35729/livereload.js\\\"></script>\\n```\\n\\nFeel free to add this script to your template situation and toggle with some sort of `dev` flag.\\n\\n##### Using Live Reload with the Browser Extension\\nInstead of adding a script tag to your page, you can live reload your page by installing a browser extension. Please visit [how do I install and use the browser extensions](http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-) for help installing an extension for your browser.\\n\\nOnce installed please use the default live reload port `35729` and the browser extension will automatically reload your page without needing the `<script>` tag.\\n\\n##### Using Connect Middleware\\nSince live reloading is used when developing, you may want to disable building for production (and are not using the browser extension). One method is to use Connect middleware to inject the script tag into your page. Try the [connect-livereload](https://github.com/intesso/connect-livereload) middleware for injecting the live reload script into your page.\\n\\n##### Rolling Your Own Live Reload\\nLive reloading is made easy by the library [tiny-lr](https://github.com/mklabs/tiny-lr). It is encouraged to read the documentation for `tiny-lr`. If you would like to trigger the live reload server yourself, simply POST files to the URL: `http://localhost:35729/changed`. Or if you rather roll your own live reload implementation use the following example:\\n\\n```js\\n// Create a live reload server instance\\nvar lrserver = require('tiny-lr')();\\n\\n// Listen on port 35729\\nlrserver.listen(35729, function(err) { console.log('LR Server Started'); });\\n\\n// Then later trigger files or POST to localhost:35729/changed\\nlrserver.changed({body:{files:['public/css/changed.css']}});\\n```\\n\\n##### Live Reload with Preprocessors\\nAny time a watched file is edited with the `livereload` option enabled, the file will be sent to the live reload server. Some edited files you may desire to have sent to the live reload server, such as when preprocessing (`sass`, `less`, `coffeescript`, etc). As any file not recognized will reload the entire page as opposed to just the `css` or `javascript`.\\n\\nThe solution is to point a `livereload` watch target to your destination files:\\n\\n```js\\ngrunt.initConfig({\\n  sass: {\\n    dev: {\\n      src: ['src/sass/*.sass'],\\n      dest: 'dest/css/index.css',\\n    },\\n  },\\n  watch: {\\n    sass: {\\n      // We watch and compile sass files as normal but don't live reload here\\n      files: ['src/sass/*.sass'],\\n      tasks: ['sass'],\\n    },\\n    livereload: {\\n      // Here we watch the files the sass task will compile to\\n      // These files are sent to the live reload server after sass compiles to them\\n      options: { livereload: true },\\n      files: ['dest/**/*'],\\n    },\\n  },\\n});\\n```\\n\\n### FAQs\\n\\n#### How do I fix the error `EMFILE: Too many opened files.`?\\nThis is because of your system's max opened file limit. For OSX the default is very low (256). Temporarily increase your limit with `ulimit -n 10480`, the number being the new max limit.\\n\\nIn some versions of OSX the above solution doesn't work. In that case try `launchctl limit maxfiles 10480 10480 ` and restart your terminal. See [here](http://superuser.com/questions/261023/how-to-change-default-ulimit-values-in-mac-os-x-10-6).\\n\\n#### Can I use this with Grunt v0.3?\\nYes. Although `grunt-contrib-watch` is a replacement watch task for Grunt v0.4, version `grunt-contrib-watch@0.1.x` is compatible with Grunt v0.3. `grunt-contrib-watch >= 0.2.x` is **only* compatible and recommended to use with Grunt v0.4.\\n\\n#### Why is the watch devouring all my memory/cpu?\\nLikely because of an enthusiastic pattern trying to watch thousands of files. Such as `'**/*.js'` but forgetting to exclude the `node_modules` folder with `'!**/node_modules/**'`. Try grouping your files within a subfolder or be more explicit with your file matching pattern.\\n\\nAnother reason if you're watching a large number of files could be the low default `interval`. Try increasing with `options: { interval: 5007 }`. Please see issues [#35](https://github.com/gruntjs/grunt-contrib-watch/issues/145) and [#145](https://github.com/gruntjs/grunt-contrib-watch/issues/145) for more information.\\n\\n#### Why spawn as child processes as a default?\\nThe goal of this watch task is as files are changed, run tasks as if they were triggered by the user themself. Each time a user runs `grunt` a process is spawned and tasks are ran in succession. In an effort to keep the experience consistent and continually produce expected results, this watch task spawns tasks as child processes by default.\\n\\nSandboxing task runs also allows this watch task to run more stable over long periods of time. As well as more efficiently with more complex tasks and file structures.\\n\\nSpawning does cause a performance hit (usually 500ms for most environments). It also cripples tasks that rely on the watch task to share the context with each subsequent run (i.e., reload tasks). If you would like a faster watch task or need to share the context please set the `spawn` option to `false`. Just be aware that with this option enabled, the watch task is more prone to failure.\\n\\n\\n## Release History\\n\\n * 2013-08-25   v0.5.3   Fixed for live reload missing files.\\n * 2013-08-16   v0.5.2   Fixed issue running tasks after gruntfile is reloaded. Ignores empty file paths.\\n * 2013-07-20   v0.5.1   Fixed issue with options resetting.\\n * 2013-07-18   v0.5.0   Added target name to watch event. Added atBegin option to run tasks when watcher starts. Changed nospawn option to spawn (nospawn still available for backwards compatibility). Moved libs/vars into top scope to prevent re-init. Bumped Gaze version to ~0.4. Re-grab task/target options upon each task run. Add dateFormat option to override the date/time output upon completion.\\n * 2013-05-27   v0.4.4   Remove gracefully closing SIGINT. Not needed and causes problems for Windows. Ensure tasks are an array to not conflict with cliArgs.\\n * 2013-05-11   v0.4.3   Only group changed files per target to send correct files to live reload.\\n * 2013-05-09   v0.4.2   Fix for closing watchers.\\n * 2013-05-09   v0.4.1   Removed \\\"beep\\\" notification. Tasks now optional with livereload option. Reverted \\\"run again\\\" with interrupt off to fix infinite recursion issue. Watchers now close more properly on task run.\\n * 2013-05-03   v0.4.0   Option livereload to start live reload servers. Will reload a Gruntfile before running tasks if Gruntfile is modified. Option event to only trigger watch on certain events. Refactor watch task into separate task runs per target. Option forever to override grunt.fatal/warn to help keeping the watch alive with nospawn enabled. Emit a beep upon complete. Logs all watched files with verbose flag set. If interrupt is off, will run the tasks once more if watch triggered during a previous task run. tasks property is optional for use with watch event. Watchers properly closed when exiting.\\n * 2013-02-28   v0.3.1   Fix for top level options.\\n * 2013-02-27   v0.3.0   nospawn option added to run tasks without spawning as child processes. Watch emits 'watch' events upon files being triggered with grunt.event. Completion time in seconds and date/time shown after tasks ran. Negate file patterns fixed. Tasks debounced individually to handle simultaneous triggering for multiple targets. Errors handled better and viewable with --stack cli option. Code complexity reduced making the watch task code easier to read.\\n * 2013-02-15   v0.2.0   First official release for Grunt 0.4.0.\\n * 2013-01-18   v0.2.0rc7   Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\\n * 2013-01-09   v0.2.0rc5   Updating to work with grunt v0.4.0rc5.\\n * 2012-12-15   v0.2.0a   Conversion to grunt v0.4 conventions. Remove node v0.6 and grunt v0.3 support. Allow watch task to be renamed. Use grunt.util.spawn \\\"grunt\\\" option. Updated to gaze@0.3.0, forceWatchMethod option removed.\\n * 2012-11-01   v0.1.4   Prevent watch from spawning duplicate watch tasks\\n * 2012-10-28   v0.1.3   Better method to spawn the grunt bin Bump gaze to v0.2.0. Better handles some events and new option forceWatchMethod Only support Node.js >= v0.8\\n * 2012-10-17   v0.1.2   Only spawn a process per task one at a time Add interrupt option to cancel previous spawned process Grunt v0.3 compatibility changes\\n * 2012-10-16   v0.1.1   Fallback to global grunt bin if local doesnt exist. Fatal if bin cannot be found Update to gaze 0.1.6\\n * 2012-10-08   v0.1.0   Release watch task Remove spawn from helper Run on Grunt v0.4\\n\\n---\\n\\nTask submitted by [Kyle Robinson Young](http://dontkry.com)\\n\\n*This file was generated on Sun Aug 25 2013 17:29:57.*\\n\",\n  116    \"readmeFilename\": \"README.md\",\n  117    \"_id\": \"grunt-contrib-watch@0.5.3\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\README.md:\n   66  Default: false\n   67  \n   68: As files are modified this watch task will spawn tasks in child processes. The default behavior will only spawn a new child process per target when the previous process has finished. Set the `interrupt` option to true to terminate the previous process and spawn a new one upon later changes.\n   69  \n   70  Example:\n   ..\n  140    options: {\n  141      dateFormat: function(time) {\n  142:       grunt.log.writeln('The watch finished in ' + time + 'ms at' + (new Date()).toString());\n  143        grunt.log.writeln('Waiting for more changes...');\n  144      },\n  ...\n  380  \n  381  #### How do I fix the error `EMFILE: Too many opened files.`?\n  382: This is because of your system's max opened file limit. For OSX the default is very low (256). Temporarily increase your limit with `ulimit -n 10480`, the number being the new max limit.\n  383  \n  384  In some versions of OSX the above solution doesn't work. In that case try `launchctl limit maxfiles 10480 10480 ` and restart your terminal. See [here](http://superuser.com/questions/261023/how-to-change-default-ulimit-values-in-mac-os-x-10-6).\n  ...\n  418   * 2012-12-15   v0.2.0a   Conversion to grunt v0.4 conventions. Remove node v0.6 and grunt v0.3 support. Allow watch task to be renamed. Use grunt.util.spawn \"grunt\" option. Updated to gaze@0.3.0, forceWatchMethod option removed.\n  419   * 2012-11-01   v0.1.4   Prevent watch from spawning duplicate watch tasks\n  420:  * 2012-10-28   v0.1.3   Better method to spawn the grunt bin Bump gaze to v0.2.0. Better handles some events and new option forceWatchMethod Only support Node.js >= v0.8\n  421   * 2012-10-17   v0.1.2   Only spawn a process per task one at a time Add interrupt option to cancel previous spawned process Grunt v0.3 compatibility changes\n  422   * 2012-10-16   v0.1.1   Fallback to global grunt bin if local doesnt exist. Fatal if bin cannot be found Update to gaze 0.1.6\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\docs\\watch-examples.md:\n  201  \n  202  ## How do I fix the error `EMFILE: Too many opened files.`?\n  203: This is because of your system's max opened file limit. For OSX the default is very low (256). Temporarily increase your limit with `ulimit -n 10480`, the number being the new max limit.\n  204  \n  205  In some versions of OSX the above solution doesn't work. In that case try `launchctl limit maxfiles 10480 10480 ` and restart your terminal. See [here](http://superuser.com/questions/261023/how-to-change-default-ulimit-values-in-mac-os-x-10-6).\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\docs\\watch-options.md:\n   38  Default: false\n   39  \n   40: As files are modified this watch task will spawn tasks in child processes. The default behavior will only spawn a new child process per target when the previous process has finished. Set the `interrupt` option to true to terminate the previous process and spawn a new one upon later changes.\n   41  \n   42  Example:\n   ..\n  112    options: {\n  113      dateFormat: function(time) {\n  114:       grunt.log.writeln('The watch finished in ' + time + 'ms at' + (new Date()).toString());\n  115        grunt.log.writeln('Waiting for more changes...');\n  116      },\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\.editorconfig:\n    8  charset = utf-8\n    9  trim_trailing_whitespace = true\n   10: insert_final_newline = true\n   11  \n   12  [*.md]\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\.jshintrc:\n    4    \"immed\": true,\n    5    \"latedef\": true,\n    6:   \"newcap\": true,\n    7    \"noarg\": true,\n    8    \"sub\": true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\package.json:\n   82      }\n   83    ],\n   84:   \"readme\": \"# gaze [![Build Status](https://secure.travis-ci.org/shama/gaze.png?branch=master)](http://travis-ci.org/shama/gaze)\\n\\nA globbing fs.watch wrapper built from the best parts of other fine watch libs.  \\nCompatible with Node.js 0.10/0.8, Windows, OSX and Linux.\\n\\n![gaze](http://dontkry.com/images/repos/gaze.png)\\n\\n## Usage\\nInstall the module with: `npm install gaze` or place into your `package.json`\\nand run `npm install`.\\n\\n```javascript\\nvar gaze = require('gaze');\\n\\n// Watch all .js files/dirs in process.cwd()\\ngaze('**/*.js', function(err, watcher) {\\n  // Files have all started watching\\n  // watcher === this\\n\\n  // Get all watched files\\n  console.log(this.watched());\\n\\n  // On file changed\\n  this.on('changed', function(filepath) {\\n    console.log(filepath + ' was changed');\\n  });\\n\\n  // On file added\\n  this.on('added', function(filepath) {\\n    console.log(filepath + ' was added');\\n  });\\n\\n  // On file deleted\\n  this.on('deleted', function(filepath) {\\n    console.log(filepath + ' was deleted');\\n  });\\n\\n  // On changed/added/deleted\\n  this.on('all', function(event, filepath) {\\n    console.log(filepath + ' was ' + event);\\n  });\\n\\n  // Get watched files with relative paths\\n  console.log(this.relative());\\n});\\n\\n// Also accepts an array of patterns\\ngaze(['stylesheets/*.css', 'images/**/*.png'], function() {\\n  // Add more patterns later to be watched\\n  this.add(['js/*.js']);\\n});\\n```\\n\\n### Alternate Interface\\n\\n```javascript\\nvar Gaze = require('gaze').Gaze;\\n\\nvar gaze = new Gaze('**/*');\\n\\n// Files have all started watching\\ngaze.on('ready', function(watcher) { });\\n\\n// A file has been added/changed/deleted has occurred\\ngaze.on('all', function(event, filepath) { });\\n```\\n\\n### Errors\\n\\n```javascript\\ngaze('**/*', function() {\\n  this.on('error', function(err) {\\n    // Handle error here\\n  });\\n});\\n```\\n\\n### Minimatch / Glob\\n\\nSee [isaacs's minimatch](https://github.com/isaacs/minimatch) for more\\ninformation on glob patterns.\\n\\n## Documentation\\n\\n### gaze(patterns, [options], callback)\\n\\n* `patterns` {String|Array} File patterns to be matched\\n* `options` {Object}\\n* `callback` {Function}\\n  * `err` {Error | null}\\n  * `watcher` {Object} Instance of the Gaze watcher\\n\\n### Class: gaze.Gaze\\n\\nCreate a Gaze object by instanting the `gaze.Gaze` class.\\n\\n```javascript\\nvar Gaze = require('gaze').Gaze;\\nvar gaze = new Gaze(pattern, options, callback);\\n```\\n\\n#### Properties\\n\\n* `options` The options object passed in.\\n  * `interval` {integer} Interval to pass to fs.watchFile\\n  * `debounceDelay` {integer} Delay for events called in succession for the same\\n    file/event\\n\\n#### Events\\n\\n* `ready(watcher)` When files have been globbed and watching has begun.\\n* `all(event, filepath)` When an `added`, `changed` or `deleted` event occurs.\\n* `added(filepath)` When a file has been added to a watch directory.\\n* `changed(filepath)` When a file has been changed.\\n* `deleted(filepath)` When a file has been deleted.\\n* `renamed(newPath, oldPath)` When a file has been renamed.\\n* `end()` When the watcher is closed and watches have been removed.\\n* `error(err)` When an error occurs.\\n\\n#### Methods\\n\\n* `emit(event, [...])` Wrapper for the EventEmitter.emit.\\n  `added`|`changed`|`deleted` events will also trigger the `all` event.\\n* `close()` Unwatch all files and reset the watch instance.\\n* `add(patterns, callback)` Adds file(s) patterns to be watched.\\n* `remove(filepath)` removes a file or directory from being watched. Does not\\n  recurse directories.\\n* `watched()` Returns the currently watched files.\\n* `relative([dir, unixify])` Returns the currently watched files with relative paths.\\n  * `dir` {string} Only return relative files for this directory.\\n  * `unixify` {boolean} Return paths with `/` instead of `\\\\\\\\` if on Windows.\\n\\n## FAQs\\n\\n### Why Another `fs.watch` Wrapper?\\nI liked parts of other `fs.watch` wrappers but none had all the features I\\nneeded. This lib combines the features I needed from other fine watch libs:\\nSpeedy data behavior from\\n[paulmillr's chokidar](https://github.com/paulmillr/chokidar), API interface\\nfrom [mikeal's watch](https://github.com/mikeal/watch) and file globbing using\\n[isaacs's glob](https://github.com/isaacs/node-glob) which is also used by\\n[cowboy's Grunt](https://github.com/gruntjs/grunt).\\n\\n### How do I fix the error `EMFILE: Too many opened files.`?\\nThis is because of your system's max opened file limit. For OSX the default is\\nvery low (256). Increase your limit temporarily with `ulimit -n 10480`, the\\nnumber being the new max limit.\\n\\n## Contributing\\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\\nAdd unit tests for any new or changed functionality. Lint and test your code\\nusing [grunt](http://gruntjs.com/).\\n\\n## Release History\\n* 0.4.3 - Track file additions in newly created folders (@brett-shwom).\\n* 0.4.2 - Fix .remove() method to remove a single file in a directory (@kaelzhang). Fixing Cannot call method 'call' of undefined (@krasimir). Track new file additions within folders (@brett-shwom).\\n* 0.4.1 - Fix watchDir not respecting close in race condition (@chrisirhc).\\n* 0.4.0 - Drop support for node v0.6. Use globule for file matching. Avoid node v0.10 path.resolve/join errors. Register new files when added to non-existent folder. Multiple instances can now poll the same files (@jpommerening).\\n* 0.3.4 - Code clean up. Fix path must be strings errors (@groner). Fix incorrect added events (@groner).\\n* 0.3.3 - Fix for multiple patterns with negate.\\n* 0.3.2 - Emit `end` before removeAllListeners.\\n* 0.3.1 - Fix added events within subfolder patterns.\\n* 0.3.0 - Handle safewrite events, `forceWatchMethod` option removed, bug fixes and watch optimizations (@rgaskill).\\n* 0.2.2 - Fix issue where subsequent add calls dont get watched (@samcday). removeAllListeners on close.\\n* 0.2.1 - Fix issue with invalid `added` events in current working dir.\\n* 0.2.0 - Support and mark folders with `path.sep`. Add `forceWatchMethod` option. Support `renamed` events.\\n* 0.1.6 - Recognize the `cwd` option properly\\n* 0.1.5 - Catch too many open file errors\\n* 0.1.4 - Really fix the race condition with 2 watches\\n* 0.1.3 - Fix race condition with 2 watches\\n* 0.1.2 - Read triggering changed event fix\\n* 0.1.1 - Minor fixes\\n* 0.1.0 - Initial release\\n\\n## License\\nCopyright (c) 2013 Kyle Robinson Young  \\nLicensed under the MIT license.\\n\",\n   85    \"readmeFilename\": \"README.md\",\n   86    \"_id\": \"gaze@0.4.3\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\README.md:\n   57  var Gaze = require('gaze').Gaze;\n   58  \n   59: var gaze = new Gaze('**/*');\n   60  \n   61  // Files have all started watching\n   ..\n   97  ```javascript\n   98  var Gaze = require('gaze').Gaze;\n   99: var gaze = new Gaze(pattern, options, callback);\n  100  ```\n  101  \n  ...\n  114  * `changed(filepath)` When a file has been changed.\n  115  * `deleted(filepath)` When a file has been deleted.\n  116: * `renamed(newPath, oldPath)` When a file has been renamed.\n  117  * `end()` When the watcher is closed and watches have been removed.\n  118  * `error(err)` When an error occurs.\n  ...\n  145  This is because of your system's max opened file limit. For OSX the default is\n  146  very low (256). Increase your limit temporarily with `ulimit -n 10480`, the\n  147: number being the new max limit.\n  148  \n  149  ## Contributing\n  150  In lieu of a formal styleguide, take care to maintain the existing coding style.\n  151: Add unit tests for any new or changed functionality. Lint and test your code\n  152  using [grunt](http://gruntjs.com/).\n  153  \n  154  ## Release History\n  155: * 0.4.3 - Track file additions in newly created folders (@brett-shwom).\n  156: * 0.4.2 - Fix .remove() method to remove a single file in a directory (@kaelzhang). Fixing Cannot call method 'call' of undefined (@krasimir). Track new file additions within folders (@brett-shwom).\n  157  * 0.4.1 - Fix watchDir not respecting close in race condition (@chrisirhc).\n  158: * 0.4.0 - Drop support for node v0.6. Use globule for file matching. Avoid node v0.10 path.resolve/join errors. Register new files when added to non-existent folder. Multiple instances can now poll the same files (@jpommerening).\n  159  * 0.3.4 - Code clean up. Fix path must be strings errors (@groner). Fix incorrect added events (@groner).\n  160  * 0.3.3 - Fix for multiple patterns with negate.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\benchmarks\\gaze100s.js:\n   39        this.on('changed', done);\n   40        setTimeout(function() {\n   41:         var rand = String(new Date().getTime()).replace(/[^\\w]+/g, '');\n   42          grunt.file.write(path.join(watchDir, 'one', 'test-99.js'), 'var test = \"' + rand + '\"');\n   43        }, 100);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\lib\\gaze.js:\n   75  // Main entry point. Start watching and call done when setup\n   76  module.exports = function gaze(patterns, opts, done) {\n   77:   return new Gaze(patterns, opts, done);\n   78  };\n   79  module.exports.Gaze = Gaze;\n   ..\n  121    }\n  122  \n  123:   // Detect if new folder added to trigger for matching files within folder\n  124    if (e === 'added') {\n  125      if (helper.isDir(filepath)) {\n  ...\n  253      dirname = helper.markDir(dirname);\n  254  \n  255:     // If a new dir is added\n  256      if (helper.isDir(file) && !(filepath in this._watched)) {\n  257        helper.objectPush(this._watched, filepath, []);\n  ...\n  412  Gaze.prototype._handleError = function(err) {\n  413    if (err.code === 'EMFILE') {\n  414:     return this.emit('error', new Error('EMFILE: Too many opened files.'));\n  415    }\n  416    return this.emit('error', err);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\.jshintrc:\n    4    \"immed\": true,\n    5    \"latedef\": true,\n    6:   \"newcap\": true,\n    7    \"noarg\": true,\n    8    \"sub\": true,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\package.json:\n   50      \"minimatch\": \"~0.2.11\"\n   51    },\n   52:   \"readme\": \"# globule [![Build Status](https://secure.travis-ci.org/cowboy/node-globule.png?branch=master)](http://travis-ci.org/cowboy/node-globule)\\n\\nAn easy-to-use wildcard globbing library.\\n\\n## Getting Started\\nInstall the module with: `npm install globule`\\n\\n```javascript\\nvar globule = require('globule');\\nvar filepaths = globule.find('**/*.js');\\n```\\n\\n## Documentation\\n\\n### globule.find\\nReturns a unique array of all file or directory paths that match the given globbing pattern(s). This method accepts either comma separated globbing patterns or an array of globbing patterns. Paths matching patterns that begin with `!` will be excluded from the returned array. Patterns are processed in order, so inclusion and exclusion order is significant.\\n\\n```js\\nglobule.find(patterns [, options])\\n```\\n\\nThe `options` object supports all [glob][] library options, along with a few extras. These are the most commonly used:\\n\\n* `filter` Either a valid [fs.Stats method name](http://nodejs.org/docs/latest/api/fs.html#fs_class_fs_stats) or a function that will be passed the matched `src` filepath and `options` object as arguments. This function should return a `Boolean` value.\\n* `nonull` Retain globbing patterns in result set even if they fail to match files.\\n* `matchBase` Patterns without slashes will match just the basename part. Eg. this makes `*.js` work like `**/*.js`.\\n* `srcBase` Patterns will be matched relative to the specified path instead of the current working directory. This is a synonym for `cwd`.\\n* `prefixBase` Any specified `srcBase` will be prefixed to all returned filepaths.\\n\\n[glob]: https://github.com/isaacs/node-glob\\n\\n### globule.match\\nMatch one or more globbing patterns against one or more file paths. Returns a uniqued array of all file paths that match any of the specified globbing patterns. Both the `patterns` and `filepaths` arguments can be a single string or array of strings. Paths matching patterns that begin with `!` will be excluded from the returned array. Patterns are processed in order, so inclusion and exclusion order is significant.\\n\\n```js\\ngrunt.file.match(patterns, filepaths [, options])\\n```\\n\\n### globule.isMatch\\nThis method contains the same signature and logic as the `globule.match` method, but returns `true` if any files were matched, otherwise `false`.\\n\\n```js\\ngrunt.file.isMatch(patterns, filepaths [, options])\\n```\\n\\n### globule.mapping\\nGiven a set of source file paths, returns an array of src-dest file mapping objects. Both src and dest paths may be renamed, depending on the options specified.\\n\\n```js\\nglobule.mapping(filepaths [, options])\\n```\\n\\nIn addition to the options the `globule.find` method supports, the options object also supports these properties:\\n\\n* `srcBase` The directory from which patterns are matched. Any string specified as `srcBase` is effectively stripped from the beginning of all matched paths.\\n* `destBase` The specified path is prefixed to all `dest` filepaths.\\n* `ext` Remove anything after (and including) the first `.` in the destination path, then append this value.\\n* `extDot` Change the behavior of `ext`, `\\\"first\\\"` and `\\\"last\\\"` will remove anything after the first or last `.` in the destination filename, respectively. Defaults to `\\\"first\\\"`.\\n* `flatten` Remove the path component from all matched src files. The src file path is still joined to the specified destBase.\\n* `rename` If specified, this function will be responsible for returning the final `dest` filepath. By default, it flattens paths (if specified), changes extensions (if specified) and joins the matched path to the `destBase`.\\n\\n### globule.findMapping\\nThis method is a convenience wrapper around the `globule.find` and `globule.mapping` methods.\\n\\n```js\\nglobule.findMapping(patterns [, options])\\n```\\n\\n\\n## Examples\\n\\nGiven the files `foo/a.js` and `foo/b.js`:\\n\\n### srcBase and destBase\\n\\n```js\\nglobule.find(\\\"foo/*.js\\\")\\n// [\\\"foo/a.js\\\", \\\"foo/b.js\\\"]\\n\\nglobule.find(\\\"*.js\\\", {srcBase: \\\"foo\\\"})\\n// [\\\"a.js\\\", \\\"b.js\\\"]\\n\\nglobule.find(\\\"*.js\\\", {srcBase: \\\"foo\\\", prefixBase: true})\\n// [\\\"foo/a.js\\\", \\\"foo/b.js\\\"]\\n```\\n\\n```js\\nglobule.findMapping(\\\"foo/*.js\\\")\\n// [{src: \\\"foo/a.js\\\", dest: \\\"foo/a.js\\\"}, {src: \\\"foo/b.js\\\", dest: \\\"foo/b.js\\\"}]\\n\\nglobule.findMapping(\\\"foo/*.js\\\", {destBase: \\\"bar\\\"})\\n// [{src: \\\"foo/a.js\\\", dest: \\\"bar/foo/a.js\\\"}, {src: \\\"foo/b.js\\\", dest: \\\"bar/foo/b.js\\\"}]\\n\\nglobule.findMapping(\\\"*.js\\\", {srcBase: \\\"foo\\\", destBase: \\\"bar\\\"})\\n// [{src: \\\"foo/a.js\\\", dest: \\\"bar/a.js\\\"}, {src: \\\"foo/b.js\\\", dest: \\\"bar/b.js\\\"}]\\n```\\n\\n```js\\nglobule.mapping([\\\"foo/a.js\\\", \\\"foo/b.js\\\"])\\n// [{src: \\\"foo/a.js\\\", dest: \\\"foo/a.js\\\"}, {src: \\\"foo/b.js\\\", dest: \\\"foo/b.js\\\"}]\\n\\nglobule.mapping([\\\"foo/a.js\\\", \\\"foo/b.js\\\"], {destBase: \\\"bar\\\"})\\n// [{src: \\\"foo/a.js\\\", dest: \\\"bar/foo/a.js\\\"}, {src: \\\"foo/b.js\\\", dest: \\\"bar/foo/b.js\\\"}]\\n\\nglobule.mapping([\\\"a.js\\\", \\\"b.js\\\"], {srcBase: \\\"foo\\\", destBase: \\\"bar\\\"})\\n// [{src: \\\"foo/a.js\\\", dest: \\\"bar/a.js\\\"}, {src: \\\"foo/b.js\\\", dest: \\\"bar/b.js\\\"}]\\n```\\n\\n## Contributing\\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\\n\\n## Release History\\n_(Nothing yet)_\\n\\n## License\\nCopyright (c) 2013 \\\"Cowboy\\\" Ben Alman  \\nLicensed under the MIT license.\\n\",\n   53    \"readmeFilename\": \"README.md\",\n   54    \"_id\": \"globule@0.1.0\",\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\README.md:\n  108  \n  109  ## Contributing\n  110: In lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n  111  \n  112  ## Release History\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\lib\\globule.js:\n  154        fileByDest[dest].src.push(src);\n  155      } else {\n  156:       // Otherwise create a new src-dest file mapping object.\n  157        files.push({\n  158          src: [src],\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\glob.js:\n   55    }\n   56  \n   57:   var g = new Glob(pattern, options, cb)\n   58    return g.sync ? g.found : g\n   59  }\n   ..\n   62  \n   63  function deprecated () {\n   64:   throw new Error(\"glob's interface has changed. Please see the docs.\")\n   65  }\n   66  \n   ..\n   82  function Glob (pattern, options, cb) {\n   83    if (!(this instanceof Glob)) {\n   84:     return new Glob(pattern, options, cb)\n   85    }\n   86  \n   ..\n  117  \n  118    if (!pattern) {\n  119:     throw new Error(\"must provide pattern\")\n  120    }\n  121  \n  ...\n  123    if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n  124      if (options.noglobstar) {\n  125:       throw new Error(\"base matching requires globstar\")\n  126      }\n  127      pattern = \"**/\" + pattern\n  ...\n  144    this.silent = !!options.silent\n  145  \n  146:   var mm = this.minimatch = new Minimatch(pattern, options)\n  147    this.options = mm.options\n  148    pattern = this.pattern = mm.pattern\n  ...\n  160    // Later, we do an Object.keys() on these.\n  161    // Keep them as a list so we can fill in when nonull is set.\n  162:   this.matches = new Array(n)\n  163  \n  164    this.minimatch.set.forEach(iterator.bind(this))\n  ...\n  246    if (this.paused) return\n  247    if (this.sync)\n  248:     this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  249    this.paused = true\n  250    this.emit(\"pause\")\n  ...\n  254    if (!this.paused) return\n  255    if (this.sync)\n  256:     this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  257    this.paused = false\n  258    this.emit(\"resume\")\n  ...\n  482    this.log('stat', [this.cwd, f, '=', abs])\n  483    if (f.length > this.maxLength) {\n  484:     var er = new Error(\"Path name too long\")\n  485      er.code = \"ENAMETOOLONG\"\n  486      er.path = f\n  ...\n  515      this.log(\"should be ENOTDIR, fake it\")\n  516  \n  517:     er = new Error(\"ENOTDIR, not a directory '\" + abs + \"'\")\n  518      er.path = abs\n  519      er.code = \"ENOTDIR\"\n  ...\n  543    this.log('readdir', [this.cwd, f, abs])\n  544    if (f.length > this.maxLength) {\n  545:     var er = new Error(\"Path name too long\")\n  546      er.code = \"ENAMETOOLONG\"\n  547      er.path = f\n  ...\n  559        // either ENOENT or ENOTDIR\n  560        var code = c ? \"ENOTDIR\" : \"ENOENT\"\n  561:       , er = new Error((c ? \"Not a directory\" : \"Not found\") + \": \" + f)\n  562        er.path = f\n  563        er.code = code\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\package.json:\n   30    },\n   31    \"license\": \"BSD\",\n   32:   \"readme\": \"# Glob\\n\\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\\nlibrary to do its matching.\\n\\n## Attention: node-glob users!\\n\\nThe API has changed dramatically between 2.x and 3.x. This library is\\nnow 100% JavaScript, and the integer flags have been replaced with an\\noptions object.\\n\\nAlso, there's an event emitter class, proper tests, and all the other\\nthings you've come to expect from node modules.\\n\\nAnd best of all, no compilation!\\n\\n## Usage\\n\\n```javascript\\nvar glob = require(\\\"glob\\\")\\n\\n// options is optional\\nglob(\\\"**/*.js\\\", options, function (er, files) {\\n  // files is an array of filenames.\\n  // If the `nonull` option is set, and nothing\\n  // was found, then files is [\\\"**/*.js\\\"]\\n  // er is an error object or null.\\n})\\n```\\n\\n## Features\\n\\nPlease see the [minimatch\\ndocumentation](https://github.com/isaacs/minimatch) for more details.\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n* [minimatch documentation](https://github.com/isaacs/minimatch)\\n\\n## glob(pattern, [options], cb)\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* `cb` {Function}\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nPerform an asynchronous glob search.\\n\\n## glob.sync(pattern, [options]\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* return: {Array<String>} filenames found matching the pattern\\n\\nPerform a synchronous glob search.\\n\\n## Class: glob.Glob\\n\\nCreate a Glob object by instanting the `glob.Glob` class.\\n\\n```javascript\\nvar Glob = require(\\\"glob\\\").Glob\\nvar mg = new Glob(pattern, options, cb)\\n```\\n\\nIt's an EventEmitter, and starts walking the filesystem to find matches\\nimmediately.\\n\\n### new glob.Glob(pattern, [options], [cb])\\n\\n* `pattern` {String} pattern to search for\\n* `options` {Object}\\n* `cb` {Function} Called when an error occurs, or matches are found\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nNote that if the `sync` flag is set in the options, then matches will\\nbe immediately available on the `g.found` member.\\n\\n### Properties\\n\\n* `minimatch` The minimatch object that the glob uses.\\n* `options` The options object passed in.\\n* `error` The error encountered.  When an error is encountered, the\\n  glob object is in an undefined state, and should be discarded.\\n* `aborted` Boolean which is set to true when calling `abort()`.  There\\n  is no way at this time to continue a glob search after aborting, but\\n  you can re-use the statCache to avoid having to duplicate syscalls.\\n\\n### Events\\n\\n* `end` When the matching is finished, this is emitted with all the\\n  matches found.  If the `nonull` option is set, and no match was found,\\n  then the `matches` list contains the original pattern.  The matches\\n  are sorted, unless the `nosort` flag is set.\\n* `match` Every time a match is found, this is emitted with the matched.\\n* `error` Emitted when an unexpected error is encountered, or whenever\\n  any fs error occurs if `options.strict` is set.\\n* `abort` When `abort()` is called, this event is raised.\\n\\n### Methods\\n\\n* `abort` Stop the search.\\n\\n### Options\\n\\nAll the options that can be passed to Minimatch can also be passed to\\nGlob to change pattern matching behavior.  Also, some have been added,\\nor have glob-specific ramifications.\\n\\nAll options are false by default, unless otherwise noted.\\n\\nAll options are added to the glob object, as well.\\n\\n* `cwd` The current working directory in which to search.  Defaults\\n  to `process.cwd()`.\\n* `root` The place where patterns starting with `/` will be mounted\\n  onto.  Defaults to `path.resolve(options.cwd, \\\"/\\\")` (`/` on Unix\\n  systems, and `C:\\\\` or some such on Windows.)\\n* `nomount` By default, a pattern starting with a forward-slash will be\\n  \\\"mounted\\\" onto the root setting, so that a valid filesystem path is\\n  returned.  Set this flag to disable that behavior.\\n* `mark` Add a `/` character to directory matches.  Note that this\\n  requires additional stat calls.\\n* `nosort` Don't sort the results.\\n* `stat` Set to true to stat *all* results.  This reduces performance\\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\\n  to be an untrustworthy indicator of file existence.  It will cause\\n  ELOOP to be triggered one level sooner in the case of cyclical\\n  symbolic links.\\n* `silent` When an unusual error is encountered\\n  when attempting to read a directory, a warning will be printed to\\n  stderr.  Set the `silent` option to true to suppress these warnings.\\n* `strict` When an unusual error is encountered\\n  when attempting to read a directory, the process will just continue on\\n  in search of other matches.  Set the `strict` option to raise an error\\n  in these cases.\\n* `statCache` A cache of results of filesystem information, to prevent\\n  unnecessary stat calls.  While it should not normally be necessary to\\n  set this, you may pass the statCache from one glob() call to the\\n  options object of another, if you know that the filesystem will not\\n  change between calls.  (See \\\"Race Conditions\\\" below.)\\n* `sync` Perform a synchronous glob search.\\n* `nounique` In some cases, brace-expanded patterns can result in the\\n  same file showing up multiple times in the result set.  By default,\\n  this implementation prevents duplicates in the result set.\\n  Set this flag to disable that behavior.\\n* `nonull` Set to never return an empty set, instead returning a set\\n  containing the pattern itself.  This is the default in glob(3).\\n* `nocase` Perform a case-insensitive match.  Note that case-insensitive\\n  filesystems will sometimes result in glob returning results that are\\n  case-insensitively matched anyway, since readdir and stat will not\\n  raise an error.\\n* `debug` Set to enable debug logging in minimatch and glob.\\n* `globDebug` Set to enable debug logging in glob, but not minimatch.\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between node-glob and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.  **Note that this is different from the way that `**` is\\nhandled by ruby's `Dir` class.**\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen glob returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`glob.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\\n## Windows\\n\\n**Please only use forward-slashes in glob expressions.**\\n\\nThough windows uses either `/` or `\\\\` as its path separator, only `/`\\ncharacters are used by this glob implementation.  You must use\\nforward-slashes **only** in glob expressions.  Back-slashes will always\\nbe interpreted as escape characters, not path separators.\\n\\nResults from absolute patterns such as `/foo/*` are mounted onto the\\nroot setting using `path.join`.  On windows, this will by default result\\nin `/foo/*` matching `C:\\\\foo\\\\bar.txt`.\\n\\n## Race Conditions\\n\\nGlob searching, by its very nature, is susceptible to race conditions,\\nsince it relies on directory walking and such.\\n\\nAs a result, it is possible that a file that exists when glob looks for\\nit may have been deleted or modified by the time it returns the result.\\n\\nAs part of its internal implementation, this program caches all stat\\nand readdir calls that it makes, in order to cut down on system\\noverhead.  However, this also makes it even more susceptible to races,\\nespecially if the statCache object is reused between glob calls.\\n\\nUsers are thus advised not to use a glob result as a\\nguarantee of filesystem state in the face of rapid changes.\\nFor the vast majority of operations, this is never a problem.\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\README.md:\n   72  ```javascript\n   73  var Glob = require(\"glob\").Glob\n   74: var mg = new Glob(pattern, options, cb)\n   75  ```\n   76  \n   ..\n   78  immediately.\n   79  \n   80: ### new glob.Glob(pattern, [options], [cb])\n   81  \n   82  * `pattern` {String} pattern to search for\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\examples\\g.js:\n    4  console.log(pattern)\n    5  \n    6: var mg = new Glob(pattern, {mark: true, sync:true}, function (er, matches) {\n    7    console.log(\"matches\", matches)\n    8  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\examples\\usr-local.js:\n    4  console.log(pattern)\n    5  \n    6: var mg = new Glob(pattern, {mark: true}, function (er, matches) {\n    7    console.log(\"matches\", matches)\n    8  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\node_modules\\graceful-fs\\graceful-fs.js:\n   35  \n   36    if (fs._curOpen >= fs.MAX_OPEN) {\n   37:     queue.push(new OpenReq(path, flags, mode, cb))\n   38      setTimeout(flush)\n   39      return\n   ..\n   90          break\n   91        default:\n   92:         throw new Error('Unknown req type: ' + req.constructor.name)\n   93      }\n   94    }\n   ..\n  122  function gracefulReaddir (path, cb) {\n  123    if (fs._curOpen >= fs.MAX_OPEN) {\n  124:     queue.push(new ReaddirReq(path, cb))\n  125      setTimeout(flush)\n  126      return\n  ...\n  158  \n  159    if (fs._curOpen >= fs.MAX_OPEN) {\n  160:     queue.push(new ReadFileReq(path, options, cb))\n  161      setTimeout(flush)\n  162      return\n  ...\n  197  \n  198    if (fs._curOpen >= fs.MAX_OPEN) {\n  199:     queue.push(new WriteFileReq(path, data, options, cb))\n  200      setTimeout(flush)\n  201      return\n  ...\n  391  \n  392  // on Windows, A/V software can lock the directory, causing this\n  393: // to fail with an EACCES or EPERM if the directory contains newly\n  394  // created files.  Try again on failure, for up to 1 second.\n  395  if (process.platform === \"win32\") {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\node_modules\\graceful-fs\\package.json:\n   39    ],\n   40    \"license\": \"BSD\",\n   41:   \"readme\": \"# graceful-fs\\n\\ngraceful-fs functions as a drop-in replacement for the fs module,\\nmaking various improvements.\\n\\nThe improvements are meant to normalize behavior across different\\nplatforms and environments, and to make filesystem access more\\nresilient to errors.\\n\\n## Improvements over fs module\\n\\ngraceful-fs:\\n\\n* keeps track of how many file descriptors are open, and by default\\n  limits this to 1024. Any further requests to open a file are put in a\\n  queue until new slots become available. If 1024 turns out to be too\\n  much, it decreases the limit further.\\n* fixes `lchmod` for Node versions prior to 0.6.2.\\n* implements `fs.lutimes` if possible. Otherwise it becomes a noop.\\n* ignores `EINVAL` and `EPERM` errors in `chown`, `fchown` or\\n  `lchown` if the user isn't root.\\n* makes `lchmod` and `lchown` become noops, if not available.\\n* retries reading a file if `read` results in EAGAIN error.\\n\\nOn Windows, it retries renaming a file for up to one second if `EACCESS`\\nor `EPERM` error occurs, likely because antivirus software has locked\\nthe directory.\\n\\n## Configuration\\n\\nThe maximum number of open file descriptors that graceful-fs manages may\\nbe adjusted by setting `fs.MAX_OPEN` to a different number. The default\\nis 1024.\\n\",\n   42    \"readmeFilename\": \"README.md\",\n   43    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\node_modules\\graceful-fs\\README.md:\n   14  * keeps track of how many file descriptors are open, and by default\n   15    limits this to 1024. Any further requests to open a file are put in a\n   16:   queue until new slots become available. If 1024 turns out to be too\n   17    much, it decreases the limit further.\n   18  * fixes `lchmod` for Node versions prior to 0.6.2.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\node_modules\\graceful-fs\\test\\ulimit.js:\n   17      if (fds >= limit) {\n   18        --fds\n   19:       var er = new Error('EMFILE Curses!')\n   20        er.code = 'EMFILE'\n   21        er.path = path\n   ..\n   29  fs_.openSync = function (path, flags, mode) {\n   30    if (fds >= limit) {\n   31:     var er = new Error('EMFILE Curses!')\n   32      er.code = 'EMFILE'\n   33      er.path = path\n   ..\n   53    process.nextTick(function() {\n   54      if (fds >= limit) {\n   55:       var er = new Error('EMFILE Curses!')\n   56        er.code = 'EMFILE'\n   57        er.path = path\n   ..\n   69  fs_.readdirSync = function (path) {\n   70    if (fds >= limit) {\n   71:     var er = new Error('EMFILE Curses!')\n   72      er.code = 'EMFILE'\n   73      er.path = path\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\node_modules\\inherits\\inherits.js:\n   27  //function Parent () {}\n   28  //inherits(Child, Parent)\n   29: //new Child\n   30  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   20      \"url\": \"http://blog.izs.me/\"\n   21    },\n   22:   \"readme\": \"A dead simple way to do inheritance in JS.\\n\\n    var inherits = require(\\\"inherits\\\")\\n\\n    function Animal () {\\n      this.alive = true\\n    }\\n    Animal.prototype.say = function (what) {\\n      console.log(what)\\n    }\\n\\n    inherits(Dog, Animal)\\n    function Dog () {\\n      Dog.super.apply(this)\\n    }\\n    Dog.prototype.sniff = function () {\\n      this.say(\\\"sniff sniff\\\")\\n    }\\n    Dog.prototype.bark = function () {\\n      this.say(\\\"woof woof\\\")\\n    }\\n\\n    inherits(Chihuahua, Dog)\\n    function Chihuahua () {\\n      Chihuahua.super.apply(this)\\n    }\\n    Chihuahua.prototype.bark = function () {\\n      this.say(\\\"yip yip\\\")\\n    }\\n\\n    // also works\\n    function Cat () {\\n      Cat.super.apply(this)\\n    }\\n    Cat.prototype.hiss = function () {\\n      this.say(\\\"CHSKKSS!!\\\")\\n    }\\n    inherits(Cat, Animal, {\\n      meow: function () { this.say(\\\"miao miao\\\") }\\n    })\\n    Cat.prototype.purr = function () {\\n      this.say(\\\"purr purr\\\")\\n    }\\n\\n\\n    var c = new Chihuahua\\n    assert(c instanceof Chihuahua)\\n    assert(c instanceof Dog)\\n    assert(c instanceof Animal)\\n\\nThe actual function is laughably small.  10-lines small.\\n\",\n   23    \"readmeFilename\": \"README.md\",\n   24    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\node_modules\\inherits\\README.md:\n   44  \n   45  \n   46:     var c = new Chihuahua\n   47      assert(c instanceof Chihuahua)\n   48      assert(c instanceof Dog)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\test\\00-setup.js:\n  160    var s = 0\n  161    chunks.forEach(function (c) { s += c.length })\n  162:   var out = new Buffer(s)\n  163    s = 0\n  164    chunks.forEach(function (c) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\glob\\test\\pause-resume.js:\n   37  var globResults = []\n   38  tap.test(\"use a Glob object, and pause/resume it\", function (t) {\n   39:   var g = new Glob(pattern)\n   40    , paused = false\n   41    , res = []\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.compat.js:\n  164      function ctor() { this.x = 1; }\n  165      ctor.prototype = { 'valueOf': 1, 'y': 1 };\n  166:     for (var prop in new ctor) { props.push(prop); }\n  167      for (prop in arguments) { nonEnumArgs = !prop; }\n  168  \n  ...\n  276        return value;\n  277      }\n  278:     // allow invoking `lodash` without the `new` operator\n  279      if (!(this instanceof lodash)) {\n  280:       return new lodash(value);\n  281      }\n  282      this.__wrapped__ = value;\n  ...\n  559     * @param {Array} partialArgs An array of arguments to be partially applied.\n  560     * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n  561:    * @returns {Function} Returns the new bound function.\n  562     */\n  563    function createBound(func, thisArg, partialArgs, rightIndicator) {\n  ...\n  589        }\n  590        if (this instanceof bound) {\n  591:         // ensure `new bound` is an instance of `bound` and `func`\n  592          noop.prototype = func.prototype;\n  593:         thisBinding = new noop;\n  594          noop.prototype = null;\n  595  \n  ...\n  788     * @param {Number} start The start index.\n  789     * @param {Number} end The end index.\n  790:    * @returns {Array} Returns the new array.\n  791     */\n  792    function slice(array, start, end) {\n  ...\n  868     * };\n  869     *\n  870:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  871     *   alert(key);\n  872     * });\n  ...\n  929     * @category Objects\n  930     * @param {Object} object The object to inspect.\n  931:    * @returns {Array} Returns a new array of property names.\n  932     * @example\n  933     *\n  ...\n  992     * @private\n  993     * @param {Object} object The object to inspect.\n  994:    * @returns {Array} Returns a new array of property names.\n  995     */\n  996    function shimKeys(object) {\n  ...\n 1146        case boolClass:\n 1147        case dateClass:\n 1148:         return done ? result : new ctor(+result);\n 1149  \n 1150        case numberClass:\n 1151        case stringClass:\n 1152:         return done ? result : new ctor(result);\n 1153  \n 1154        case regexpClass:\n ....\n 1268     * @category Objects\n 1269     * @param {Object} object The object to inspect.\n 1270:    * @returns {Array} Returns a new array of property names that have function values.\n 1271     * @example\n 1272     *\n ....\n 1356     * @example\n 1357     *\n 1358:    * _.isDate(new Date);\n 1359     * // => true\n 1360     */\n ....\n 1670    /**\n 1671     * Checks if `value` is the language type of Object.\n 1672:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1673     *\n 1674     * @static\n ....\n 1712     * // => true\n 1713     *\n 1714:    * _.isNaN(new Number(NaN));\n 1715     * // => true\n 1716     *\n ....\n 1779     * }\n 1780     *\n 1781:    * _.isPlainObject(new Stooge('moe', 40));\n 1782     * // => false\n 1783     *\n ....\n 2042     * @category Objects\n 2043     * @param {Object} object The object to inspect.\n 2044:    * @returns {Array} Returns new array of key-value pairs.\n 2045     * @example\n 2046     *\n ....\n 2117     * @category Objects\n 2118     * @param {Object} object The object to inspect.\n 2119:    * @returns {Array} Returns a new array of property values.\n 2120     * @example\n 2121     *\n ....\n 2148     * @param {Array|Number|String} [index1, index2, ...] The indexes of\n 2149     *  `collection` to retrieve, either as individual arguments or arrays.\n 2150:    * @returns {Array} Returns a new array of elements corresponding to the\n 2151     *  provided indexes.\n 2152     * @example\n ....\n 2348     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2349     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2350:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 2351     * @example\n 2352     *\n ....\n 2543     *  the function invoked per iteration.\n 2544     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 2545:    * @returns {Array} Returns a new array of the results of each invoked method.\n 2546     * @example\n 2547     *\n ....\n 2586     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2587     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2588:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 2589     * @example\n 2590     *\n ....\n 2769     * @param {Array|Object|String} collection The collection to iterate over.\n 2770     * @param {String} property The property to pluck.\n 2771:    * @returns {Array} Returns a new array of property values.\n 2772     * @example\n 2773     *\n ....\n 2895     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2896     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2897:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 2898     *  callback check.\n 2899     * @example\n ....\n 2930     * @category Collections\n 2931     * @param {Array|Object|String} collection The collection to shuffle.\n 2932:    * @returns {Array} Returns a new shuffled collection.\n 2933     * @example\n 2934     *\n ....\n 3059     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 3060     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 3061:    * @returns {Array} Returns a new array of sorted elements.\n 3062     * @example\n 3063     *\n ....\n 3101     * @category Collections\n 3102     * @param {Array|Object|String} collection The collection to convert.\n 3103:    * @returns {Array} Returns the new converted array.\n 3104     * @example\n 3105     *\n ....\n 3128     * @param {Array|Object|String} collection The collection to iterate over.\n 3129     * @param {Object} properties The object of property values to filter by.\n 3130:    * @returns {Array} Returns a new array of elements that have the given `properties`.\n 3131     * @example\n 3132     *\n ....\n 3151     * @category Arrays\n 3152     * @param {Array} array The array to compact.\n 3153:    * @returns {Array} Returns a new filtered array.\n 3154     * @example\n 3155     *\n ....\n 3180     * @param {Array} array The array to process.\n 3181     * @param {Array} [array1, array2, ...] Arrays to check.\n 3182:    * @returns {Array} Returns a new array of `array` elements not present in the\n 3183     *  other arrays.\n 3184     * @example\n ....\n 3289     * @param {Array} array The array to compact.\n 3290     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 3291:    * @returns {Array} Returns a new flattened array.\n 3292     * @example\n 3293     *\n ....\n 3441     * @category Arrays\n 3442     * @param {Array} [array1, array2, ...] Arrays to process.\n 3443:    * @returns {Array} Returns a new array of unique elements that are present\n 3444     *  in **all** of the arrays.\n 3445     * @example\n ....\n 3636     * @param {Number} end The end of the range.\n 3637     * @param {Number} [step=1] The value to increment or descrement by.\n 3638:    * @returns {Array} Returns a new range array.\n 3639     * @example\n 3640     *\n ....\n 3821     * @category Arrays\n 3822     * @param {Array} [array1, array2, ...] Arrays to process.\n 3823:    * @returns {Array} Returns a new array of unique values, in order, that are\n 3824     *  present in one or more of the arrays.\n 3825     * @example\n ....\n 3928     * @param {Array} array The array to filter.\n 3929     * @param {Mixed} [value1, value2, ...] Values to remove.\n 3930:    * @returns {Array} Returns a new filtered array.\n 3931     * @example\n 3932     *\n ....\n 3959     * @category Arrays\n 3960     * @param {Array} [array1, array2, ...] Arrays to process.\n 3961:    * @returns {Array} Returns a new array of grouped elements.\n 3962     * @example\n 3963     *\n ....\n 3989     * it is executed.\n 3990     * @param {Function} func The function to restrict.\n 3991:    * @returns {Function} Returns the new restricted function.\n 3992     * @example\n 3993     *\n ....\n 4020     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 4021     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4022:    * @returns {Function} Returns the new bound function.\n 4023     * @example\n 4024     *\n ....\n 4087     * @param {String} key The key of the method.\n 4088     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4089:    * @returns {Function} Returns the new bound function.\n 4090     * @example\n 4091     *\n ....\n 4122     * @category Functions\n 4123     * @param {Function} [func1, func2, ...] Functions to compose.\n 4124:    * @returns {Function} Returns the new composed function.\n 4125     * @example\n 4126     *\n ....\n 4158     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 4159     *  edge of the timeout.\n 4160:    * @returns {Function} Returns the new debounced function.\n 4161     * @example\n 4162     *\n ....\n 4249     * @param {Function} func The function to have its output memoized.\n 4250     * @param {Function} [resolver] A function used to resolve the cache key.\n 4251:    * @returns {Function} Returns the new memoizing function.\n 4252     * @example\n 4253     *\n ....\n 4275     * @category Functions\n 4276     * @param {Function} func The function to restrict.\n 4277:    * @returns {Function} Returns the new restricted function.\n 4278     * @example\n 4279     *\n ....\n 4302    /**\n 4303     * Creates a function that, when called, invokes `func` with any additional\n 4304:    * `partial` arguments prepended to those passed to the new function. This\n 4305     * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n 4306     *\n ....\n 4310     * @param {Function} func The function to partially apply arguments to.\n 4311     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4312:    * @returns {Function} Returns the new partially applied function.\n 4313     * @example\n 4314     *\n ....\n 4324    /**\n 4325     * This method is similar to `_.partial`, except that `partial` arguments are\n 4326:    * appended to those passed to the new function.\n 4327     *\n 4328     * @static\n ....\n 4331     * @param {Function} func The function to partially apply arguments to.\n 4332     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4333:    * @returns {Function} Returns the new partially applied function.\n 4334     * @example\n 4335     *\n ....\n 4365     * @param {Function} func The function to throttle.\n 4366     * @param {Number} wait The number of milliseconds to throttle executions to.\n 4367:    * @returns {Function} Returns the new throttled function.\n 4368     * @example\n 4369     *\n ....\n 4379  \n 4380      function trailingCall() {\n 4381:       lastCalled = new Date;\n 4382        timeoutId = null;\n 4383        result = func.apply(thisArg, args);\n 4384      }\n 4385      return function() {\n 4386:       var now = new Date,\n 4387            remaining = wait - (now - lastCalled);\n 4388  \n ....\n 4414     * @param {Mixed} value The value to wrap.\n 4415     * @param {Function} wrapper The wrapper function.\n 4416:    * @returns {Function} Returns the new function.\n 4417     * @example\n 4418     *\n ....\n 4499          var args = [this.__wrapped__];\n 4500          push.apply(args, arguments);\n 4501:         return new lodash(func.apply(lodash, args));\n 4502        };\n 4503      });\n ....\n 4779     * @param {Function} callback The function called per iteration.\n 4780     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 4781:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 4782     * @example\n 4783     *\n ....\n 5053          return callback == null || (thisArg && typeof callback != 'function')\n 5054            ? result\n 5055:           : new lodash(result);\n 5056        };\n 5057      }\n ....\n 5091    });\n 5092  \n 5093:   // add `Array` functions that return new wrapped values\n 5094    each(['concat', 'slice', 'splice'], function(methodName) {\n 5095      var func = arrayRef[methodName];\n 5096      lodash.prototype[methodName] = function() {\n 5097:       return new lodash(func.apply(this.__wrapped__, arguments));\n 5098      };\n 5099    });\n ....\n 5113            delete value[0];\n 5114          }\n 5115:         return isSplice ? new lodash(result) : result;\n 5116        };\n 5117      });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.compat.min.js:\n    5   * Underscore.js 1.4.4 underscorejs.org/LICENSE\n    6   */\n    7: ;(function(n,t){function r(n){return n&&typeof n==\"object\"&&n.__wrapped__?n:this instanceof r?(this.__wrapped__=n,void 0):new r(n)}function e(n,t,r){t||(t=0);var e=n.length,u=e-t>=(r||at);if(u){var o={};for(r=t-1;++r<e;){var i=n[r]+\"\";(St.call(o,i)?o[i]:o[i]=[]).push(n[r])}}return function(r){if(u){var e=r+\"\";return St.call(o,e)&&-1<z(o[e],r)}return-1<z(n,r,t)}}function u(n){return n.charCodeAt(0)}function o(n,t){var r=n.b,e=t.b;if(n=n.a,t=t.a,n!==t){if(n>t||typeof n==\"undefined\")return 1;if(n<t||typeof t==\"undefined\")return-1\n    8: }return r<e?-1:1}function i(n,t,r,e){function u(){var a=arguments,c=i?this:t;return o||(n=t[f]),r.length&&(a=a.length?(a=v(a),e?a.concat(r):r.concat(a)):r),this instanceof u?(s.prototype=n.prototype,c=new s,s.prototype=W,a=n.apply(c,a),x(a)?a:c):n.apply(c,a)}var o=w(n),i=!r,f=t;return i&&(r=t),o||(t=n),u}function f(n,t,r){if(n==W)return G;var e=typeof n;if(\"function\"!=e){if(\"object\"!=e)return function(t){return t[n]};var u=vr(n);return function(t){for(var r=u.length,e=X;r--&&(e=j(t[u[r]],n[u[r]],ft)););return e\n    9  }}return typeof t!=\"undefined\"?1===r?function(r){return n.call(t,r)}:2===r?function(r,e){return n.call(t,r,e)}:4===r?function(r,e,u,o){return n.call(t,r,e,u,o)}:function(r,e,u){return n.call(t,r,e,u)}:n}function a(){for(var n,t={e:tt,f:rt,g:Jt,i:Wt,j:Zt,k:jt,b:\"l(n)\",c:\"\",h:\"\",l:\"\",m:Q},r=0;n=arguments[r];r++)for(var e in n)t[e]=n[e];if(n=t.a,t.d=/^[^,]+/.exec(n)[0],r=\"var j,n=\"+t.d+\",u=n;if(!n)return u;\"+t.l+\";\",t.b?(r+=\"var o=n.length;j=-1;if(\"+t.b+\"){\",t.j&&(r+=\"if(m(n)){n=n.split('')}\"),r+=\"while(++j<o){\"+t.h+\"}}else{\"):t.i&&(r+=\"var o=n.length;j=-1;if(o&&k(n)){while(++j<o){j+='';\"+t.h+\"}}else{\"),t.f&&(r+=\"var v=typeof n=='function';\"),t.g&&t.m?(r+=\"var s=-1,t=r[typeof n]?p(n):[],o=t.length;while(++s<o){j=t[s];\",t.f&&(r+=\"if(!(v&&j=='prototype')){\"),r+=t.h+\"\",t.f&&(r+=\"}\")):(r+=\"for(j in n){\",(t.f||t.m)&&(r+=\"if(\",t.f&&(r+=\"!(v&&j=='prototype')\"),t.f&&t.m&&(r+=\"&&\"),t.m&&(r+=\"i.call(n,j)\"),r+=\"){\"),r+=t.h+\";\",(t.f||t.m)&&(r+=\"}\")),r+=\"}\",t.e)for(r+=\"var g=n.constructor;\",e=0;7>e;e++)r+=\"j='\"+t.k[e]+\"';if(\",\"constructor\"==t.k[e]&&(r+=\"!(g&&g.prototype===n)&&\"),r+=\"i.call(n,j)){\"+t.h+\"}\";\n   10  return(t.b||t.i)&&(r+=\"}\"),r+=t.c+\";return u\",Function(\"f,i,k,l,m,r,p\",\"return function(\"+n+\"){\"+r+\"}\")(f,St,y,sr,A,ur,Ft)}function c(n){return\"\\\\\"+or[n]}function l(n){return gr[n]}function p(n){return typeof n.toString!=\"function\"&&typeof(n+\"\")==\"string\"}function s(){}function v(n,t,r){t||(t=0),typeof r==\"undefined\"&&(r=n?n.length:0);var e=-1;r=r-t||0;for(var u=Array(0>r?0:r);++e<r;)u[e]=n[t+e];return u}function g(n){return yr[n]}function y(n){return kt.call(n)==Bt}function h(n){var t=X;if(!n||typeof n!=\"object\"||y(n))return t;\n   11  var r=n.constructor;return!w(r)&&(!nr||!p(n))||r instanceof r?et?(lr(n,function(n,r,e){return t=!St.call(e,r),X}),t===X):(lr(n,function(n,r){t=r}),t===X||St.call(n,t)):t}function m(n){var t=[];return pr(n,function(n,r){t.push(r)}),t}function d(n,r,e,u,o,i){var a=n;if(typeof r==\"function\"&&(u=e,e=r,r=X),typeof e==\"function\"){e=typeof u==\"undefined\"?e:f(e,u,1);var a=e(a),c=typeof a!=\"undefined\";c||(a=n)}if(u=x(a)){var l=kt.call(a);if(!rr[l]||nr&&p(a))return a;var s=sr(a)}if(!u||!r)return u&&!c?s?v(a):hr({},a):a;\n   12: switch(u=er[l],l){case Pt:case zt:return c?a:new u(+a);case Ct:case Ut:return c?a:new u(a);case Lt:return c?a:u(a.source,gt.exec(a))}for(o||(o=[]),i||(i=[]),l=o.length;l--;)if(o[l]==n)return i[l];return c||(a=s?u(a.length):{},s&&(St.call(n,\"index\")&&(a.index=n.index),St.call(n,\"input\")&&(a.input=n.input))),o.push(n),i.push(a),(s?$:pr)(c?a:n,function(n,u){a[u]=d(n,r,e,t,o,i)}),a}function _(n){var t=[];return lr(n,function(n,r){w(n)&&t.push(r)}),t.sort()}function b(n){for(var t=-1,r=vr(n),e=r.length,u={};++t<e;){var o=r[t];\n   13  u[n[o]]=o}return u}function j(n,t,r,e,u,o){var i=r===ft;if(r&&!i){r=typeof e==\"undefined\"?r:f(r,e,2);var a=r(n,t);if(typeof a!=\"undefined\")return!!a}if(n===t)return 0!==n||1/n==1/t;var c=typeof n,l=typeof t;if(n===n&&(!n||\"function\"!=c&&\"object\"!=c)&&(!t||\"function\"!=l&&\"object\"!=l))return X;if(n==W||t==W)return n===t;if(l=kt.call(n),c=kt.call(t),l==Bt&&(l=Kt),c==Bt&&(c=Kt),l!=c)return X;switch(l){case Pt:case zt:return+n==+t;case Ct:return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case Lt:case Ut:return n==t+\"\"\n   14  }if(c=l==Mt,!c){if(n.__wrapped__||t.__wrapped__)return j(n.__wrapped__||n,t.__wrapped__||t,r,e,u,o);if(l!=Kt||nr&&(p(n)||p(t)))return X;var l=!Xt&&y(n)?Object:n.constructor,s=!Xt&&y(t)?Object:t.constructor;if(l!=s&&(!w(l)||!(l instanceof l&&w(s)&&s instanceof s)))return X}for(u||(u=[]),o||(o=[]),l=u.length;l--;)if(u[l]==n)return o[l]==t;var v=0,a=Q;if(u.push(n),o.push(t),c){if(l=n.length,v=t.length,a=v==n.length,!a&&!i)return a;for(;v--;)if(c=l,s=t[v],i)for(;c--&&!(a=j(n[c],s,r,e,u,o)););else if(!(a=j(n[v],s,r,e,u,o)))break;\n   ..\n   20  }else if(e=t,e==W||r)return n[0];return v(n,0,Dt(qt(0,e),u))}}function P(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var o=n[r];sr(o)?Et.apply(u,t?o:P(o)):u.push(o)}return u}function z(n,t,r){var e=-1,u=n?n.length:0;if(typeof r==\"number\")e=(0>r?qt(0,u+r):r||0)-1;else if(r)return e=K(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function C(n,t,r){if(typeof t!=\"number\"&&t!=W){var e=0,u=-1,o=n?n.length:0;for(t=f(t,r);++u<o&&t(n[u],u,n);)e++}else e=t==W||r?1:qt(0,t);return v(n,e)}function K(n,t,r,e){var u=0,o=n?n.length:u;\n   21  for(r=r?f(r,e,1):G,t=r(t);u<o;)e=u+o>>>1,r(n[e])<t?u=e+1:o=e;return u}function L(n,t,r,e){var u=-1,o=n?n.length:0,i=[],a=i;typeof t==\"function\"&&(e=r,r=t,t=X);var c=!t&&75<=o;if(c)var l={};for(r&&(a=[],r=f(r,e));++u<o;){e=n[u];var p=r?r(e,u,n):e;if(c)var s=p+\"\",s=St.call(l,s)?!(a=l[s]):a=l[s]=[];(t?!u||a[a.length-1]!==p:s||0>z(a,p))&&((r||c)&&a.push(p),i.push(e))}return i}function U(n,t){return Ht||It&&2<arguments.length?It.call.apply(It,arguments):i(n,t,v(arguments,2))}function V(n){var r=v(arguments,1);\n   22: return setTimeout(function(){n.apply(t,r)},1)}function G(n){return n}function H(n){$(_(n),function(t){var e=r[t]=n[t];r.prototype[t]=function(){var n=[this.__wrapped__];return Et.apply(n,arguments),new r(e.apply(r,n))}})}function J(){return this.__wrapped__}var Q=!0,W=null,X=!1,Y=typeof exports==\"object\"&&exports,Z=typeof module==\"object\"&&module&&module.exports==Y&&module,nt=typeof global==\"object\"&&global;nt.global===nt&&(n=nt);var tt,rt,et,ut=[],ot={},it=0,ft=ot,at=30,ct=n._,lt=/&(?:amp|lt|gt|quot|#39);/g,pt=/\\b__p\\+='';/g,st=/\\b(__p\\+=)''\\+/g,vt=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,gt=/\\w*$/,yt=RegExp(\"^\"+(ot.valueOf+\"\").replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),ht=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,mt=/<%=([\\s\\S]+?)%>/g,dt=/($^)/,_t=/[&<>\"']/g,bt=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,jt=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \"),wt=Math.ceil,xt=ut.concat,Ot=Math.floor,At=yt.test(At=Object.getPrototypeOf)&&At,St=ot.hasOwnProperty,Et=ut.push,kt=ot.toString,It=yt.test(It=v.bind)&&It,Nt=yt.test(Nt=Array.isArray)&&Nt,Rt=n.isFinite,$t=n.isNaN,Ft=yt.test(Ft=Object.keys)&&Ft,qt=Math.max,Dt=Math.min,Tt=Math.random,Bt=\"[object Arguments]\",Mt=\"[object Array]\",Pt=\"[object Boolean]\",zt=\"[object Date]\",Ct=\"[object Number]\",Kt=\"[object Object]\",Lt=\"[object RegExp]\",Ut=\"[object String]\",Vt=!!n.attachEvent,Gt=It&&!/\\n|true/.test(It+Vt),Ht=It&&!Gt,Jt=Ft&&(Vt||Gt),Qt=(Qt={0:1,length:1},ut.splice.call(Qt,0,1),Qt[0]),Wt=Q;\n   23: (function(){function n(){this.x=1}var t=[];n.prototype={valueOf:1,y:1};for(var r in new n)t.push(r);for(r in arguments)Wt=!r;tt=!/valueOf/.test(t),rt=n.propertyIsEnumerable(\"prototype\"),et=\"x\"!=t[0]})(1);var Xt=arguments.constructor==Object,Yt=!y(arguments),Zt=\"xx\"!=\"x\"[0]+Object(\"x\")[0];try{var nr=kt.call(document)==Kt&&!({toString:0}+\"\")}catch(tr){}var rr={\"[object Function]\":X};rr[Bt]=rr[Mt]=rr[Pt]=rr[zt]=rr[Ct]=rr[Kt]=rr[Lt]=rr[Ut]=Q;var er={};er[Mt]=Array,er[Pt]=Boolean,er[zt]=Date,er[Kt]=Object,er[Ct]=Number,er[Lt]=RegExp,er[Ut]=String;\n   24  var ur={\"boolean\":X,\"function\":Q,object:Q,number:X,string:X,undefined:X},or={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};r.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:mt,variable:\"\",imports:{_:r}};var ir={a:\"q,w,h\",l:\"var a=arguments,b=0,c=typeof h=='number'?2:a.length;while(++b<c){n=a[b];if(n&&r[typeof n]){\",h:\"if(typeof u[j]=='undefined')u[j]=n[j]\",c:\"}}\"},fr={a:\"e,d,x\",l:\"d=d&&typeof x=='undefined'?d:f(d,x)\",b:\"typeof o=='number'\",h:\"if(d(n[j],j,e)===false)return u\"},ar={l:\"if(!r[typeof n])return u;\"+fr.l,b:X},cr=a(fr);\n   25  Yt&&(y=function(n){return n?St.call(n,\"callee\"):X});var lr=a(fr,ar,{m:X}),pr=a(fr,ar),sr=Nt||function(n){return Xt&&n instanceof Array||kt.call(n)==Mt},vr=Ft?function(n){return x(n)?rt&&typeof n==\"function\"||Wt&&n.length&&y(n)?m(n):Ft(n):[]}:m,gr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},yr=b(gr),hr=a(ir,{l:ir.l.replace(\";\",\";if(c>3&&typeof a[c-2]=='function'){var d=f(a[--c-1],a[c--],2);}else if(c>2&&typeof a[c-1]=='function'){d=a[--c];}\"),h:\"u[j]=d?d(u[j],n[j]):n[j]\"}),mr=a(ir);\n   ..\n   31  }}else t=!t&&A(n)?u:f(t,r),cr(n,function(n,r,u){r=t(n,r,u),r<e&&(e=r,o=n)});return o},r.object=function(n,t){for(var r=-1,e=n?n.length:0,u={};++r<e;){var o=n[r];t?u[o]=t[r]:u[o[0]]=o[1]}return u},r.omit=function(n,t,r){var e=typeof t==\"function\",u={};if(e)t=f(t,r);else var o=xt.apply(ut,arguments);return lr(n,function(n,r,i){(e?!t(n,r,i):0>z(o,r,1))&&(u[r]=n)}),u},r.once=function(n){var t,r;return function(){return t?r:(t=Q,r=n.apply(this,arguments),n=W,r)}},r.pairs=function(n){for(var t=-1,r=vr(n),e=r.length,u=Array(e);++t<e;){var o=r[t];\n   32  u[t]=[o,n[o]]}return u},r.partial=function(n){return i(n,v(arguments,1))},r.partialRight=function(n){return i(n,v(arguments,1),W,ft)},r.pick=function(n,t,r){var e={};if(typeof t!=\"function\")for(var u=0,o=xt.apply(ut,arguments),i=x(n)?o.length:0;++u<i;){var a=o[u];a in n&&(e[a]=n[a])}else t=f(t,r),lr(n,function(n,r,u){t(n,r,u)&&(e[r]=n)});return e},r.pluck=_r,r.range=function(n,t,r){n=+n||0,r=+r||1,t==W&&(t=n,n=0);var e=-1;t=qt(0,wt((t-n)/r));for(var u=Array(t);++e<t;)u[e]=n,n+=r;return u},r.reject=function(n,t,r){return t=f(t,r),N(n,function(n,r,e){return!t(n,r,e)\n   33: })},r.rest=C,r.shuffle=function(n){var t=-1,r=n?n.length:0,e=Array(typeof r==\"number\"?r:0);return $(n,function(n){var r=Ot(Tt()*(++t+1));e[t]=e[r],e[r]=n}),e},r.sortBy=function(n,t,r){var e=-1,u=n?n.length:0,i=Array(typeof u==\"number\"?u:0);for(t=f(t,r),$(n,function(n,r,u){i[++e]={a:t(n,r,u),b:e,c:n}}),u=i.length,i.sort(o);u--;)i[u]=i[u].c;return i},r.tap=function(n,t){return t(n),n},r.throttle=function(n,t){function r(){f=new Date,i=W,u=n.apply(o,e)}var e,u,o,i,f=0;return function(){var a=new Date,c=t-(a-f);\n   34  return e=arguments,o=this,0<c?i||(i=setTimeout(r,c)):(clearTimeout(i),i=W,f=a,u=n.apply(o,e)),u}},r.times=function(n,t,r){n=+n||0;for(var e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);return u},r.toArray=function(n){return n&&typeof n.length==\"number\"?Zt&&A(n)?n.split(\"\"):v(n):E(n)},r.union=function(){return L(xt.apply(ut,arguments))},r.uniq=L,r.values=E,r.where=br,r.without=function(n){for(var t=-1,r=n?n.length:0,u=e(arguments,1),o=[];++t<r;){var i=n[t];u(i)||o.push(i)}return o},r.wrap=function(n,t){return function(){var r=[n];\n   35  return Et.apply(r,arguments),t.apply(this,r)}},r.zip=function(n){for(var t=-1,r=n?q(_r(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=_r(arguments,t);return e},r.collect=F,r.drop=C,r.each=$,r.extend=hr,r.methods=_,r.select=N,r.tail=C,r.unique=L,H(r),r.clone=d,r.cloneDeep=function(n,t,r){return d(n,Q,t,r)},r.contains=k,r.escape=function(n){return n==W?\"\":(n+\"\").replace(_t,l)},r.every=I,r.find=R,r.has=function(n,t){return n?St.call(n,t):X},r.identity=G,r.indexOf=z,r.isArguments=y,r.isArray=sr,r.isBoolean=function(n){return n===Q||n===X||kt.call(n)==Pt\n   ..\n   38  },r.some=B,r.sortedIndex=K,r.template=function(n,e,u){var o=r.templateSettings;n||(n=\"\"),u=mr({},u,o);var i,f=mr({},u.imports,o.imports),o=vr(f),f=E(f),a=0,l=u.interpolate||dt,p=\"__p+='\";n.replace(RegExp((u.escape||dt).source+\"|\"+l.source+\"|\"+(l===mt?ht:dt).source+\"|\"+(u.evaluate||dt).source+\"|$\",\"g\"),function(t,r,e,u,o,f){return e||(e=u),p+=n.slice(a,f).replace(bt,c),r&&(p+=\"'+__e(\"+r+\")+'\"),o&&(i=Q,p+=\"';\"+o+\";__p+='\"),e&&(p+=\"'+((__t=(\"+e+\"))==null?'':__t)+'\"),a=f+t.length,t}),p+=\"';\\n\",l=u=u.variable,l||(u=\"obj\",p=\"with(\"+u+\"){\"+p+\"}\"),p=(i?p.replace(pt,\"\"):p).replace(st,\"$1\").replace(vt,\"$1;\"),p=\"function(\"+u+\"){\"+(l?\"\":u+\"||(\"+u+\"={});\")+\"var __t,__p='',__e=_.escape\"+(i?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+p+\"return __p}\";\n   39  try{var s=Function(o,\"return \"+p).apply(t,f)}catch(v){throw v.source=p,v}return e?s(e):(s.source=p,s)},r.unescape=function(n){return n==W?\"\":(n+\"\").replace(lt,g)},r.uniqueId=function(n){var t=++it;return(n==W?\"\":n+\"\")+t},r.all=I,r.any=B,r.detect=R,r.foldl=D,r.foldr=T,r.include=k,r.inject=D,pr(r,function(n,t){r.prototype[t]||(r.prototype[t]=function(){var t=[this.__wrapped__];return Et.apply(t,arguments),n.apply(r,t)})}),r.first=M,r.last=function(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=W){var o=u;\n   40: for(t=f(t,r);o--&&t(n[o],o,n);)e++}else if(e=t,e==W||r)return n[u-1];return v(n,qt(0,u-e))}},r.take=M,r.head=M,pr(r,function(n,t){r.prototype[t]||(r.prototype[t]=function(t,e){var u=n(this.__wrapped__,t,e);return t==W||e&&typeof t!=\"function\"?u:new r(u)})}),r.VERSION=\"1.0.1\",r.prototype.toString=function(){return this.__wrapped__+\"\"},r.prototype.value=J,r.prototype.valueOf=J,cr([\"join\",\"pop\",\"shift\"],function(n){var t=ut[n];r.prototype[n]=function(){return t.apply(this.__wrapped__,arguments)}}),cr([\"push\",\"reverse\",\"sort\",\"unshift\"],function(n){var t=ut[n];\n   41: r.prototype[n]=function(){return t.apply(this.__wrapped__,arguments),this}}),cr([\"concat\",\"slice\",\"splice\"],function(n){var t=ut[n];r.prototype[n]=function(){return new r(t.apply(this.__wrapped__,arguments))}}),Qt&&cr([\"pop\",\"shift\",\"splice\"],function(n){var t=ut[n],e=\"splice\"==n;r.prototype[n]=function(){var n=this.__wrapped__,u=t.apply(n,arguments);return 0===n.length&&delete n[0],e?new r(u):u}}),typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?(n._=r,define(function(){return r\n   42  })):Y?Z?(Z.exports=r)._=r:Y._=r:n._=r})(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.js:\n  198        return value;\n  199      }\n  200:     // allow invoking `lodash` without the `new` operator\n  201      if (!(this instanceof lodash)) {\n  202:       return new lodash(value);\n  203      }\n  204      this.__wrapped__ = value;\n  ...\n  441     * @param {Array} partialArgs An array of arguments to be partially applied.\n  442     * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n  443:    * @returns {Function} Returns the new bound function.\n  444     */\n  445    function createBound(func, thisArg, partialArgs, rightIndicator) {\n  ...\n  471        }\n  472        if (this instanceof bound) {\n  473:         // ensure `new bound` is an instance of `bound` and `func`\n  474          noop.prototype = func.prototype;\n  475:         thisBinding = new noop;\n  476          noop.prototype = null;\n  477  \n  ...\n  665     * @param {Number} start The start index.\n  666     * @param {Number} end The end index.\n  667:    * @returns {Array} Returns the new array.\n  668     */\n  669    function slice(array, start, end) {\n  ...\n  739     * };\n  740     *\n  741:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  742     *   alert(key);\n  743     * });\n  ...\n  800     * @category Objects\n  801     * @param {Object} object The object to inspect.\n  802:    * @returns {Array} Returns a new array of property names.\n  803     * @example\n  804     *\n  ...\n  849     * @private\n  850     * @param {Object} object The object to inspect.\n  851:    * @returns {Array} Returns a new array of property names.\n  852     */\n  853    function shimKeys(object) {\n  ...\n 1003        case boolClass:\n 1004        case dateClass:\n 1005:         return done ? result : new ctor(+result);\n 1006  \n 1007        case numberClass:\n 1008        case stringClass:\n 1009:         return done ? result : new ctor(result);\n 1010  \n 1011        case regexpClass:\n ....\n 1125     * @category Objects\n 1126     * @param {Object} object The object to inspect.\n 1127:    * @returns {Array} Returns a new array of property names that have function values.\n 1128     * @example\n 1129     *\n ....\n 1213     * @example\n 1214     *\n 1215:    * _.isDate(new Date);\n 1216     * // => true\n 1217     */\n ....\n 1527    /**\n 1528     * Checks if `value` is the language type of Object.\n 1529:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1530     *\n 1531     * @static\n ....\n 1569     * // => true\n 1570     *\n 1571:    * _.isNaN(new Number(NaN));\n 1572     * // => true\n 1573     *\n ....\n 1636     * }\n 1637     *\n 1638:    * _.isPlainObject(new Stooge('moe', 40));\n 1639     * // => false\n 1640     *\n ....\n 1899     * @category Objects\n 1900     * @param {Object} object The object to inspect.\n 1901:    * @returns {Array} Returns new array of key-value pairs.\n 1902     * @example\n 1903     *\n ....\n 1974     * @category Objects\n 1975     * @param {Object} object The object to inspect.\n 1976:    * @returns {Array} Returns a new array of property values.\n 1977     * @example\n 1978     *\n ....\n 2005     * @param {Array|Number|String} [index1, index2, ...] The indexes of\n 2006     *  `collection` to retrieve, either as individual arguments or arrays.\n 2007:    * @returns {Array} Returns a new array of elements corresponding to the\n 2008     *  provided indexes.\n 2009     * @example\n ....\n 2202     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2203     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2204:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 2205     * @example\n 2206     *\n ....\n 2397     *  the function invoked per iteration.\n 2398     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 2399:    * @returns {Array} Returns a new array of the results of each invoked method.\n 2400     * @example\n 2401     *\n ....\n 2440     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2441     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2442:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 2443     * @example\n 2444     *\n ....\n 2623     * @param {Array|Object|String} collection The collection to iterate over.\n 2624     * @param {String} property The property to pluck.\n 2625:    * @returns {Array} Returns a new array of property values.\n 2626     * @example\n 2627     *\n ....\n 2747     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2748     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2749:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 2750     *  callback check.\n 2751     * @example\n ....\n 2782     * @category Collections\n 2783     * @param {Array|Object|String} collection The collection to shuffle.\n 2784:    * @returns {Array} Returns a new shuffled collection.\n 2785     * @example\n 2786     *\n ....\n 2911     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2912     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2913:    * @returns {Array} Returns a new array of sorted elements.\n 2914     * @example\n 2915     *\n ....\n 2953     * @category Collections\n 2954     * @param {Array|Object|String} collection The collection to convert.\n 2955:    * @returns {Array} Returns the new converted array.\n 2956     * @example\n 2957     *\n ....\n 2978     * @param {Array|Object|String} collection The collection to iterate over.\n 2979     * @param {Object} properties The object of property values to filter by.\n 2980:    * @returns {Array} Returns a new array of elements that have the given `properties`.\n 2981     * @example\n 2982     *\n ....\n 3001     * @category Arrays\n 3002     * @param {Array} array The array to compact.\n 3003:    * @returns {Array} Returns a new filtered array.\n 3004     * @example\n 3005     *\n ....\n 3030     * @param {Array} array The array to process.\n 3031     * @param {Array} [array1, array2, ...] Arrays to check.\n 3032:    * @returns {Array} Returns a new array of `array` elements not present in the\n 3033     *  other arrays.\n 3034     * @example\n ....\n 3139     * @param {Array} array The array to compact.\n 3140     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 3141:    * @returns {Array} Returns a new flattened array.\n 3142     * @example\n 3143     *\n ....\n 3291     * @category Arrays\n 3292     * @param {Array} [array1, array2, ...] Arrays to process.\n 3293:    * @returns {Array} Returns a new array of unique elements that are present\n 3294     *  in **all** of the arrays.\n 3295     * @example\n ....\n 3486     * @param {Number} end The end of the range.\n 3487     * @param {Number} [step=1] The value to increment or descrement by.\n 3488:    * @returns {Array} Returns a new range array.\n 3489     * @example\n 3490     *\n ....\n 3671     * @category Arrays\n 3672     * @param {Array} [array1, array2, ...] Arrays to process.\n 3673:    * @returns {Array} Returns a new array of unique values, in order, that are\n 3674     *  present in one or more of the arrays.\n 3675     * @example\n ....\n 3778     * @param {Array} array The array to filter.\n 3779     * @param {Mixed} [value1, value2, ...] Values to remove.\n 3780:    * @returns {Array} Returns a new filtered array.\n 3781     * @example\n 3782     *\n ....\n 3809     * @category Arrays\n 3810     * @param {Array} [array1, array2, ...] Arrays to process.\n 3811:    * @returns {Array} Returns a new array of grouped elements.\n 3812     * @example\n 3813     *\n ....\n 3839     * it is executed.\n 3840     * @param {Function} func The function to restrict.\n 3841:    * @returns {Function} Returns the new restricted function.\n 3842     * @example\n 3843     *\n ....\n 3870     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 3871     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3872:    * @returns {Function} Returns the new bound function.\n 3873     * @example\n 3874     *\n ....\n 3937     * @param {String} key The key of the method.\n 3938     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3939:    * @returns {Function} Returns the new bound function.\n 3940     * @example\n 3941     *\n ....\n 3972     * @category Functions\n 3973     * @param {Function} [func1, func2, ...] Functions to compose.\n 3974:    * @returns {Function} Returns the new composed function.\n 3975     * @example\n 3976     *\n ....\n 4008     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 4009     *  edge of the timeout.\n 4010:    * @returns {Function} Returns the new debounced function.\n 4011     * @example\n 4012     *\n ....\n 4099     * @param {Function} func The function to have its output memoized.\n 4100     * @param {Function} [resolver] A function used to resolve the cache key.\n 4101:    * @returns {Function} Returns the new memoizing function.\n 4102     * @example\n 4103     *\n ....\n 4125     * @category Functions\n 4126     * @param {Function} func The function to restrict.\n 4127:    * @returns {Function} Returns the new restricted function.\n 4128     * @example\n 4129     *\n ....\n 4152    /**\n 4153     * Creates a function that, when called, invokes `func` with any additional\n 4154:    * `partial` arguments prepended to those passed to the new function. This\n 4155     * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n 4156     *\n ....\n 4160     * @param {Function} func The function to partially apply arguments to.\n 4161     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4162:    * @returns {Function} Returns the new partially applied function.\n 4163     * @example\n 4164     *\n ....\n 4174    /**\n 4175     * This method is similar to `_.partial`, except that `partial` arguments are\n 4176:    * appended to those passed to the new function.\n 4177     *\n 4178     * @static\n ....\n 4181     * @param {Function} func The function to partially apply arguments to.\n 4182     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 4183:    * @returns {Function} Returns the new partially applied function.\n 4184     * @example\n 4185     *\n ....\n 4215     * @param {Function} func The function to throttle.\n 4216     * @param {Number} wait The number of milliseconds to throttle executions to.\n 4217:    * @returns {Function} Returns the new throttled function.\n 4218     * @example\n 4219     *\n ....\n 4229  \n 4230      function trailingCall() {\n 4231:       lastCalled = new Date;\n 4232        timeoutId = null;\n 4233        result = func.apply(thisArg, args);\n 4234      }\n 4235      return function() {\n 4236:       var now = new Date,\n 4237            remaining = wait - (now - lastCalled);\n 4238  \n ....\n 4264     * @param {Mixed} value The value to wrap.\n 4265     * @param {Function} wrapper The wrapper function.\n 4266:    * @returns {Function} Returns the new function.\n 4267     * @example\n 4268     *\n ....\n 4349          var args = [this.__wrapped__];\n 4350          push.apply(args, arguments);\n 4351:         return new lodash(func.apply(lodash, args));\n 4352        };\n 4353      });\n ....\n 4629     * @param {Function} callback The function called per iteration.\n 4630     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 4631:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 4632     * @example\n 4633     *\n ....\n 4903          return callback == null || (thisArg && typeof callback != 'function')\n 4904            ? result\n 4905:           : new lodash(result);\n 4906        };\n 4907      }\n ....\n 4941    });\n 4942  \n 4943:   // add `Array` functions that return new wrapped values\n 4944    each(['concat', 'slice', 'splice'], function(methodName) {\n 4945      var func = arrayRef[methodName];\n 4946      lodash.prototype[methodName] = function() {\n 4947:       return new lodash(func.apply(this.__wrapped__, arguments));\n 4948      };\n 4949    });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.min.js:\n    5   * Underscore.js 1.4.4 underscorejs.org/LICENSE\n    6   */\n    7: ;(function(n,t){function r(n){if(!n||typeof n!=\"object\")return W;var t=n.valueOf,r=typeof t==\"function\"&&(r=bt(t))&&bt(r);if(r)n=n==r||bt(n)==r&&!h(n);else{var e=W;!n||typeof n!=\"object\"||h(n)?n=e:(t=n.constructor,!j(t)||t instanceof t?(Yt(n,function(n,t){e=t}),n=e===W||jt.call(n,e)):n=e)}return n}function e(n){return n&&typeof n==\"object\"&&n.__wrapped__?n:this instanceof e?(this.__wrapped__=n,void 0):new e(n)}function u(n,t,r){t||(t=0);var e=n.length,u=e-t>=(r||ut);if(u){var o={};for(r=t-1;++r<e;){var i=n[r]+\"\";\n    8: (jt.call(o,i)?o[i]:o[i]=[]).push(n[r])}}return function(r){if(u){var e=r+\"\";return jt.call(o,e)&&-1<z(o[e],r)}return-1<z(n,r,t)}}function o(n){return n.charCodeAt(0)}function i(n,t){var r=n.b,e=t.b;if(n=n.a,t=t.a,n!==t){if(n>t||typeof n==\"undefined\")return 1;if(n<t||typeof t==\"undefined\")return-1}return r<e?-1:1}function f(n,t,r,e){function u(){var a=arguments,c=i?this:t;return o||(n=t[f]),r.length&&(a=a.length?(a=v(a),e?a.concat(r):r.concat(a)):r),this instanceof u?(s.prototype=n.prototype,c=new s,s.prototype=Q,a=n.apply(c,a),w(a)?a:c):n.apply(c,a)\n    9  }var o=j(n),i=!r,f=t;return i&&(r=t),o||(t=n),u}function a(n,t,r){if(n==Q)return G;var e=typeof n;if(\"function\"!=e){if(\"object\"!=e)return function(t){return t[n]};var u=tr(n);return function(t){for(var r=u.length,e=W;r--&&(e=b(t[u[r]],n[u[r]],et)););return e}}return typeof t!=\"undefined\"?1===r?function(r){return n.call(t,r)}:2===r?function(r,e){return n.call(t,r,e)}:4===r?function(r,e,u,o){return n.call(t,r,e,u,o)}:function(r,e,u){return n.call(t,r,e,u)}:n}function c(){for(var n,t={g:Ut,b:\"l(n)\",c:\"\",h:\"\",l:\"\",m:L},r=0;n=arguments[r];r++)for(var e in n)t[e]=n[e];\n   10  return n=t.a,t.d=/^[^,]+/.exec(n)[0],r=\"var j,n=\"+t.d+\",u=n;if(!n)return u;\"+t.l+\";\",t.b&&(r+=\"var o=n.length;j=-1;if(\"+t.b+\"){while(++j<o){\"+t.h+\"}}else{\"),t.g&&t.m?r+=\"var s=-1,t=r[typeof n]?p(n):[],o=t.length;while(++s<o){j=t[s];\"+t.h+\"}\":(r+=\"for(j in n){\",t.m&&(r+=\"if(\",t.m&&(r+=\"i.call(n,j)\"),r+=\"){\"),r+=t.h+\";\",t.m&&(r+=\"}\"),r+=\"}\"),t.b&&(r+=\"}\"),r+=t.c+\";return u\",Function(\"f,i,k,l,m,r,p\",\"return function(\"+n+\"){\"+r+\"}\")(a,jt,h,nr,A,Ht,kt)}function l(n){return\"\\\\\"+Jt[n]}function p(n){return rr[n]\n   11  }function s(){}function v(n,t,r){t||(t=0),typeof r==\"undefined\"&&(r=n?n.length:0);var e=-1;r=r-t||0;for(var u=Array(0>r?0:r);++e<r;)u[e]=n[t+e];return u}function g(n){return er[n]}function h(n){return xt.call(n)==Ft}function y(n){var t=[];return Zt(n,function(n,r){t.push(r)}),t}function m(n,r,e,u,o,i){var f=n;if(typeof r==\"function\"&&(u=e,e=r,r=W),typeof e==\"function\"){e=typeof u==\"undefined\"?e:a(e,u,1);var f=e(f),c=typeof f!=\"undefined\";c||(f=n)}if(u=w(f)){var l=xt.call(f);if(!Vt[l])return f;var p=nr(f)\n   12: }if(!u||!r)return u&&!c?p?v(f):ur({},f):f;switch(u=Gt[l],l){case Dt:case It:return c?f:new u(+f);case Tt:case zt:return c?f:new u(f);case Mt:return c?f:u(f.source,lt.exec(f))}for(o||(o=[]),i||(i=[]),l=o.length;l--;)if(o[l]==n)return i[l];return c||(f=p?u(f.length):{},p&&(jt.call(n,\"index\")&&(f.index=n.index),jt.call(n,\"input\")&&(f.input=n.input))),o.push(n),i.push(f),(p?$:Zt)(c?f:n,function(n,u){f[u]=m(n,r,e,t,o,i)}),f}function d(n){var t=[];return Yt(n,function(n,r){j(n)&&t.push(r)}),t.sort()}function _(n){for(var t=-1,r=tr(n),e=r.length,u={};++t<e;){var o=r[t];\n   13  u[n[o]]=o}return u}function b(n,t,r,e,u,o){var i=r===et;if(r&&!i){r=typeof e==\"undefined\"?r:a(r,e,2);var f=r(n,t);if(typeof f!=\"undefined\")return!!f}if(n===t)return 0!==n||1/n==1/t;var c=typeof n,l=typeof t;if(n===n&&(!n||\"function\"!=c&&\"object\"!=c)&&(!t||\"function\"!=l&&\"object\"!=l))return W;if(n==Q||t==Q)return n===t;if(l=xt.call(n),c=xt.call(t),l==Ft&&(l=Bt),c==Ft&&(c=Bt),l!=c)return W;switch(l){case Dt:case It:return+n==+t;case Tt:return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case Mt:case zt:return n==t+\"\"\n   14  }if(c=l==qt,!c){if(n.__wrapped__||t.__wrapped__)return b(n.__wrapped__||n,t.__wrapped__||t,r,e,u,o);if(l!=Bt)return W;var l=n.constructor,p=t.constructor;if(l!=p&&(!j(l)||!(l instanceof l&&j(p)&&p instanceof p)))return W}for(u||(u=[]),o||(o=[]),l=u.length;l--;)if(u[l]==n)return o[l]==t;var s=0,f=L;if(u.push(n),o.push(t),c){if(l=n.length,s=t.length,f=s==n.length,!f&&!i)return f;for(;s--;)if(c=l,p=t[s],i)for(;c--&&!(f=b(n[c],p,r,e,u,o)););else if(!(f=b(n[s],p,r,e,u,o)))break;return f}return Yt(t,function(t,i,a){return jt.call(a,i)?(s++,f=jt.call(n,i)&&b(n[i],t,r,e,u,o)):void 0\n   ..\n   20  return v(n,0,Rt(Nt(0,e),u))}}function M(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var o=n[r];nr(o)?wt.apply(u,t?o:M(o)):u.push(o)}return u}function z(n,t,r){var e=-1,u=n?n.length:0;if(typeof r==\"number\")e=(0>r?Nt(0,u+r):r||0)-1;else if(r)return e=C(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function P(n,t,r){if(typeof t!=\"number\"&&t!=Q){var e=0,u=-1,o=n?n.length:0;for(t=a(t,r);++u<o&&t(n[u],u,n);)e++}else e=t==Q||r?1:Nt(0,t);return v(n,e)}function C(n,t,r,e){var u=0,o=n?n.length:u;\n   21  for(r=r?a(r,e,1):G,t=r(t);u<o;)e=u+o>>>1,r(n[e])<t?u=e+1:o=e;return u}function K(n,t,r,e){var u=-1,o=n?n.length:0,i=[],f=i;typeof t==\"function\"&&(e=r,r=t,t=W);var c=!t&&75<=o;if(c)var l={};for(r&&(f=[],r=a(r,e));++u<o;){e=n[u];var p=r?r(e,u,n):e;if(c)var s=p+\"\",s=jt.call(l,s)?!(f=l[s]):f=l[s]=[];(t?!u||f[f.length-1]!==p:s||0>z(f,p))&&((r||c)&&f.push(p),i.push(e))}return i}function U(n,t){return Kt||At&&2<arguments.length?At.call.apply(At,arguments):f(n,t,v(arguments,2))}function V(n){var r=v(arguments,1);\n   22: return setTimeout(function(){n.apply(t,r)},1)}function G(n){return n}function H(n){$(d(n),function(t){var r=e[t]=n[t];e.prototype[t]=function(){var n=[this.__wrapped__];return wt.apply(n,arguments),new e(r.apply(e,n))}})}function J(){return this.__wrapped__}var L=!0,Q=null,W=!1,X=typeof exports==\"object\"&&exports,Y=typeof module==\"object\"&&module&&module.exports==X&&module,Z=typeof global==\"object\"&&global;Z.global===Z&&(n=Z);var nt=[],tt={},rt=0,et=tt,ut=30,ot=n._,it=/&(?:amp|lt|gt|quot|#39);/g,ft=/\\b__p\\+='';/g,at=/\\b(__p\\+=)''\\+/g,ct=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,lt=/\\w*$/,pt=RegExp(\"^\"+(tt.valueOf+\"\").replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),st=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,vt=/<%=([\\s\\S]+?)%>/g,gt=/($^)/,ht=/[&<>\"']/g,yt=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,mt=Math.ceil,dt=nt.concat,_t=Math.floor,bt=pt.test(bt=Object.getPrototypeOf)&&bt,jt=tt.hasOwnProperty,wt=nt.push,xt=tt.toString,At=pt.test(At=v.bind)&&At,Ot=pt.test(Ot=Array.isArray)&&Ot,Et=n.isFinite,St=n.isNaN,kt=pt.test(kt=Object.keys)&&kt,Nt=Math.max,Rt=Math.min,$t=Math.random,Ft=\"[object Arguments]\",qt=\"[object Array]\",Dt=\"[object Boolean]\",It=\"[object Date]\",Tt=\"[object Number]\",Bt=\"[object Object]\",Mt=\"[object RegExp]\",zt=\"[object String]\",Pt=!!n.attachEvent,Ct=At&&!/\\n|true/.test(At+Pt),Kt=At&&!Ct,Ut=kt&&(Pt||Ct),Vt={\"[object Function]\":W};\n   23  Vt[Ft]=Vt[qt]=Vt[Dt]=Vt[It]=Vt[Tt]=Vt[Bt]=Vt[Mt]=Vt[zt]=L;var Gt={};Gt[qt]=Array,Gt[Dt]=Boolean,Gt[It]=Date,Gt[Bt]=Object,Gt[Tt]=Number,Gt[Mt]=RegExp,Gt[zt]=String;var Ht={\"boolean\":W,\"function\":L,object:L,number:W,string:W,undefined:W},Jt={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};e.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:vt,variable:\"\",imports:{_:e}};var Lt={a:\"q,w,h\",l:\"var a=arguments,b=0,c=typeof h=='number'?2:a.length;while(++b<c){n=a[b];if(n&&r[typeof n]){\",h:\"if(typeof u[j]=='undefined')u[j]=n[j]\",c:\"}}\"},Qt={a:\"e,d,x\",l:\"d=d&&typeof x=='undefined'?d:f(d,x)\",b:\"typeof o=='number'\",h:\"if(d(n[j],j,e)===false)return u\"},Wt={l:\"if(!r[typeof n])return u;\"+Qt.l,b:W},Xt=c(Qt),Yt=c(Qt,Wt,{m:W}),Zt=c(Qt,Wt),nr=Ot||function(n){return n instanceof Array||xt.call(n)==qt\n   24  },tr=kt?function(n){return w(n)?kt(n):[]}:y,rr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},er=_(rr),ur=c(Lt,{l:Lt.l.replace(\";\",\";if(c>3&&typeof a[c-2]=='function'){var d=f(a[--c-1],a[c--],2);}else if(c>2&&typeof a[c-1]=='function'){d=a[--c];}\"),h:\"u[j]=d?d(u[j],n[j]):n[j]\"}),or=c(Lt);j(/x/)&&(j=function(n){return n instanceof Function||\"[object Function]\"==xt.call(n)}),Ct&&Y&&typeof setImmediate==\"function\"&&(V=U(setImmediate,n)),e.after=function(n,t){return 1>n?t():function(){return 1>--n?t.apply(this,arguments):void 0\n   ..\n   30  }),u},e.once=function(n){var t,r;return function(){return t?r:(t=L,r=n.apply(this,arguments),n=Q,r)}},e.pairs=function(n){for(var t=-1,r=tr(n),e=r.length,u=Array(e);++t<e;){var o=r[t];u[t]=[o,n[o]]}return u},e.partial=function(n){return f(n,v(arguments,1))},e.partialRight=function(n){return f(n,v(arguments,1),Q,et)},e.pick=function(n,t,r){var e={};if(typeof t!=\"function\")for(var u=0,o=dt.apply(nt,arguments),i=w(n)?o.length:0;++u<i;){var f=o[u];f in n&&(e[f]=n[f])}else t=a(t,r),Yt(n,function(n,r,u){t(n,r,u)&&(e[r]=n)\n   31  });return e},e.pluck=F,e.range=function(n,t,r){n=+n||0,r=+r||1,t==Q&&(t=n,n=0);var e=-1;t=Nt(0,mt((t-n)/r));for(var u=Array(t);++e<t;)u[e]=n,n+=r;return u},e.reject=function(n,t,r){return t=a(t,r),N(n,function(n,r,e){return!t(n,r,e)})},e.rest=P,e.shuffle=function(n){var t=-1,r=n?n.length:0,e=Array(typeof r==\"number\"?r:0);return $(n,function(n){var r=_t($t()*(++t+1));e[t]=e[r],e[r]=n}),e},e.sortBy=function(n,t,r){var e=-1,u=n?n.length:0,o=Array(typeof u==\"number\"?u:0);for(t=a(t,r),$(n,function(n,r,u){o[++e]={a:t(n,r,u),b:e,c:n}\n   32: }),u=o.length,o.sort(i);u--;)o[u]=o[u].c;return o},e.tap=function(n,t){return t(n),n},e.throttle=function(n,t){function r(){f=new Date,i=Q,u=n.apply(o,e)}var e,u,o,i,f=0;return function(){var a=new Date,c=t-(a-f);return e=arguments,o=this,0<c?i||(i=setTimeout(r,c)):(clearTimeout(i),i=Q,f=a,u=n.apply(o,e)),u}},e.times=function(n,t,r){n=+n||0;for(var e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);return u},e.toArray=function(n){return n&&typeof n.length==\"number\"?v(n):E(n)},e.union=function(){return K(dt.apply(nt,arguments))\n   33  },e.uniq=K,e.values=E,e.where=N,e.without=function(n){for(var t=-1,r=n?n.length:0,e=u(arguments,1),o=[];++t<r;){var i=n[t];e(i)||o.push(i)}return o},e.wrap=function(n,t){return function(){var r=[n];return wt.apply(r,arguments),t.apply(this,r)}},e.zip=function(n){for(var t=-1,r=n?q(F(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=F(arguments,t);return e},e.collect=F,e.drop=P,e.each=$,e.extend=ur,e.methods=d,e.select=N,e.tail=P,e.unique=K,H(e),e.clone=m,e.cloneDeep=function(n,t,r){return m(n,L,t,r)},e.contains=S,e.escape=function(n){return n==Q?\"\":(n+\"\").replace(ht,p)\n   34  },e.every=k,e.find=R,e.has=function(n,t){return n?jt.call(n,t):W},e.identity=G,e.indexOf=z,e.isArguments=h,e.isArray=nr,e.isBoolean=function(n){return n===L||n===W||xt.call(n)==Dt},e.isDate=function(n){return n instanceof Date||xt.call(n)==It},e.isElement=function(n){return n?1===n.nodeType:W},e.isEmpty=function(n){var t=L;if(!n)return t;var r=xt.call(n),e=n.length;return r==qt||r==zt||r==Ft||r==Bt&&typeof e==\"number\"&&j(n.splice)?!e:(Zt(n,function(){return t=W}),t)},e.isEqual=b,e.isFinite=function(n){return Et(n)&&!St(parseFloat(n))\n   ..\n   37  }),p+=\"';\\n\",c=u=u.variable,c||(u=\"obj\",p=\"with(\"+u+\"){\"+p+\"}\"),p=(i?p.replace(ft,\"\"):p).replace(at,\"$1\").replace(ct,\"$1;\"),p=\"function(\"+u+\"){\"+(c?\"\":u+\"||(\"+u+\"={});\")+\"var __t,__p='',__e=_.escape\"+(i?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+p+\"return __p}\";try{var s=Function(o,\"return \"+p).apply(t,f)}catch(v){throw v.source=p,v}return r?s(r):(s.source=p,s)},e.unescape=function(n){return n==Q?\"\":(n+\"\").replace(it,g)},e.uniqueId=function(n){var t=++rt;return(n==Q?\"\":n+\"\")+t\n   38  },e.all=k,e.any=T,e.detect=R,e.foldl=D,e.foldr=I,e.include=S,e.inject=D,Zt(e,function(n,t){e.prototype[t]||(e.prototype[t]=function(){var t=[this.__wrapped__];return wt.apply(t,arguments),n.apply(e,t)})}),e.first=B,e.last=function(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=Q){var o=u;for(t=a(t,r);o--&&t(n[o],o,n);)e++}else if(e=t,e==Q||r)return n[u-1];return v(n,Nt(0,u-e))}},e.take=B,e.head=B,Zt(e,function(n,t){e.prototype[t]||(e.prototype[t]=function(t,r){var u=n(this.__wrapped__,t,r);\n   39: return t==Q||r&&typeof t!=\"function\"?u:new e(u)})}),e.VERSION=\"1.0.1\",e.prototype.toString=function(){return this.__wrapped__+\"\"},e.prototype.value=J,e.prototype.valueOf=J,Xt([\"join\",\"pop\",\"shift\"],function(n){var t=nt[n];e.prototype[n]=function(){return t.apply(this.__wrapped__,arguments)}}),Xt([\"push\",\"reverse\",\"sort\",\"unshift\"],function(n){var t=nt[n];e.prototype[n]=function(){return t.apply(this.__wrapped__,arguments),this}}),Xt([\"concat\",\"slice\",\"splice\"],function(n){var t=nt[n];e.prototype[n]=function(){return new e(t.apply(this.__wrapped__,arguments))\n   40  }}),typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?(n._=e,define(function(){return e})):X?Y?(Y.exports=e)._=e:X._=e:n._=e})(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.underscore.js:\n  189        return value;\n  190      }\n  191:     // allow invoking `lodash` without the `new` operator\n  192      if (!(this instanceof lodash)) {\n  193:       return new lodash(value);\n  194      }\n  195      this.__wrapped__ = value;\n  ...\n  293     * @param {Array} partialArgs An array of arguments to be partially applied.\n  294     * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n  295:    * @returns {Function} Returns the new bound function.\n  296     */\n  297    function createBound(func, thisArg, partialArgs, rightIndicator) {\n  ...\n  323        }\n  324        if (this instanceof bound) {\n  325:         // ensure `new bound` is an instance of `bound` and `func`\n  326          noop.prototype = func.prototype;\n  327:         thisBinding = new noop;\n  328          noop.prototype = null;\n  329  \n  ...\n  485     * @param {Number} start The start index.\n  486     * @param {Number} end The end index.\n  487:    * @returns {Array} Returns the new array.\n  488     */\n  489    function slice(array, start, end) {\n  ...\n  565     * };\n  566     *\n  567:    * _.forIn(new Dog('Dagny'), function(value, key) {\n  568     *   alert(key);\n  569     * });\n  ...\n  646     * @category Objects\n  647     * @param {Object} object The object to inspect.\n  648:    * @returns {Array} Returns a new array of property names.\n  649     * @example\n  650     *\n  ...\n  695     * @private\n  696     * @param {Object} object The object to inspect.\n  697:    * @returns {Array} Returns a new array of property names.\n  698     */\n  699    function shimKeys(object) {\n  ...\n  865     * @category Objects\n  866     * @param {Object} object The object to inspect.\n  867:    * @returns {Array} Returns a new array of property names that have function values.\n  868     * @example\n  869     *\n  ...\n  953     * @example\n  954     *\n  955:    * _.isDate(new Date);\n  956     * // => true\n  957     */\n  ...\n 1208    /**\n 1209     * Checks if `value` is the language type of Object.\n 1210:    * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n 1211     *\n 1212     * @static\n ....\n 1250     * // => true\n 1251     *\n 1252:    * _.isNaN(new Number(NaN));\n 1253     * // => true\n 1254     *\n ....\n 1399     * @category Objects\n 1400     * @param {Object} object The object to inspect.\n 1401:    * @returns {Array} Returns new array of key-value pairs.\n 1402     * @example\n 1403     *\n ....\n 1465     * @category Objects\n 1466     * @param {Object} object The object to inspect.\n 1467:    * @returns {Array} Returns a new array of property values.\n 1468     * @example\n 1469     *\n ....\n 1652     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 1653     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1654:    * @returns {Array} Returns a new array of elements that passed the callback check.\n 1655     * @example\n 1656     *\n ....\n 1850     *  the function invoked per iteration.\n 1851     * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n 1852:    * @returns {Array} Returns a new array of the results of each invoked method.\n 1853     * @example\n 1854     *\n ....\n 1893     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 1894     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 1895:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 1896     * @example\n 1897     *\n ....\n 2072     * @param {Array|Object|String} collection The collection to iterate over.\n 2073     * @param {String} property The property to pluck.\n 2074:    * @returns {Array} Returns a new array of property values.\n 2075     * @example\n 2076     *\n ....\n 2196     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2197     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2198:    * @returns {Array} Returns a new array of elements that did **not** pass the\n 2199     *  callback check.\n 2200     * @example\n ....\n 2231     * @category Collections\n 2232     * @param {Array|Object|String} collection The collection to shuffle.\n 2233:    * @returns {Array} Returns a new shuffled collection.\n 2234     * @example\n 2235     *\n ....\n 2360     *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n 2361     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 2362:    * @returns {Array} Returns a new array of sorted elements.\n 2363     * @example\n 2364     *\n ....\n 2402     * @category Collections\n 2403     * @param {Array|Object|String} collection The collection to convert.\n 2404:    * @returns {Array} Returns the new converted array.\n 2405     * @example\n 2406     *\n ....\n 2427     * @param {Array|Object|String} collection The collection to iterate over.\n 2428     * @param {Object} properties The object of property values to filter by.\n 2429:    * @returns {Array} Returns a new array of elements that have the given `properties`.\n 2430     * @example\n 2431     *\n ....\n 2454     * @category Arrays\n 2455     * @param {Array} array The array to compact.\n 2456:    * @returns {Array} Returns a new filtered array.\n 2457     * @example\n 2458     *\n ....\n 2483     * @param {Array} array The array to process.\n 2484     * @param {Array} [array1, array2, ...] Arrays to check.\n 2485:    * @returns {Array} Returns a new array of `array` elements not present in the\n 2486     *  other arrays.\n 2487     * @example\n ....\n 2591     * @param {Array} array The array to compact.\n 2592     * @param {Boolean} shallow A flag to indicate only flattening a single level.\n 2593:    * @returns {Array} Returns a new flattened array.\n 2594     * @example\n 2595     *\n ....\n 2743     * @category Arrays\n 2744     * @param {Array} [array1, array2, ...] Arrays to process.\n 2745:    * @returns {Array} Returns a new array of unique elements that are present\n 2746     *  in **all** of the arrays.\n 2747     * @example\n ....\n 2926     * @param {Number} end The end of the range.\n 2927     * @param {Number} [step=1] The value to increment or descrement by.\n 2928:    * @returns {Array} Returns a new range array.\n 2929     * @example\n 2930     *\n ....\n 3111     * @category Arrays\n 3112     * @param {Array} [array1, array2, ...] Arrays to process.\n 3113:    * @returns {Array} Returns a new array of unique values, in order, that are\n 3114     *  present in one or more of the arrays.\n 3115     * @example\n ....\n 3206     * @param {Array} array The array to filter.\n 3207     * @param {Mixed} [value1, value2, ...] Values to remove.\n 3208:    * @returns {Array} Returns a new filtered array.\n 3209     * @example\n 3210     *\n ....\n 3236     * @category Arrays\n 3237     * @param {Array} [array1, array2, ...] Arrays to process.\n 3238:    * @returns {Array} Returns a new array of grouped elements.\n 3239     * @example\n 3240     *\n ....\n 3266     * it is executed.\n 3267     * @param {Function} func The function to restrict.\n 3268:    * @returns {Function} Returns the new restricted function.\n 3269     * @example\n 3270     *\n ....\n 3297     * @param {Mixed} [thisArg] The `this` binding of `func`.\n 3298     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3299:    * @returns {Function} Returns the new bound function.\n 3300     * @example\n 3301     *\n ....\n 3361     * @category Functions\n 3362     * @param {Function} [func1, func2, ...] Functions to compose.\n 3363:    * @returns {Function} Returns the new composed function.\n 3364     * @example\n 3365     *\n ....\n 3397     * @param {Boolean} immediate A flag to indicate execution is on the leading\n 3398     *  edge of the timeout.\n 3399:    * @returns {Function} Returns the new debounced function.\n 3400     * @example\n 3401     *\n ....\n 3488     * @param {Function} func The function to have its output memoized.\n 3489     * @param {Function} [resolver] A function used to resolve the cache key.\n 3490:    * @returns {Function} Returns the new memoizing function.\n 3491     * @example\n 3492     *\n ....\n 3514     * @category Functions\n 3515     * @param {Function} func The function to restrict.\n 3516:    * @returns {Function} Returns the new restricted function.\n 3517     * @example\n 3518     *\n ....\n 3541    /**\n 3542     * Creates a function that, when called, invokes `func` with any additional\n 3543:    * `partial` arguments prepended to those passed to the new function. This\n 3544     * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n 3545     *\n ....\n 3549     * @param {Function} func The function to partially apply arguments to.\n 3550     * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n 3551:    * @returns {Function} Returns the new partially applied function.\n 3552     * @example\n 3553     *\n ....\n 3573     * @param {Function} func The function to throttle.\n 3574     * @param {Number} wait The number of milliseconds to throttle executions to.\n 3575:    * @returns {Function} Returns the new throttled function.\n 3576     * @example\n 3577     *\n ....\n 3587  \n 3588      function trailingCall() {\n 3589:       lastCalled = new Date;\n 3590        timeoutId = null;\n 3591        result = func.apply(thisArg, args);\n 3592      }\n 3593      return function() {\n 3594:       var now = new Date,\n 3595            remaining = wait - (now - lastCalled);\n 3596  \n ....\n 3622     * @param {Mixed} value The value to wrap.\n 3623     * @param {Function} wrapper The wrapper function.\n 3624:    * @returns {Function} Returns the new function.\n 3625     * @example\n 3626     *\n ....\n 3710          var result = func.apply(lodash, args);\n 3711          if (this.__chain__) {\n 3712:           result = new lodash(result);\n 3713            result.__chain__ = true;\n 3714          }\n ....\n 3943     * @param {Function} callback The function called per iteration.\n 3944     * @param {Mixed} [thisArg] The `this` binding of `callback`.\n 3945:    * @returns {Array} Returns a new array of the results of each `callback` execution.\n 3946     * @example\n 3947     *\n ....\n 4031     */\n 4032    function chain(value) {\n 4033:     value = new lodash(value);\n 4034      value.__chain__ = true;\n 4035      return value;\n ....\n 4282  \n 4283        if (this.__chain__) {\n 4284:         result = new lodash(result);\n 4285          result.__chain__ = true;\n 4286        }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.underscore.min.js:\n    5   * Underscore.js 1.4.4 underscorejs.org/LICENSE\n    6   */\n    7: ;(function(n,t){function r(n,t){var r;if(n&&qt[typeof n])for(r in t||(t=G),n)if(t(n[r],r,n)===tt)break}function e(n,t,r){if(n){t=t&&typeof r==\"undefined\"?t:a(t,r);var e=n.length;if(r=-1,typeof e==\"number\")for(;++r<e&&t(n[r],r,n)!==tt;);else for(r in n)if(pt.call(n,r)&&t(n[r],r,n)===tt)break}}function u(n){return n&&typeof n==\"object\"&&n.__wrapped__?n:this instanceof u?(this.__wrapped__=n,void 0):new u(n)}function o(n,t){var r=n.b,e=t.b;if(n=n.a,t=t.a,n!==t){if(n>t||typeof n==\"undefined\")return 1;if(n<t||typeof t==\"undefined\")return-1\n    8: }return r<e?-1:1}function i(n,t,r){function e(){var a=arguments,f=o?this:t;return u||(n=t[i]),r.length&&(a=a.length?(a=p(a),r.concat(a)):r),this instanceof e?(l.prototype=n.prototype,f=new l,l.prototype=K,a=n.apply(f,a),w(a)?a:f):n.apply(f,a)}var u=j(n),o=!r,i=t;return o&&(r=t),u||(t=n),e}function a(n,t,r){if(n==K)return G;var e=typeof n;if(\"function\"!=e){if(\"object\"!=e)return function(t){return t[n]};var u=Dt(n);return function(t){for(var r=u.length,e=L;r--&&(e=t[u[r]]===n[u[r]]););return e}}return typeof t!=\"undefined\"?1===r?function(r){return n.call(t,r)\n    9  }:2===r?function(r,e){return n.call(t,r,e)}:4===r?function(r,e,u,o){return n.call(t,r,e,u,o)}:function(r,e,u){return n.call(t,r,e,u)}:n}function f(n){return\"\\\\\"+It[n]}function c(n){return Mt[n]}function l(){}function p(n,t,r){t||(t=0),typeof r==\"undefined\"&&(r=n?n.length:0);var e=-1;r=r-t||0;for(var u=Array(0>r?0:r);++e<r;)u[e]=n[t+e];return u}function s(n){return $t[n]}function v(n){return vt.call(n)==wt}function h(n){var t,r=[],e=function(n,t){r.push(t)};if(n&&qt[typeof n])for(t in e||(e=G),n)if(pt.call(n,t)&&e(n[t],t,n)===tt)break;\n   10  return r}function g(n){if(!n)return n;for(var t=1,r=arguments.length;t<r;t++){var e=arguments[t];if(e)for(var u in e)n[u]=e[u]}return n}function y(n){if(!n)return n;for(var t=1,r=arguments.length;t<r;t++){var e=arguments[t];if(e)for(var u in e)n[u]==K&&(n[u]=e[u])}return n}function m(n){var t=[];return r(n,function(n,r){j(n)&&t.push(r)}),t.sort()}function _(n){for(var t=-1,r=Dt(n),e=r.length,u={};++t<e;){var o=r[t];u[n[o]]=o}return u}function d(n){if(!n)return J;if(Bt(n)||x(n))return!n.length;for(var t in n)if(pt.call(n,t))return L;\n   ..\n   16  if(t=a(t,r),Bt(n)){r=-1;for(var o=n.length;++r<o&&!(u=t(n[r],r,n)););}else e(n,function(n,r,e){return(u=t(n,r,e))&&tt});return!!u}function D(n,t,r){return r&&d(t)?K:(r?k:N)(n,t)}function M(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=K){var o=-1;for(t=a(t,r);++o<u&&t(n[o],o,n);)e++}else if(e=t,e==K||r)return n[0];return p(n,0,bt(dt(0,e),u))}}function $(n,t){for(var r=-1,e=n?n.length:0,u=[];++r<e;){var o=n[r];Bt(o)?st.apply(u,t?o:$(o)):u.push(o)}return u}function z(n,t,r){var e=-1,u=n?n.length:0;\n   17  if(typeof r==\"number\")e=(0>r?dt(0,u+r):r||0)-1;else if(r)return e=P(n,t),n[e]===t?e:-1;for(;++e<u;)if(n[e]===t)return e;return-1}function C(n,t,r){if(typeof t!=\"number\"&&t!=K){var e=0,u=-1,o=n?n.length:0;for(t=a(t,r);++u<o&&t(n[u],u,n);)e++}else e=t==K||r?1:dt(0,t);return p(n,e)}function P(n,t,r,e){var u=0,o=n?n.length:u;for(r=r?a(r,e,1):G,t=r(t);u<o;)e=u+o>>>1,r(n[e])<t?u=e+1:o=e;return u}function U(n,t,r,e){var u=-1,o=n?n.length:0,i=[],f=i;for(typeof t==\"function\"&&(e=r,r=t,t=L),r&&(f=[],r=a(r,e));++u<o;){e=n[u];\n   18: var c=r?r(e,u,n):e;(t?!u||f[f.length-1]!==c:0>z(f,c))&&(r&&f.push(c),i.push(e))}return i}function V(n,t){return Ft||ht&&2<arguments.length?ht.call.apply(ht,arguments):i(n,t,p(arguments,2))}function W(n){var r=p(arguments,1);return setTimeout(function(){n.apply(t,r)},1)}function G(n){return n}function H(n){F(m(n),function(t){var r=u[t]=n[t];u.prototype[t]=function(){var n=[this.__wrapped__];return st.apply(n,arguments),n=r.apply(u,n),this.__chain__&&(n=new u(n),n.__chain__=J),n}})}var J=!0,K=null,L=!1,Q=typeof exports==\"object\"&&exports,X=typeof module==\"object\"&&module&&module.exports==Q&&module,Y=typeof global==\"object\"&&global;\n   19  Y.global===Y&&(n=Y);var Z=[],Y={},nt=0,tt=Y,rt=n._,et=/&(?:amp|lt|gt|quot|#39);/g,ut=RegExp(\"^\"+(Y.valueOf+\"\").replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\").replace(/valueOf|for [^\\]]+/g,\".+?\")+\"$\"),ot=/($^)/,it=/[&<>\"']/g,at=/['\\n\\r\\t\\u2028\\u2029\\\\]/g,ft=Math.ceil,ct=Z.concat,lt=Math.floor,pt=Y.hasOwnProperty,st=Z.push,vt=Y.toString,ht=ut.test(ht=p.bind)&&ht,gt=ut.test(gt=Array.isArray)&&gt,yt=n.isFinite,mt=n.isNaN,_t=ut.test(_t=Object.keys)&&_t,dt=Math.max,bt=Math.min,jt=Math.random,wt=\"[object Arguments]\",At=\"[object Array]\",xt=\"[object Boolean]\",Et=\"[object Date]\",Ot=\"[object Number]\",St=\"[object Object]\",Nt=\"[object RegExp]\",kt=\"[object String]\",Y=!!n.attachEvent,Y=ht&&!/\\n|true/.test(ht+Y),Ft=ht&&!Y,Rt=(Rt={0:1,length:1},Z.splice.call(Rt,0,1),Rt[0]),Tt=arguments.constructor==Object,qt={\"boolean\":L,\"function\":J,object:J,number:L,string:L,undefined:L},It={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"	\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"};\n   20  u.templateSettings={escape:/<%-([\\s\\S]+?)%>/g,evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,variable:\"\"},v(arguments)||(v=function(n){return n?pt.call(n,\"callee\"):L});var Bt=gt||function(n){return Tt&&n instanceof Array||vt.call(n)==At},Dt=_t?function(n){return w(n)?_t(n):[]}:h,Mt={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},$t=_(Mt);j(/x/)&&(j=function(n){return n instanceof Function||\"[object Function]\"==vt.call(n)});var zt=R;Y&&X&&typeof setImmediate==\"function\"&&(W=V(setImmediate,n)),u.after=function(n,t){return 1>n?t():function(){return 1>--n?t.apply(this,arguments):void 0\n   ..\n   25  }return u},u.omit=function(n){var t=ct.apply(Z,arguments),e={};return r(n,function(n,r){0>z(t,r,1)&&(e[r]=n)}),e},u.once=function(n){var t,r;return function(){return t?r:(t=J,r=n.apply(this,arguments),n=K,r)}},u.pairs=function(n){for(var t=-1,r=Dt(n),e=r.length,u=Array(e);++t<e;){var o=r[t];u[t]=[o,n[o]]}return u},u.partial=function(n){return i(n,p(arguments,1))},u.pick=function(n){for(var t=0,r=ct.apply(Z,arguments),e=r.length,u={};++t<e;){var o=r[t];o in n&&(u[o]=n[o])}return u},u.pluck=zt,u.range=function(n,t,r){n=+n||0,r=+r||1,t==K&&(t=n,n=0);\n   26  var e=-1;t=dt(0,ft((t-n)/r));for(var u=Array(t);++e<t;)u[e]=n,n+=r;return u},u.reject=function(n,t,r){return t=a(t,r),N(n,function(n,r,e){return!t(n,r,e)})},u.rest=C,u.shuffle=function(n){var t=-1,r=n?n.length:0,e=Array(typeof r==\"number\"?r:0);return F(n,function(n){var r=lt(jt()*(++t+1));e[t]=e[r],e[r]=n}),e},u.sortBy=function(n,t,r){var e=-1,u=n?n.length:0,i=Array(typeof u==\"number\"?u:0);for(t=a(t,r),F(n,function(n,r,u){i[++e]={a:t(n,r,u),b:e,c:n}}),u=i.length,i.sort(o);u--;)i[u]=i[u].c;return i\n   27: },u.tap=function(n,t){return t(n),n},u.throttle=function(n,t){function r(){a=new Date,i=K,u=n.apply(o,e)}var e,u,o,i,a=0;return function(){var f=new Date,c=t-(f-a);return e=arguments,o=this,0<c?i||(i=setTimeout(r,c)):(clearTimeout(i),i=K,a=f,u=n.apply(o,e)),u}},u.times=function(n,t,r){n=+n||0;for(var e=-1,u=Array(n);++e<n;)u[e]=t.call(r,e);return u},u.toArray=function(n){return n&&typeof n.length==\"number\"?p(n):E(n)},u.union=function(){return U(ct.apply(Z,arguments))},u.uniq=U,u.values=E,u.where=D,u.without=function(n){for(var t=-1,r=n.length,e=[];++t<r;){var u=n[t];\n   28  0>z(arguments,u,1)&&e.push(u)}return e},u.wrap=function(n,t){return function(){var r=[n];return st.apply(r,arguments),t.apply(this,r)}},u.zip=function(n){for(var t=-1,r=n?T(zt(arguments,\"length\")):0,e=Array(r);++t<r;)e[t]=zt(arguments,t);return e},u.collect=R,u.drop=C,u.each=F,u.extend=g,u.methods=m,u.select=N,u.tail=C,u.unique=U,u.clone=function(n){return w(n)?Bt(n)?p(n):g({},n):n},u.contains=O,u.escape=function(n){return n==K?\"\":(n+\"\").replace(it,c)},u.every=S,u.find=k,u.findWhere=function(n,t){return D(n,t,J)\n   29  },u.has=function(n,t){return n?pt.call(n,t):L},u.identity=G,u.indexOf=z,u.isArguments=v,u.isArray=Bt,u.isBoolean=function(n){return n===J||n===L||vt.call(n)==xt},u.isDate=function(n){return n instanceof Date||vt.call(n)==Et},u.isElement=function(n){return n?1===n.nodeType:L},u.isEmpty=d,u.isEqual=b,u.isFinite=function(n){return yt(n)&&!mt(parseFloat(n))},u.isFunction=j,u.isNaN=function(n){return A(n)&&n!=+n},u.isNull=function(n){return n===K},u.isNumber=A,u.isObject=w,u.isRegExp=function(n){return n instanceof RegExp||vt.call(n)==Nt\n   30  },u.isString=x,u.isUndefined=function(n){return typeof n==\"undefined\"},u.lastIndexOf=function(n,t,r){var e=n?n.length:0;for(typeof r==\"number\"&&(e=(0>r?dt(0,e+r):bt(r,e-1))+1);e--;)if(n[e]===t)return e;return-1},u.mixin=H,u.noConflict=function(){return n._=rt,this},u.random=function(n,t){return n==K&&t==K&&(t=1),n=+n||0,t==K&&(t=n,n=0),n+lt(jt()*((+t||0)-n+1))},u.reduce=q,u.reduceRight=I,u.result=function(n,t){var r=n?n[t]:K;return j(r)?n[t]():r},u.size=function(n){var t=n?n.length:0;return typeof t==\"number\"?t:Dt(n).length\n   31  },u.some=B,u.sortedIndex=P,u.template=function(n,t,r){n||(n=\"\"),r=y({},r,u.templateSettings);var e=0,o=\"__p+='\",i=r.variable;n.replace(RegExp((r.escape||ot).source+\"|\"+(r.interpolate||ot).source+\"|\"+(r.evaluate||ot).source+\"|$\",\"g\"),function(t,r,u,i,a){return o+=n.slice(e,a).replace(at,f),r&&(o+=\"'+_['escape'](\"+r+\")+'\"),i&&(o+=\"';\"+i+\";__p+='\"),u&&(o+=\"'+((__t=(\"+u+\"))==null?'':__t)+'\"),e=a+t.length,t}),o+=\"';\\n\",i||(i=\"obj\",o=\"with(\"+i+\"||{}){\"+o+\"}\"),o=\"function(\"+i+\"){var __t,__p='',__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\"+o+\"return __p}\";\n   32: try{var a=Function(\"_\",\"return \"+o)(u)}catch(c){throw c.source=o,c}return t?a(t):(a.source=o,a)},u.unescape=function(n){return n==K?\"\":(n+\"\").replace(et,s)},u.uniqueId=function(n){var t=++nt+\"\";return n?n+t:t},u.all=S,u.any=B,u.detect=k,u.foldl=q,u.foldr=I,u.include=O,u.inject=q,u.first=M,u.last=function(n,t,r){if(n){var e=0,u=n.length;if(typeof t!=\"number\"&&t!=K){var o=u;for(t=a(t,r);o--&&t(n[o],o,n);)e++}else if(e=t,e==K||r)return n[u-1];return p(n,dt(0,u-e))}},u.take=M,u.head=M,u.chain=function(n){return n=new u(n),n.__chain__=J,n\n   33: },u.VERSION=\"1.0.1\",H(u),u.prototype.chain=function(){return this.__chain__=J,this},u.prototype.value=function(){return this.__wrapped__},e(\"pop push reverse shift sort splice unshift\".split(\" \"),function(n){var t=Z[n];u.prototype[n]=function(){var n=this.__wrapped__;return t.apply(n,arguments),Rt&&0===n.length&&delete n[0],this}}),e([\"concat\",\"join\",\"slice\"],function(n){var t=Z[n];u.prototype[n]=function(){var n=t.apply(this.__wrapped__,arguments);return this.__chain__&&(n=new u(n),n.__chain__=J),n\n   34  }}),Q?X?(X.exports=u)._=u:Q._=u:n._=u})(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\minimatch.js:\n   34  \n   35  var LRU = require(\"lru-cache\")\n   36:   , cache = minimatch.cache = new LRU({max: 100})\n   37    , GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\n   38    , sigmund = require(\"sigmund\")\n   ..\n   40  var path = require(\"path\")\n   41    // any single thing other than /\n   42:   // don't need to escape / when using new RegExp()\n   43    , qmark = \"[^/]\"\n   44  \n   ..\n  100  \n  101    m.Minimatch = function Minimatch (pattern, options) {\n  102:     return new orig.Minimatch(pattern, ext(def, options))\n  103    }\n  104  \n  ...\n  114  function minimatch (p, pattern, options) {\n  115    if (typeof pattern !== \"string\") {\n  116:     throw new TypeError(\"glob pattern string required\")\n  117    }\n  118  \n  ...\n  127    if (pattern.trim() === \"\") return p === \"\"\n  128  \n  129:   return new Minimatch(pattern, options).match(p)\n  130  }\n  131  \n  132  function Minimatch (pattern, options) {\n  133    if (!(this instanceof Minimatch)) {\n  134:     return new Minimatch(pattern, options, cache)\n  135    }\n  136  \n  137    if (typeof pattern !== \"string\") {\n  138:     throw new TypeError(\"glob pattern string required\")\n  139    }\n  140  \n  ...\n  257  // a{b}c -> a{b}c\n  258  minimatch.braceExpand = function (pattern, options) {\n  259:   return new Minimatch(pattern, options).braceExpand()\n  260  }\n  261  \n  ...\n  267  \n  268    if (typeof pattern === \"undefined\") {\n  269:     throw new Error(\"undefined pattern\")\n  270    }\n  271  \n  ...\n  759  \n  760    var flags = options.nocase ? \"i\" : \"\"\n  761:     , regExp = new RegExp(\"^\" + re + \"$\", flags)\n  762  \n  763    regExp._glob = pattern\n  ...\n  768  \n  769  minimatch.makeRe = function (pattern, options) {\n  770:   return new Minimatch(pattern, options || {}).makeRe()\n  771  }\n  772  \n  ...\n  807  \n  808    try {\n  809:     return this.regexp = new RegExp(re, flags)\n  810    } catch (ex) {\n  811      return this.regexp = false\n  ...\n  814  \n  815  minimatch.match = function (list, pattern, options) {\n  816:   var mm = new Minimatch(pattern, options)\n  817    list = list.filter(function (f) {\n  818      return mm.match(f)\n  ...\n 1035  \n 1036    // should be unreachable.\n 1037:   throw new Error(\"wtf?\")\n 1038  }\n 1039  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\package.json:\n   30      \"url\": \"http://github.com/isaacs/minimatch/raw/master/LICENSE\"\n   31    },\n   32:   \"readme\": \"# minimatch\\n\\nA minimal matching utility.\\n\\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.png)](http://travis-ci.org/isaacs/minimatch)\\n\\n\\nThis is the matching library used internally by npm.\\n\\nEventually, it will replace the C binding in node-glob.\\n\\nIt works by converting glob expressions into JavaScript `RegExp`\\nobjects.\\n\\n## Usage\\n\\n```javascript\\nvar minimatch = require(\\\"minimatch\\\")\\n\\nminimatch(\\\"bar.foo\\\", \\\"*.foo\\\") // true!\\nminimatch(\\\"bar.foo\\\", \\\"*.bar\\\") // false!\\nminimatch(\\\"bar.foo\\\", \\\"*.+(bar|foo)\\\", { debug: true }) // true, and noisy!\\n```\\n\\n## Features\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n\\n## Minimatch Class\\n\\nCreate a minimatch object by instanting the `minimatch.Minimatch` class.\\n\\n```javascript\\nvar Minimatch = require(\\\"minimatch\\\").Minimatch\\nvar mm = new Minimatch(pattern, options)\\n```\\n\\n### Properties\\n\\n* `pattern` The original pattern the minimatch object represents.\\n* `options` The options supplied to the constructor.\\n* `set` A 2-dimensional array of regexp or string expressions.\\n  Each row in the\\n  array corresponds to a brace-expanded pattern.  Each item in the row\\n  corresponds to a single path-part.  For example, the pattern\\n  `{a,b/c}/d` would expand to a set of patterns like:\\n\\n        [ [ a, d ]\\n        , [ b, c, d ] ]\\n\\n    If a portion of the pattern doesn't have any \\\"magic\\\" in it\\n    (that is, it's something like `\\\"foo\\\"` rather than `fo*o?`), then it\\n    will be left as a string rather than converted to a regular\\n    expression.\\n\\n* `regexp` Created by the `makeRe` method.  A single regular expression\\n  expressing the entire pattern.  This is useful in cases where you wish\\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\\n* `negate` True if the pattern is negated.\\n* `comment` True if the pattern is a comment.\\n* `empty` True if the pattern is `\\\"\\\"`.\\n\\n### Methods\\n\\n* `makeRe` Generate the `regexp` member if necessary, and return it.\\n  Will return `false` if the pattern is invalid.\\n* `match(fname)` Return true if the filename matches the pattern, or\\n  false otherwise.\\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\\n  filename, and match it against a single row in the `regExpSet`.  This\\n  method is mainly for internal use, but is exposed so that it can be\\n  used by a glob-walker that needs to avoid excessive filesystem calls.\\n\\nAll other methods are internal, and will be called as necessary.\\n\\n## Functions\\n\\nThe top-level exported function has a `cache` property, which is an LRU\\ncache set to store 100 items.  So, calling these methods repeatedly\\nwith the same pattern and options will use the same Minimatch object,\\nsaving the cost of parsing it multiple times.\\n\\n### minimatch(path, pattern, options)\\n\\nMain export.  Tests a path against the pattern using the options.\\n\\n```javascript\\nvar isJS = minimatch(file, \\\"*.js\\\", { matchBase: true })\\n```\\n\\n### minimatch.filter(pattern, options)\\n\\nReturns a function that tests its\\nsupplied argument, suitable for use with `Array.filter`.  Example:\\n\\n```javascript\\nvar javascripts = fileList.filter(minimatch.filter(\\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.match(list, pattern, options)\\n\\nMatch against the list of\\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\\noptions.nonull is set, then return a list containing the pattern itself.\\n\\n```javascript\\nvar javascripts = minimatch.match(fileList, \\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.makeRe(pattern, options)\\n\\nMake a regular expression object from the pattern.\\n\\n## Options\\n\\nAll options are `false` by default.\\n\\n### debug\\n\\nDump a ton of stuff to stderr.\\n\\n### nobrace\\n\\nDo not expand `{a,b}` and `{1..3}` brace sets.\\n\\n### noglobstar\\n\\nDisable `**` matching against multiple folder names.\\n\\n### dot\\n\\nAllow patterns to match filenames starting with a period, even if\\nthe pattern does not explicitly have a period in that spot.\\n\\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\\nis set.\\n\\n### noext\\n\\nDisable \\\"extglob\\\" style patterns like `+(a|b)`.\\n\\n### nocase\\n\\nPerform a case-insensitive match.\\n\\n### nonull\\n\\nWhen a match is not found by `minimatch.match`, return a list containing\\nthe pattern itself.  When set, an empty list is returned if there are\\nno matches.\\n\\n### matchBase\\n\\nIf set, then patterns without slashes will be matched\\nagainst the basename of the path if it contains slashes.  For example,\\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\\n\\n### nocomment\\n\\nSuppress the behavior of treating `#` at the start of a pattern as a\\ncomment.\\n\\n### nonegate\\n\\nSuppress the behavior of treating a leading `!` character as negation.\\n\\n### flipNegate\\n\\nReturns from negate expressions the same as if they were not negated.\\n(Ie, true on a hit, false on a miss.)\\n\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between minimatch and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen minimatch.match returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`minimatch.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\README.md:\n   44  ```javascript\n   45  var Minimatch = require(\"minimatch\").Minimatch\n   46: var mm = new Minimatch(pattern, options)\n   47  ```\n   48  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\node_modules\\lru-cache\\lib\\lru-cache.js:\n   16  function LRUCache (options) {\n   17    if (!(this instanceof LRUCache))\n   18:     return new LRUCache(options)\n   19  \n   20    if (typeof options === 'number')\n   ..\n  102  \n  103  LRUCache.prototype.keys = function () {\n  104:   var keys = new Array(this._itemCount)\n  105    var i = 0\n  106    for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n  ...\n  112  \n  113  LRUCache.prototype.values = function () {\n  114:   var values = new Array(this._itemCount)\n  115    var i = 0\n  116    for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n  ...\n  158    var len = this._lengthCalculator(value)\n  159    var age = this._maxAge ? Date.now() : 0\n  160:   var hit = new Entry(key, value, this._mru++, len, age)\n  161  \n  162    // oversized objects fall out of cache automatically.\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\basic.js:\n    3  \n    4  test(\"basic\", function (t) {\n    5:   var cache = new LRU({max: 10})\n    6    cache.set(\"key\", \"value\")\n    7    t.equal(cache.get(\"key\"), \"value\")\n    .\n   13  \n   14  test(\"least recently set\", function (t) {\n   15:   var cache = new LRU(2)\n   16    cache.set(\"a\", \"A\")\n   17    cache.set(\"b\", \"B\")\n   ..\n   24  \n   25  test(\"lru recently gotten\", function (t) {\n   26:   var cache = new LRU(2)\n   27    cache.set(\"a\", \"A\")\n   28    cache.set(\"b\", \"B\")\n   ..\n   36  \n   37  test(\"del\", function (t) {\n   38:   var cache = new LRU(2)\n   39    cache.set(\"a\", \"A\")\n   40    cache.del(\"a\")\n   ..\n   44  \n   45  test(\"max\", function (t) {\n   46:   var cache = new LRU(3)\n   47  \n   48    // test changing the max, verify that the LRU items get dropped.\n   ..\n   82  \n   83  test(\"reset\", function (t) {\n   84:   var cache = new LRU(10)\n   85    cache.set(\"a\", \"A\")\n   86    cache.set(\"b\", \"B\")\n   ..\n   97  // about the format/layout of the response.\n   98  test(\"dump\", function (t) {\n   99:   var cache = new LRU(10)\n  100    var d = cache.dump();\n  101    t.equal(Object.keys(d).length, 0, \"nothing in dump for empty cache\")\n  ...\n  120  \n  121  test(\"basic with weighed length\", function (t) {\n  122:   var cache = new LRU({\n  123      max: 100,\n  124      length: function (item) { return item.size }\n  ...\n  135  \n  136  test(\"weighed length item too large\", function (t) {\n  137:   var cache = new LRU({\n  138      max: 10,\n  139      length: function (item) { return item.size }\n  ...\n  150  \n  151  test(\"least recently set with weighed length\", function (t) {\n  152:   var cache = new LRU({\n  153      max:8,\n  154      length: function (item) { return item.length }\n  ...\n  166  \n  167  test(\"lru recently gotten with weighed length\", function (t) {\n  168:   var cache = new LRU({\n  169      max: 8,\n  170      length: function (item) { return item.length }\n  ...\n  184  \n  185  test(\"set returns proper booleans\", function(t) {\n  186:   var cache = new LRU({\n  187      max: 5,\n  188      length: function (item) { return item.length }\n  ...\n  200  \n  201  test(\"drop the old items\", function(t) {\n  202:   var cache = new LRU({\n  203      max: 5,\n  204      maxAge: 50\n  ...\n  231  test(\"disposal function\", function(t) {\n  232    var disposed = false\n  233:   var cache = new LRU({\n  234      max: 1,\n  235      dispose: function (k, n) {\n  ...\n  250  test(\"disposal function on too big of item\", function(t) {\n  251    var disposed = false\n  252:   var cache = new LRU({\n  253      max: 1,\n  254      length: function (k) {\n  ...\n  268  \n  269  test(\"has()\", function(t) {\n  270:   var cache = new LRU({\n  271      max: 1,\n  272      maxAge: 10\n  ...\n  285  \n  286  test(\"stale\", function(t) {\n  287:   var cache = new LRU({\n  288      maxAge: 10,\n  289      stale: true\n  ...\n  318  \n  319  test(\"least recently set w/ peek\", function (t) {\n  320:   var cache = new LRU(2)\n  321    cache.set(\"a\", \"A\")\n  322    cache.set(\"b\", \"B\")\n  ...\n  330  \n  331  test(\"pop the least used item\", function (t) {\n  332:   var cache = new LRU(3)\n  333    , last\n  334  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\foreach.js:\n    3  \n    4  test('forEach', function (t) {\n    5:   var l = new LRU(5)\n    6    for (var i = 0; i < 10; i ++) {\n    7      l.set(i.toString(), i.toString(2))\n    .\n   34  \n   35  test('keys() and values()', function (t) {\n   36:   var l = new LRU(5)\n   37    for (var i = 0; i < 10; i ++) {\n   38      l.set(i.toString(), i.toString(2))\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\node_modules\\lru-cache\\test\\memory-leak.js:\n    4  var test = require('tap').test\n    5  var LRU = require('../')\n    6: var l = new LRU({ max: 10 })\n    7  var refs = 0\n    8  function X() {\n    .\n   18    // fill up the cache\n   19    for (var i = 0; i < 100; i++) {\n   20:     l.set(i, new X);\n   21      // throw some gets in there, too.\n   22      if (i % 2 === 0)\n   ..\n   33    // do it again, but more\n   34    for (var i = 0; i < 10000; i++) {\n   35:     l.set(i, new X);\n   36      // throw some gets in there, too.\n   37      if (i % 2 === 0)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\test\\basic.js:\n  366  \n  367      // options.debug = true\n  368:     var m = new mm.Minimatch(pattern, options)\n  369      var r = m.makeRe()\n  370      var expectRe = regexps[re++]\n  ...\n  391  tap.test(\"global leak test\", function (t) {\n  392    var globalAfter = Object.keys(global)\n  393:   t.equivalent(globalAfter, globalBefore, \"no new globals, please\")\n  394    t.end()\n  395  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\test\\caching.js:\n    2  var tap = require(\"tap\")\n    3  tap.test(\"cache test\", function (t) {\n    4:   var mm1 = new Minimatch(\"a?b\")\n    5:   var mm2 = new Minimatch(\"a?b\")\n    6    t.equal(mm1, mm2, \"should get the same object\")\n    7    // the lru should drop it after 100 entries\n    8    for (var i = 0; i < 100; i ++) {\n    9:     new Minimatch(\"a\"+i)\n   10    }\n   11:   mm2 = new Minimatch(\"a?b\")\n   12    t.notEqual(mm1, mm2, \"cache should have dropped\")\n   13    t.end()\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\node_modules\\globule\\node_modules\\minimatch\\test\\defaults.js:\n  244        // options.debug = true\n  245        var Class = mm.defaults(options).Minimatch\n  246:       var m = new Class(pattern, {})\n  247        var r = m.makeRe()\n  248        tapOpts.re = String(r) || JSON.stringify(r)\n  ...\n  266  tap.test(\"global leak test\", function (t) {\n  267    var globalAfter = Object.keys(global)\n  268:   t.equivalent(globalAfter, globalBefore, \"no new globals, please\")\n  269    t.end()\n  270  })\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\test\\add_test.js:\n   32        'nested/sub/': ['two.js'],\n   33      };\n   34:     var gaze = new Gaze('addnothingtowatch');\n   35      gaze._addToWatched(files);\n   36      var result = gaze.relative(null, true);\n   ..\n   40    addLater: function(test) {\n   41      test.expect(3);\n   42:     new Gaze('sub/one.js', function(err, watcher) {\n   43        test.deepEqual(watcher.relative('sub'), ['one.js']);\n   44        watcher.add('sub/*.js', function() {\n   ..\n   55    addNoCallback: function(test) {\n   56      test.expect(1);\n   57:     new Gaze('sub/one.js', function(err, watcher) {\n   58        this.add('sub/two.js');\n   59        this.on('changed', function(filepath) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\test\\api_test.js:\n    9      done();\n   10    },\n   11:   newGaze: function(test) {\n   12      test.expect(2);\n   13:     new gaze.Gaze('**/*', {}, function() {\n   14        var result = this.relative(null, true);\n   15        test.deepEqual(result['.'], ['Project (LO)/', 'nested/', 'one.js', 'sub/']);\n   ..\n   29    ready: function(test) {\n   30      test.expect(1);\n   31:     var g = new gaze.Gaze('**/*');\n   32      g.on('ready', function(watcher) {\n   33        test.deepEqual(watcher.relative('sub', true), ['one.js', 'two.js']);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\test\\matching_test.js:\n   11  function cleanUp(done) {\n   12    [\n   13:     'newfolder',\n   14    ].forEach(function(d) {\n   15      var p = path.join(fixtures, d);\n   ..\n   80          times++;\n   81          var result = watcher.relative(null, true);\n   82:         test.deepEqual(result['newfolder/'], ['added.js']);\n   83          if (times > 1) { watcher.close(); }\n   84        });\n   85:       grunt.file.write(path.join(fixtures, 'newfolder', 'added.js'), 'var added = true;');\n   86        setTimeout(function() {\n   87:         grunt.file.write(path.join(fixtures, 'newfolder', 'added.js'), 'var added = true;');\n   88        }, 1000);\n   89        watcher.on('end', function() {\n   90:         // TODO: Figure out why this test is finicky leaking it's newfolder into the other tests\n   91          setTimeout(test.done, 2000);\n   92        });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\test\\relative_test.js:\n   21        'one.js'\n   22      ];\n   23:     var gaze = new Gaze('addnothingtowatch');\n   24      gaze._addToWatched(files);\n   25      test.deepEqual(gaze.relative('.', true), ['Project (LO)/', 'nested/', 'one.js', 'sub/']);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\test\\rename_test.js:\n   26      test.expect(2);\n   27      var oldPath = path.join(__dirname, 'fixtures', 'sub', 'rename.js');\n   28:     var newPath = path.join(__dirname, 'fixtures', 'sub', 'renamed.js');\n   29      fs.writeFileSync(oldPath, 'var rename = true;');\n   30      gaze('**/*', function(err, watcher) {\n   31:       watcher.on('renamed', function(newFile, oldFile) {\n   32:         test.equal(newFile, newPath);\n   33          test.equal(oldFile, oldPath);\n   34          watcher.close();\n   35          test.done();\n   36        });\n   37:       fs.renameSync(oldPath, newPath);\n   38      });\n   39    }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\test\\watch_race_test.js:\n   44      );\n   45      grunt.util.async.forEachSeries(watcherIdxes, function(idx, next) {\n   46:       var watcher = new gaze.Gaze('**/poller.js', function(err, watcher) {\n   47          var timeout = setTimeout(function () {\n   48            test.ok(false, 'watcher ' + idx + ' did not fire event on polled file.');\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\gaze\\test\\watch_test.js:\n   21    });\n   22  \n   23:   grunt.file.delete(path.resolve(__dirname, 'fixtures', 'new_dir'));\n   24  \n   25    done();\n   ..\n  190      ];\n  191      grunt.util.async.forEachSeries(adds, function(add, next) {\n  192:       new gaze.Gaze(add.pattern, function(err, watcher) {\n  193          watcher.on('added', function(filepath) {\n  194            test.equal('added.js', path.basename(filepath));\n  ...\n  240      }\n  241      for (var i = 0; i < 2; i++) {\n  242:       watchers[i] = new gaze.Gaze('sub/one.js');\n  243        watchers[i].on('changed', changed);\n  244        watchers[i].on('ready', isReady);\n  ...\n  249  \n  250      var expected = [\n  251:       'new_dir',\n  252:       'new_dir/other.js',\n  253      ];\n  254  \n  ...\n  260  \n  261          if (expected.length === 1) {\n  262:           // Ensure the new folder is being watched correctly after initial add\n  263            setTimeout(function() {\n  264:             fs.writeFileSync('new_dir/dontmatch.txt', '');\n  265              setTimeout(function() {\n  266:               fs.writeFileSync('new_dir/other.js', '');\n  267              }, 1000);\n  268            }, 1000);\n  ...\n  273  \n  274  \n  275:       fs.mkdirSync('new_dir'); //fs.mkdirSync([folder]) seems to behave differently than grunt.file.write('[folder]/[file]')\n  276        \n  277  \n  ...\n  283  \n  284      var expected = [\n  285:       'new_dir',\n  286:       'new_dir/tmp.js',\n  287:       'new_dir/other.js',\n  288      ];\n  289  \n  ...\n  295  \n  296          if (expected.length === 1) {\n  297:           // Ensure the new folder is being watched correctly after initial add\n  298            setTimeout(function() {\n  299:             fs.writeFileSync('new_dir/dontmatch.txt', '');\n  300              setTimeout(function() {\n  301:               fs.writeFileSync('new_dir/other.js', '');\n  302              }, 1000);\n  303            }, 1000);\n  ...\n  307        });\n  308  \n  309:       grunt.file.write('new_dir/tmp.js', '');\n  310  \n  311        watcher.on('end', test.done);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\package.json:\n   36      \"test_port\": \"9001\"\n   37    },\n   38:   \"readme\": \"tiny-lr\\n-------\\n\\nThis script manages a tiny [LiveReload](http://livereload.com/) server\\nimplementation you can spawn in the background.\\n\\nIt exposes:\\n\\n- a background-friendly bin wrapper (thanks to\\n  [@FGRibreau](https://github.com/FGRibreau) [pid.js\\n  gist](https://gist.github.com/1846952))\\n\\n- [Grunt tasks](https://github.com/mklabs/tiny-lr#using-grunt) to start the server and trigger reload notification. Every task\\n  name is prefixed by `tinylr-`.\\n\\n- [Generic targets](https://github.com/mklabs/tiny-lr#using-make) to include in\\n  your Makefile (`include node_modules/tiny-lr/tasks/tiny-lr.mk`)\\n\\nIt doesn't have any watch ability, it must be done at the build process or\\napplication level.\\n\\nInstead, it exposes a very simple API to notify the server that some\\nchanges have been made, that is then broadcasted to every livereload client\\nconnected.\\n\\n    # notify a single change\\n    curl http://localhost:35729/changed?files=style.css\\n\\n    # notify using a longer path\\n    curl http://localhost:35729/changed?files=js/app.js\\n\\n    # notify multiple changes, comma or space delimited\\n    curl http://localhost:35729/changed?files=index.html,style.css,docs/docco.css\\n\\nOr you can bulk the information into a POST request, with body as a JSON array of files.\\n\\n    curl -X POST http://localhost:35729/changed -d '{ \\\"files\\\": [\\\"style.css\\\", \\\"app.js\\\"] }'\\n\\nAs for the livereload client, you need to install the browser extension:\\nhttp://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-\\n(**note**: you need to listen on port 35729 to be able to use with your\\nbrower extension)\\n\\nor add the livereload script tag manually:\\nhttp://feedback.livereload.com/knowledgebase/articles/86180-how-do-i-add-the-script-tag-manually-\\n(and here you can choose whatever port you want)\\n\\n## Integration\\n\\nThis package exposes a `bin` you can decide to install globally, but it's not recommended.\\n\\n    tiny-lr --help\\n\\n    Usage: tiny-lr [options]\\n\\n    Options:\\n      -h, --help        - Show help usage\\n      -v, --version     - Show package version\\n      -p, --port        - Port to listen on (default: 35729)\\n      --pid             - Path to the generated PID file (default: ./tiny-lr.pid)\\n\\n\\nThe best way to integrate the runner in your workflow is to add it as a `reload`\\nstep within your build tool. This build tool can then use the internal binary\\nlinked by npm in `node_modules/.bin/tiny-lr` to not rely on global installs (or\\nuse the server programmtically).\\n\\nYou can start the server using the binary provided, or use your own start script.\\n\\n```js\\nvar tinylr = require('tiny-lr');\\n\\n// standard LiveReload port\\nvar port = 35729;\\n\\n// tinylr(opts) => new tinylr.Server(opts);\\ntinylr().listen(port, function() {\\n  if(err) {\\n    // deal with err\\n    return;\\n  }\\n\\n  console.log('... Listening on %s (pid: %s) ...', port);\\n})\\n```\\n\\nYou can define your own route and listen for specific request:\\n\\n```js\\nvar server = tinylr();\\n\\nserver.on('GET /myplace', function(req, res) {\\n  res.write('Mine');\\n  res.end();\\n})\\n```\\n\\nAnd stop the server manually:\\n\\n```js\\nserver.close();\\n```\\n\\nThis will close any websocket connection established and emit a close event.\\n\\n### Middleware\\n\\nTo use as a connect / express middleware, tiny-lr needs query /\\nbodyParse middlewares prior in the stack.\\n\\nAny handled requests ends at the tinylr level, not found and errors are\\nnexted to the rest of the stack.\\n\\n```js\\n// This binds both express app and tinylr on the same port\\nvar app = express();\\napp.use(express.query())\\n  .use(express.bodyParser())\\n  .use(tinylr.middleware({ app: app }))\\n  .use(express.static(path.resolve('./')))\\n  .use(express.directory(path.resolve('./')))\\n  .listen(35729, function() {\\n    console.log('Listening on %d', 35729);\\n  })\\n```\\n\\nThe port you listen on is important, and tinylr should **always** listen on\\nthe LiveReload standard one: `35729`. Otherwise, you won't be able to rely\\non the browser extensions, though you can still use the manual snippet\\napproach.\\n\\nYou can also start two different servers, one on your app port, the\\nother listening on the LiveReload port. Check the\\n`examples/express/server.js` file to see how.\\n\\n### Using grunt\\n\\nThis package exposes a `tasks/` directory, that you can use within your Gruntfile with:\\n\\n```js\\ngrunt.loadNpmTasks('tiny-lr');\\n```\\n\\n- tinylr-start    - Starts a new tiny-lr Server, with the provided port.\\n- tinylr-reload   - Sends a reload notification to the previously started server.\\n\\n`tinylr-start` should be used with the `watch` task, probably with an alias\\nthat triggers both `tinylr-start watch` tasks.\\n\\n`tinylr-reload` should be configured as a \\\"watch\\\" task in your Gruntfile.\\n\\n```js\\ngrunt.initConfig({\\n  watch: {\\n    reload: {\\n      files: ['**/*.html', '**/*.js', '**/*.css', '**/*.{png,jpg}'],\\n      tasks: 'tinylr-reload'\\n    }\\n  }\\n});\\n\\ngrunt.registerTask('reload', 'tinylr-start watch');\\n```\\n\\n\\n### Using make\\n\\nSee `tasks/tiny-lr.mk`.\\n\\nInclude this file into your project Makefile to bring in the following targets:\\n\\n- start \\t\\t\\t\\t\\t\\t- Start the LiveReload server\\n- stop \\t\\t\\t\\t\\t\\t\\t- Stops the LiveReload server\\n- livereload \\t\\t\\t\\t- alias to start\\n- livereload-stop \\t- aias to stop\\n\\nThen define your \\\"empty\\\" targets, and the list of files you want to monitor.\\n\\n```make\\nCSS_DIR = app/styles\\nCSS_FILES = $(shell find $(CSS_DIR) -name '*.css')\\n\\n# include the livereload targets\\ninclude node_modules/tiny-lr/tasks/*.mk\\n\\n$(CSS_DIR): $(CSS_FILES)\\n  @echo CSS files changed: $?\\n    @touch $@\\n  curl -X POST http://localhost:35729/changed -d '{ \\\"files\\\": \\\"$?\\\" }'\\n\\nreload-css: livereload $(CSS_DIR)\\n\\n.PHONY: reload-css\\n```\\n\\nThe pattern is always the same:\\n\\n- define a target for your root directory that triggers a POST request\\n- `touch` the directory to update its mtime\\n- add reload target with `livereload` and the list of files to \\\"watch\\\" as\\n  prerequisites\\n\\nYou can chain multiple \\\"reload\\\" targets in a single one:\\n\\n```make\\nreload: reload-js reload-css reload-img reload-EVERYTHING\\n```\\n\\nCombine this with [visionmedia/watch](https://github.com/visionmedia/watch) and\\nyou have a livereload environment.\\n\\n    watch make reload\\n\\n    # add a -q flag to the watch command to suppress most of the annoying output\\n    watch -q reload\\n\\nThe `-q` flag only outputs STDERR, you can in your Makefile redirect the\\noutput of your commands to `>&2` to see them in `watch -q` mode.\\n\\n\\n## Tests\\n\\n    npm test\\n\\n---\\n\\n\\n# TOC\\n   - [tiny-lr](#tiny-lr)\\n     - [GET /](#tiny-lr-get-)\\n     - [GET /changed](#tiny-lr-get-changed)\\n     - [POST /changed](#tiny-lr-post-changed)\\n     - [GET /livereload.js](#tiny-lr-get-livereloadjs)\\n     - [GET /kill](#tiny-lr-get-kill)\\n<a name=\\\"\\\" />\\n\\n<a name=\\\"tiny-lr\\\" />\\n# tiny-lr\\naccepts ws clients.\\n\\n```js\\nvar url = parse(this.request.url);\\nvar server = this.app;\\n\\nvar ws = this.ws = new WebSocket('ws://' + url.host + '/livereload');\\n\\nws.onopen = function(event) {\\n  var hello = {\\n    command: 'hello',\\n    protocols: ['http://livereload.com/protocols/official-7']\\n  };\\n\\n  ws.send(JSON.stringify(hello));\\n};\\n\\nws.onmessage = function(event) {\\n  assert.deepEqual(event.data, JSON.stringify({\\n    command: 'hello',\\n    protocols: ['http://livereload.com/protocols/official-7'],\\n    serverName: 'tiny-lr'\\n  }));\\n\\n  assert.ok(Object.keys(server.clients).length);\\n  done();\\n};\\n```\\n\\nproperly cleans up established connection on exit.\\n\\n```js\\nvar ws = this.ws;\\n\\nws.onclose = done.bind(null, null);\\n\\nrequest(this.server)\\n  .get('/kill')\\n  .expect(200, function() {\\n    console.log('server shutdown');\\n  });\\n```\\n\\n<a name=\\\"tiny-lr\\\" />\\n# tiny-lr\\n<a name=\\\"tiny-lr-get-\\\" />\\n## GET /\\nrespond with nothing, but respond.\\n\\n```js\\nrequest(this.server)\\n  .get('/')\\n  .expect('Content-Type', /json/)\\n  .expect('{\\\"tinylr\\\":\\\"Welcome\\\",\\\"version\\\":\\\"0.0.1\\\"}')\\n  .expect(200, done);\\n```\\n\\nunknown route respond with proper 404 and error message.\\n\\n```js\\nrequest(this.server)\\n  .get('/whatev')\\n  .expect('Content-Type', /json/)\\n  .expect('{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"no such route\\\"}')\\n  .expect(404, done);\\n```\\n\\n<a name=\\\"tiny-lr-get-changed\\\" />\\n## GET /changed\\nwith no clients, no files.\\n\\n```js\\nrequest(this.server)\\n  .get('/changed')\\n  .expect('Content-Type', /json/)\\n  .expect(/\\\"clients\\\":\\\\[\\\\]/)\\n  .expect(/\\\"files\\\":\\\\[\\\\]/)\\n  .expect(200, done);\\n```\\n\\nwith no clients, some files.\\n\\n```js\\nrequest(this.server)\\n  .get('/changed?files=gonna.css,test.css,it.css')\\n  .expect('Content-Type', /json/)\\n  .expect('{\\\"clients\\\":[],\\\"files\\\":[\\\"gonna.css\\\",\\\"test.css\\\",\\\"it.css\\\"]}')\\n  .expect(200, done);\\n```\\n\\n<a name=\\\"tiny-lr-post-changed\\\" />\\n## POST /changed\\nwith no clients, no files.\\n\\n```js\\nrequest(this.server)\\n  .post('/changed')\\n  .expect('Content-Type', /json/)\\n  .expect(/\\\"clients\\\":\\\\[\\\\]/)\\n  .expect(/\\\"files\\\":\\\\[\\\\]/)\\n  .expect(200, done);\\n```\\n\\nwith no clients, some files.\\n\\n```js\\nvar data = { clients: [], files: ['cat.css', 'sed.css', 'ack.js'] };\\n\\nrequest(this.server)\\n  .post('/changed')\\n  .send({ files: data.files })\\n  .expect('Content-Type', /json/)\\n  .expect(JSON.stringify(data))\\n  .expect(200, done);\\n```\\n\\n<a name=\\\"tiny-lr-get-livereloadjs\\\" />\\n## GET /livereload.js\\nrespond with livereload script.\\n\\n```js\\nrequest(this.server)\\n  .get('/livereload.js')\\n  .expect(/LiveReload/)\\n  .expect(200, done);\\n```\\n\\n<a name=\\\"tiny-lr-get-kill\\\" />\\n## GET /kill\\nshutdown the server.\\n\\n```js\\nvar server = this.server;\\nrequest(server)\\n  .get('/kill')\\n  .expect(200, function(err) {\\n    if(err) return done(err);\\n    assert.ok(!server._handle);\\n    done();\\n  });\\n```\\n\\n---\\n\\n- 2013-01-21 - v0.0.4 - middleware support\\n- 2013-01-20 - v0.0.3 - serve livereload from repo (#4)\\n- 2013-01-12 - v0.0.2 - tasks - support for grunt 0.3.x (#1)\\n- 2013-01-05 - v0.0.1 - Initial release\\n\",\n   39    \"readmeFilename\": \"readme.md\",\n   40    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\readme.md:\n   74  var port = 35729;\n   75  \n   76: // tinylr(opts) => new tinylr.Server(opts);\n   77  tinylr().listen(port, function() {\n   78    if(err) {\n   ..\n  142  ```\n  143  \n  144: - tinylr-start    - Starts a new tiny-lr Server, with the provided port.\n  145  - tinylr-reload   - Sends a reload notification to the previously started server.\n  146  \n  ...\n  243  var server = this.app;\n  244  \n  245: var ws = this.ws = new WebSocket('ws://' + url.host + '/livereload');\n  246  \n  247  ws.onopen = function(event) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\bin\\tiny-lr:\n   47  \n   48  \n   49: var srv = new Server(opts);\n   50  \n   51  srv.on('close', function() {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\lib\\client.js:\n    7  \n    8  function Client(req, socket, head) {\n    9:   this.ws = new WebSocket(req, socket, head);\n   10    this.ws.onmessage = this.message.bind(this);\n   11    this.ws.onclose = this.close.bind(this);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\lib\\index.js:\n   10  \n   11  function tinylr(opts) {\n   12:   return new Server(opts);\n   13  }\n   14  \n   ..\n   16  \n   17  function middleware(opts) {\n   18:   var srv = new Server(opts);\n   19    return function tinylr(req, res, next) {\n   20      srv.handler(req, res, next);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\lib\\server.js:\n  119  Server.prototype.websocketify = function websocketify(req, socket, head) {\n  120    var self = this;\n  121:   var client = new Client(req, socket, head);\n  122    this.clients[client.id] = client;\n  123  \n  124:   debug('New LiveReload connection (id: %s)', client.id);\n  125    client.on('end', function() {\n  126      debug('Destroy client %s (url: %s)', client.id, client.url);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\lib\\public\\livereload.js:\n   16        });\n   17      } else {\n   18:       throw new Error(\"Attempt to attach custom event \" + eventName + \" to something which isn't a DOMElement\");\n   19      }\n   20    },\n   ..\n   30        }\n   31      } else {\n   32:       throw new Error(\"Attempt to fire custom event \" + eventName + \" on something which isn't a DOMElement\");\n   33      }\n   34    }\n   ..\n   69          } else if (message = this._parseMessage(data, ['hello'])) {\n   70            if (!message.protocols.length) {\n   71:             throw new ProtocolError(\"no protocols specified in handshake message\");\n   72            } else if (__indexOf.call(message.protocols, PROTOCOL_7) >= 0) {\n   73              this.protocol = 7;\n   ..\n   75              this.protocol = 6;\n   76            } else {\n   77:             throw new ProtocolError(\"no supported protocols found\");\n   78            }\n   79          }\n   ..\n   82          message = JSON.parse(data);\n   83          if (!message.length) {\n   84:           throw new ProtocolError(\"protocol 6 messages must be arrays\");\n   85          }\n   86          command = message[0], options = message[1];\n   87          if (command !== 'refresh') {\n   88:           throw new ProtocolError(\"unknown protocol 6 command\");\n   89          }\n   90          return this.handlers.message({\n   ..\n  110        message = JSON.parse(data);\n  111      } catch (e) {\n  112:       throw new ProtocolError('unparsable JSON', data);\n  113      }\n  114      if (!message.command) {\n  115:       throw new ProtocolError('missing \"command\" key', data);\n  116      }\n  117      if (_ref = message.command, __indexOf.call(validCommands, _ref) < 0) {\n  118:       throw new ProtocolError(\"invalid command '\" + message.command + \"', only valid commands are: \" + (validCommands.join(', ')) + \")\", data);\n  119      }\n  120      return message;\n  ...\n  143      this._connectionDesired = false;\n  144      this.protocol = 0;\n  145:     this.protocolParser = new Parser({\n  146        connected: function(protocol) {\n  147          _this.protocol = protocol;\n  ...\n  159        }\n  160      });\n  161:     this._handshakeTimeout = new Timer(function() {\n  162        if (!_this._isSocketConnected()) {\n  163          return;\n  ...\n  166        return _this.socket.close();\n  167      });\n  168:     this._reconnectTimer = new Timer(function() {\n  169        if (!_this._connectionDesired) {\n  170          return;\n  ...\n  189      this.protocolParser.reset();\n  190      this.handlers.connecting();\n  191:     this.socket = new this.WebSocket(this._uri);\n  192      this.socket.onopen = function(e) {\n  193        return _this._onopen(e);\n  ...\n  344      element = _ref[_i];\n  345      if ((src = element.src) && (m = src.match(/^[^:]+:\\/\\/(.*)\\/z?livereload\\.js(?:\\?(.*))?$/))) {\n  346:       options = new Options();\n  347        if (mm = m[1].match(/^([^\\/:]+)(?::(\\d+))?$/)) {\n  348          options.host = mm[1];\n  ...\n  570  \n  571      Reloader.prototype.reloadStyleImages = function(style, styleNames, path, expando) {\n  572:       var newValue, styleName, value, _i, _len,\n  573          _this = this;\n  574        for (_i = 0, _len = styleNames.length; _i < _len; _i++) {\n  ...\n  576          value = style[styleName];\n  577          if (typeof value === 'string') {\n  578:           newValue = value.replace(/\\burl\\s*\\(([^)]*)\\)/, function(match, src) {\n  579              if (pathsMatch(path, pathFromUrl(src))) {\n  580                return \"url(\" + (_this.generateCacheBustUrl(src, expando)) + \")\";\n  ...\n  583              }\n  584            });\n  585:           if (newValue !== value) {\n  586:             style[styleName] = newValue;\n  587            }\n  588          }\n  ...\n  750  \n  751      Reloader.prototype.reattachImportedRule = function(_arg) {\n  752:       var href, index, link, media, newRule, parent, rule, tempLink,\n  753          _this = this;\n  754        rule = _arg.rule, index = _arg.index, link = _arg.link;\n  ...\n  756        href = this.generateCacheBustUrl(rule.href);\n  757        media = rule.media.length ? [].join.call(rule.media, ', ') : '';\n  758:       newRule = \"@import url(\\\"\" + href + \"\\\") \" + media + \";\";\n  759:       rule.__LiveReload_newHref = href;\n  760        tempLink = this.document.createElement(\"link\");\n  761        tempLink.rel = 'stylesheet';\n  ...\n  769            tempLink.parentNode.removeChild(tempLink);\n  770          }\n  771:         if (rule.__LiveReload_newHref !== href) {\n  772            return;\n  773          }\n  774:         parent.insertRule(newRule, index);\n  775          parent.deleteRule(index + 1);\n  776          rule = parent.cssRules[index];\n  777:         rule.__LiveReload_newHref = href;\n  778          return _this.Timer.start(_this.importCacheWaitPeriod, function() {\n  779:           if (rule.__LiveReload_newHref !== href) {\n  780              return;\n  781            }\n  782:           parent.insertRule(newRule, index);\n  783            return parent.deleteRule(index + 1);\n  784          });\n  ...\n  851        return;\n  852      }\n  853:     this.reloader = new Reloader(this.window, this.console, Timer);\n  854:     this.connector = new Connector(this.options, this.WebSocket, Timer, {\n  855        connecting: function() {},\n  856        socketConnected: function() {},\n  ...\n  943      if (this.hasPlugin(pluginClass.identifier)) return;\n  944      this.pluginIdentifiers[pluginClass.identifier] = true;\n  945:     plugin = new pluginClass(this.window, {\n  946        _livereload: this,\n  947        _reloader: this.reloader,\n  ...\n 1034  var CustomEvents, LiveReload, k;\n 1035  CustomEvents = __customevents;\n 1036: LiveReload = window.LiveReload = new (__livereload.LiveReload)(window);\n 1037  for (k in window) {\n 1038    if (k.match(/^LiveReloadPlugin/)) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\debug\\debug.js:\n   20      fmt = coerce(fmt);\n   21  \n   22:     var curr = new Date;\n   23      var ms = curr - (debug[name] || curr);\n   24      debug[name] = curr;\n   ..\n   63      name = split[i].replace('*', '.*?');\n   64      if (name[0] === '-') {\n   65:       debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n   66      }\n   67      else {\n   68:       debug.names.push(new RegExp('^' + name + '$'));\n   69      }\n   70    }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\debug\\lib\\debug.js:\n   23      name = name.replace('*', '.*?');\n   24      if (name[0] === '-') {\n   25:       skips.push(new RegExp('^' + name.substr(1) + '$'));\n   26      } else {\n   27:       names.push(new RegExp('^' + name + '$'));\n   28      }\n   29    });\n   ..\n  111      fmt = coerce(fmt);\n  112  \n  113:     var curr = new Date;\n  114      var ms = curr - (prev[name] || curr);\n  115      prev[name] = curr;\n  ...\n  126      fmt = coerce(fmt);\n  127  \n  128:     fmt = new Date().toUTCString()\n  129        + ' ' + name + ' ' + fmt;\n  130      console.error.apply(this, arguments);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\package.json:\n   39      }\n   40    ],\n   41:   \"readme\": \"# faye-websocket\\n\\n* Travis CI build: [<img src=\\\"https://secure.travis-ci.org/faye/faye-websocket-node.png\\\" />](http://travis-ci.org/faye/faye-websocket-node)\\n* Autobahn tests: [server](http://faye.jcoglan.com/autobahn/servers/), [client](http://faye.jcoglan.com/autobahn/clients/)\\n\\nThis is a robust, general-purpose WebSocket implementation extracted from the\\n[Faye](http://faye.jcoglan.com) project. It provides classes for easily building\\nWebSocket servers and clients in Node. It does not provide a server itself, but\\nrather makes it easy to handle WebSocket connections within an existing\\n[Node](http://nodejs.org/) application. It does not provide any abstraction\\nother than the standard [WebSocket API](http://dev.w3.org/html5/websockets/).\\n\\nIt also provides an abstraction for handling [EventSource](http://dev.w3.org/html5/eventsource/)\\nconnections, which are one-way connections that allow the server to push data to\\nthe client. They are based on streaming HTTP responses and can be easier to\\naccess via proxies than WebSockets.\\n\\nThe server-side socket can process [draft-75](http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75),\\n[draft-76](http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76),\\n[hybi-07](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-07)\\nand later versions of the protocol. It selects protocol versions automatically,\\nsupports both `text` and `binary` messages, and transparently handles `ping`,\\n`pong`, `close` and fragmented messages.\\n\\n\\n## Handling WebSocket connections in Node\\n\\nYou can handle WebSockets on the server side by listening for HTTP Upgrade\\nrequests, and creating a new socket for the request. This socket object exposes\\nthe usual WebSocket methods for receiving and sending messages. For example this\\nis how you'd implement an echo server:\\n\\n```js\\nvar WebSocket = require('faye-websocket'),\\n    http      = require('http');\\n\\nvar server = http.createServer();\\n\\nserver.addListener('upgrade', function(request, socket, head) {\\n  var ws = new WebSocket(request, socket, head);\\n  \\n  ws.onmessage = function(event) {\\n    ws.send(event.data);\\n  };\\n  \\n  ws.onclose = function(event) {\\n    console.log('close', event.code, event.reason);\\n    ws = null;\\n  };\\n});\\n\\nserver.listen(8000);\\n```\\n\\nNote that under certain circumstances (notably a draft-76 client connecting\\nthrough an HTTP proxy), the WebSocket handshake will not be complete after you\\ncall `new WebSocket()` because the server will not have received the entire\\nhandshake from the client yet. In this case, calls to `ws.send()` will buffer\\nthe message in memory until the handshake is complete, at which point any\\nbuffered messages will be sent to the client.\\n\\nIf you need to detect when the WebSocket handshake is complete, you can use the\\n`onopen` event.\\n\\nIf the connection's protocol version supports it, you can call `ws.ping()` to\\nsend a ping message and wait for the client's response. This method takes a\\nmessage string, and an optional callback that fires when a matching pong message\\nis received. It returns `true` iff a ping message was sent. If the client does\\nnot support ping/pong, this method sends no data and returns `false`.\\n\\n```js\\nws.ping('Mic check, one, two', function() {\\n  // fires when pong is received\\n});\\n```\\n\\n\\n## Using the WebSocket client\\n\\nThe client supports both the plain-text `ws` protocol and the encrypted `wss`\\nprotocol, and has exactly the same interface as a socket you would use in a web\\nbrowser. On the wire it identifies itself as hybi-13.\\n\\n```js\\nvar WebSocket = require('faye-websocket'),\\n    ws        = new WebSocket.Client('ws://www.example.com/');\\n\\nws.onopen = function(event) {\\n  console.log('open');\\n  ws.send('Hello, world!');\\n};\\n\\nws.onmessage = function(event) {\\n  console.log('message', event.data);\\n};\\n\\nws.onclose = function(event) {\\n  console.log('close', event.code, event.reason);\\n  ws = null;\\n};\\n```\\n\\n\\n## Subprotocol negotiation\\n\\nThe WebSocket protocol allows peers to select and identify the application\\nprotocol to use over the connection. On the client side, you can set which\\nprotocols the client accepts by passing a list of protocol names when you\\nconstruct the socket:\\n\\n```js\\nvar ws = new WebSocket.Client('ws://www.example.com/', ['irc', 'amqp']);\\n```\\n\\nOn the server side, you can likewise pass in the list of protocols the server\\nsupports after the other constructor arguments:\\n\\n```js\\nvar ws = new WebSocket(request, socket, head, ['irc', 'amqp']);\\n```\\n\\nIf the client and server agree on a protocol, both the client- and server-side\\nsocket objects expose the selected protocol through the `ws.protocol` property.\\nIf they cannot agree on a protocol to use, the client closes the connection.\\n\\n\\n## WebSocket API\\n\\nThe WebSocket API consists of several event handlers and a method for sending\\nmessages.\\n\\n* <b><tt>onopen</tt></b> fires when the socket connection is established. Event\\n  has no attributes.\\n* <b><tt>onerror</tt></b> fires when the connection attempt fails. Event has no\\n  attributes.\\n* <b><tt>onmessage</tt></b> fires when the socket receives a message. Event has\\n  one attribute, <b><tt>data</tt></b>, which is either a `String` (for text\\n  frames) or a `Buffer` (for binary frames).\\n* <b><tt>onclose</tt></b> fires when either the client or the server closes the\\n  connection. Event has two optional attributes, <b><tt>code</tt></b> and\\n  <b><tt>reason</tt></b>, that expose the status code and message sent by the\\n  peer that closed the connection.\\n* <b><tt>send(message)</tt></b> accepts either a `String` or a `Buffer` and\\n  sends a text or binary message over the connection to the other peer.\\n* <b><tt>close(code, reason)</tt></b> closes the connection, sending the given\\n  status code and reason text, both of which are optional.\\n* <b><tt>protocol</tt></b> is a string (which may be empty) identifying the\\n  subprotocol the socket is using.\\n\\n\\n## Handling EventSource connections in Node\\n\\nEventSource connections provide a very similar interface, although because they\\nonly allow the server to send data to the client, there is no `onmessage` API.\\nEventSource allows the server to push text messages to the client, where each\\nmessage has an optional event-type and ID.\\n\\n```js\\nvar WebSocket   = require('faye-websocket'),\\n    EventSource = WebSocket.EventSource,\\n    http        = require('http');\\n\\nvar server = http.createServer();\\n\\nserver.addListener('request', function(request, response) {\\n  if (EventSource.isEventSource(request)) {\\n    var es = new EventSource(request, response);\\n    console.log('open', es.url, es.lastEventId);\\n    \\n    // Periodically send messages\\n    var loop = setInterval(function() { es.send('Hello') }, 1000);\\n    \\n    es.onclose = function() {\\n      clearInterval(loop);\\n      es = null;\\n    };\\n  \\n  } else {\\n    // Normal HTTP request\\n    response.writeHead(200, {'Content-Type': 'text/plain'});\\n    response.write('Hello');\\n    response.end();\\n  }\\n});\\n\\nserver.listen(8000);\\n```\\n\\nThe `send` method takes two optional parameters, `event` and `id`. The default\\nevent-type is `'message'` with no ID. For example, to send a `notification`\\nevent with ID `99`:\\n\\n```js\\nes.send('Breaking News!', {event: 'notification', id: '99'});\\n```\\n\\nThe `EventSource` object exposes the following properties:\\n\\n* <b><tt>url</tt></b> is a string containing the URL the client used to create\\n  the EventSource.\\n* <b><tt>lastEventId</tt></b> is a string containing the last event ID\\n  received by the client. You can use this when the client reconnects after a\\n  dropped connection to determine which messages need resending.\\n\\nWhen you initialize an EventSource with ` new EventSource()`, you can pass\\nconfiguration options after the `response` parameter. Available options are:\\n\\n* <b><tt>retry</tt></b> is a number that tells the client how long (in seconds)\\n  it should wait after a dropped connection before attempting to reconnect.\\n* <b><tt>ping</tt></b> is a number that tells the server how often (in seconds)\\n  to send 'ping' packets to the client to keep the connection open, to defeat\\n  timeouts set by proxies. The client will ignore these messages.\\n\\nFor example, this creates a connection that pings every 15 seconds and is\\nretryable every 10 seconds if the connection is broken:\\n\\n```js\\nvar es = new EventSource(request, response, {ping: 15, retry: 10});\\n```\\n\\nYou can send a ping message at any time by calling `es.ping()`. Unlike WebSocket,\\nthe client does not send a response to this; it is merely to send some data over\\nthe wire to keep the connection alive.\\n\\n\\n## License\\n\\n(The MIT License)\\n\\nCopyright (c) 2009-2013 James Coglan\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the 'Software'), to deal in\\nthe Software without restriction, including without limitation the rights to use,\\ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\\nSoftware, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n\",\n   42    \"readmeFilename\": \"README.markdown\",\n   43    \"repository\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\README.markdown:\n   27  \n   28  You can handle WebSockets on the server side by listening for HTTP Upgrade\n   29: requests, and creating a new socket for the request. This socket object exposes\n   30  the usual WebSocket methods for receiving and sending messages. For example this\n   31  is how you'd implement an echo server:\n   ..\n   38  \n   39  server.addListener('upgrade', function(request, socket, head) {\n   40:   var ws = new WebSocket(request, socket, head);\n   41    \n   42    ws.onmessage = function(event) {\n   ..\n   55  Note that under certain circumstances (notably a draft-76 client connecting\n   56  through an HTTP proxy), the WebSocket handshake will not be complete after you\n   57: call `new WebSocket()` because the server will not have received the entire\n   58  handshake from the client yet. In this case, calls to `ws.send()` will buffer\n   59  the message in memory until the handshake is complete, at which point any\n   ..\n   84  ```js\n   85  var WebSocket = require('faye-websocket'),\n   86:     ws        = new WebSocket.Client('ws://www.example.com/');\n   87  \n   88  ws.onopen = function(event) {\n   ..\n  110  \n  111  ```js\n  112: var ws = new WebSocket.Client('ws://www.example.com/', ['irc', 'amqp']);\n  113  ```\n  114  \n  ...\n  117  \n  118  ```js\n  119: var ws = new WebSocket(request, socket, head, ['irc', 'amqp']);\n  120  ```\n  121  \n  ...\n  165  server.addListener('request', function(request, response) {\n  166    if (EventSource.isEventSource(request)) {\n  167:     var es = new EventSource(request, response);\n  168      console.log('open', es.url, es.lastEventId);\n  169      \n  ...\n  192  \n  193  ```js\n  194: es.send('Breaking News!', {event: 'notification', id: '99'});\n  195  ```\n  196  \n  ...\n  203    dropped connection to determine which messages need resending.\n  204  \n  205: When you initialize an EventSource with ` new EventSource()`, you can pass\n  206  configuration options after the `response` parameter. Available options are:\n  207  \n  ...\n  216  \n  217  ```js\n  218: var es = new EventSource(request, response, {ping: 15, retry: 10});\n  219  ```\n  220  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\examples\\autobahn_client.js:\n    7      skip  = [];\n    8  \n    9: var socket = new WebSocket.Client(host + '/getCaseCount'),\n   10      progress;\n   11  \n   ..\n   21  \n   22      if (n > cases) {\n   23:       socket = new WebSocket.Client(host + '/updateReports?agent=' + encodeURIComponent(agent));\n   24        socket.onclose = process.exit;\n   25  \n   ..\n   28  \n   29      } else {\n   30:       socket = new WebSocket.Client(host + '/runCase?case=' + n + '&agent=' + encodeURIComponent(agent));\n   31  \n   32        socket.onmessage = function(event) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\examples\\client.js:\n    3      secure    = process.argv[3] === 'ssl',\n    4      scheme    = secure ? 'wss' : 'ws',\n    5:     ws        = new WebSocket.Client(scheme + '://localhost:' + port + '/');\n    6  \n    7  console.log('Connecting to ' + ws.url);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\examples\\server.js:\n    8  \n    9  var upgradeHandler = function(request, socket, head) {\n   10:   var ws = new WebSocket(request, socket, head, ['irc', 'xmpp'], {ping: 5});\n   11    console.log('open', ws.url, ws.version, ws.protocol);\n   12  \n   ..\n   25      return staticHandler(request, response);\n   26  \n   27:   var es   = new WebSocket.EventSource(request, response),\n   28        time = parseInt(es.lastEventId, 10) || 0;\n   29  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\examples\\sse.html:\n   12      <script type=\"text/javascript\">\n   13        var logger = document.getElementsByTagName('ul')[0],\n   14:           socket = new EventSource('/');\n   15  \n   16        var log = function(text) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\examples\\ws.html:\n   14            Socket = window.MozWebSocket || window.WebSocket,\n   15            protos = ['foo', 'bar', 'xmpp'],\n   16:           socket = new Socket('ws://' + location.hostname + ':' + location.port + '/', protos),\n   17            index  = 0;\n   18  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\eventsource.js:\n   99      this._response.end();\n  100  \n  101:     var event = new Event('close');\n  102      event.initEvent('close', false, false);\n  103      this.dispatchEvent(event);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket.js:\n   44  \n   45    var Parser = getParser(request);\n   46:   this._parser = new Parser(this, {protocols: supportedProtos});\n   47  \n   48    var self = this;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket\\api.js:\n   18        this.send.apply(this, message);\n   19  \n   20:     var event = new Event('open');\n   21      event.initEvent('open', false, false);\n   22      this.dispatchEvent(event);\n   ..\n   25    receive: function(data) {\n   26      if (this.readyState !== API.OPEN) return false;\n   27:     var event = new Event('message');\n   28      event.initEvent('message', false, false);\n   29      event.data = data;\n   ..\n   37          return true;\n   38        } else {\n   39:         throw new Error('Cannot call send(), socket is not open yet');\n   40        }\n   41      }\n   ..\n   63        if (this._pingLoop) clearInterval(this._pingLoop);\n   64        if (this._stream) this._stream.end();\n   65:       var event = new Event('close', {code: code || 1000, reason: reason || ''});\n   66        event.initEvent('close', false, false);\n   67        this.dispatchEvent(event);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket\\client.js:\n   25                   : net.createConnection(this._uri.port || 80, this._uri.hostname);\n   26  \n   27:   this._parser = new HybiParser(this, {masking: true, protocols: protocols});\n   28    this._stream = connection;\n   29  \n   ..\n   61          this.protocol = this._handshake.protocol || '';\n   62          this.readyState = API.OPEN;\n   63:         var event = new Event('open');\n   64          event.initEvent('open', false, false);\n   65          this.dispatchEvent(event);\n   ..\n   69        } else {\n   70          this.readyState = API.CLOSED;\n   71:         var event = new Event('close', {code: 1006, reason: ''});\n   72          event.initEvent('close', false, false);\n   73          this.dispatchEvent(event);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket\\draft75_parser.js:\n   10  \n   11    handshakeResponse: function() {\n   12:     return new Buffer('HTTP/1.1 101 Web Socket Protocol Handshake\\r\\n' +\n   13                        'Upgrade: WebSocket\\r\\n' +\n   14                        'Connection: Upgrade\\r\\n' +\n   ..\n   53          case 2:\n   54            if (data === 0xFF) {\n   55:             message = new Buffer(this._buffer);\n   56              this._socket.receive(message.toString('utf8', 0, this._buffer.length));\n   57              this._stage = 0;\n   ..\n   81      if (Buffer.isBuffer(data)) return data;\n   82  \n   83:     var buffer = new Buffer(data, 'utf8'),\n   84:         frame  = new Buffer(buffer.length + 2);\n   85  \n   86      frame[0] = 0x00;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket\\draft76_parser.js:\n    5  var bridge = function() {};\n    6  bridge.prototype = Draft75Parser.prototype;\n    7: Draft76Parser.prototype = new bridge();\n    8  \n    9  var numberFromKey = function(key) {\n   ..\n   30    var request = this._socket.request, tmp;\n   31  \n   32:   var response = new Buffer('HTTP/1.1 101 Web Socket Protocol Handshake\\r\\n' +\n   33                              'Upgrade: WebSocket\\r\\n' +\n   34                              'Connection: Upgrade\\r\\n' +\n   ..\n   39    var signature = this.handshakeSignature(head);\n   40    if (signature) {\n   41:     tmp = new Buffer(response.length + signature.length);\n   42      response.copy(tmp, 0);\n   43      signature.copy(tmp, response.length);\n   ..\n   70  \n   71    this._handshakeComplete = true;\n   72:   return new Buffer(MD5.digest('binary'), 'binary');\n   73  };\n   74  \n   ..\n   91  Draft76Parser.prototype.close = function(code, reason, callback, context) {\n   92    if (this._closed) return;\n   93:   if (this._closing) this._socket.send(new Buffer([0xFF, 0x00]));\n   94    this._closed = true;\n   95    if (callback) callback.call(context);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket\\hybi_parser.js:\n    6    this._reset();\n    7    this._socket    = webSocket;\n    8:   this._reader    = new Reader();\n    9    this._stage     = 0;\n   10    this._masking   = options && options.masking;\n   ..\n   98      }\n   99  \n  100:     return new Buffer(headers.concat('','').join('\\r\\n'), 'utf8');\n  101    },\n  102  \n  ...\n  106  \n  107    createHandshake: function(uri) {\n  108:     return new Handshake(uri, this._protocols);\n  109    },\n  110  \n  ...\n  201      var isText = (typeof data === 'string'),\n  202          opcode = this.OPCODES[type || (isText ? 'text' : 'binary')],\n  203:         buffer = isText ? new Buffer(data, 'utf8') : data,\n  204          insert = code ? 2 : 0,\n  205          length = buffer.length + insert,\n  ...\n  207          offset = header + (this._masking ? 4 : 0),\n  208          masked = this._masking ? this.MASK : 0,\n  209:         frame  = new Buffer(length + offset),\n  210          BYTE   = this.BYTE,\n  211          mask, i;\n  ...\n  240        mask = [Math.floor(Math.random() * 256), Math.floor(Math.random() * 256),\n  241                Math.floor(Math.random() * 256), Math.floor(Math.random() * 256)];\n  242:       new Buffer(mask).copy(frame, header);\n  243        HybiParser.mask(frame, mask, offset);\n  244      }\n  ...\n  273        this.buffer(payload);\n  274        if (this._final) {\n  275:         var message = new Buffer(this._buffer);\n  276          if (this._mode === 'text') message = this._encode(message);\n  277          this._reset();\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket\\hybi_parser\\handshake.js:\n    5    this._protocols = protocols;\n    6  \n    7:   var buffer = new Buffer(16), i = 16;\n    8    while (i--) buffer[i] = Math.floor(Math.random() * 256);\n    9    this._key = buffer.toString('base64');\n   ..\n   14  \n   15    var HTTPParser = process.binding('http_parser').HTTPParser,\n   16:       parser     = new HTTPParser(HTTPParser.RESPONSE || 'response'),\n   17        current    = null,\n   18        self       = this;\n   ..\n   58      headers.push('Sec-WebSocket-Protocol: ' + this._protocols.join(', '));\n   59  \n   60:   return new Buffer(headers.concat('','').join('\\r\\n'), 'utf8');\n   61  };\n   62  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\lib\\faye\\websocket\\hybi_parser\\stream_reader.js:\n   10  StreamReader.prototype.put = function(buffer) {\n   11    if (!buffer || buffer.length === 0) return;\n   12:   if (!buffer.copy) buffer = new Buffer(buffer);\n   13    this._queue.push(buffer);\n   14  };\n   15  \n   16  StreamReader.prototype._readBuffer = function(length) {\n   17:   var buffer = new Buffer(length),\n   18        queue  = this._queue,\n   19        remain = length,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\spec\\runner.js:\n   17  \n   18    server.addListener('upgrade', function(request, socket, head) {\n   19:     var ws = new WebSocket(request, socket, head, [\"echo\"])\n   20      ws.onmessage = function(event) {\n   21        ws.send(event.data)\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\spec\\faye\\websocket\\client_spec.js:\n    3  JS.ENV.WebSocketSteps = JS.Test.asyncSteps({\n    4    server: function(port, secure, callback) {\n    5:     this._adapter = new EchoServer()\n    6      this._adapter.listen(port, secure)\n    7      this._port = port\n    .\n   25                   }\n   26  \n   27:     this._ws = new Client(url, protocols, {verify: false})\n   28  \n   29      this._ws.onopen  = function() { resume(true)  }\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\spec\\faye\\websocket\\draft75parser_spec.js:\n    4    before(function() { with(this) {\n    5      this.webSocket = {dispatchEvent: function() {}}\n    6:     this.parser = new Draft75Parser(webSocket)\n    7    }})\n    8  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\spec\\faye\\websocket\\draft76parser_spec.js:\n    4    before(function() { with(this) {\n    5      this.webSocket = {dispatchEvent: function() {}}\n    6:     this.parser = new Draft76Parser(webSocket)\n    7      parser._handshakeComplete = true\n    8    }})\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\faye-websocket\\spec\\faye\\websocket\\hybi_parser_spec.js:\n    4    before(function() { with(this) {\n    5      this.webSocket = {dispatchEvent: function() {}}\n    6:     this.parser = new HybiParser(webSocket)\n    7    }})\n    8  \n    .\n   10      var bytes = [];\n   11      for (var i = 0, n = arguments.length; i < n; i++) bytes = bytes.concat(arguments[i])\n   12:     this.parser.parse(new Buffer(bytes))\n   13    })\n   14  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\noptify\\index.js:\n   26  // Returns an instance of `Noptify`\n   27  function noptify(args, options) {\n   28:   return new Noptify(args, options);\n   29  }\n   30  \n   ..\n  250  function pad(str, max) {\n  251    var ln = max - str.length;\n  252:   return ln > 0 ? str + new Array(ln).join(' ') : str;\n  253  }\n  254  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\noptify\\actions\\commandable.js:\n   20  \n   21  commandable.route = function route(pattern, fn) {\n   22:   pattern = pattern instanceof RegExp ? pattern : new RegExp('^' + pattern + '$');\n   23    this._routes.push({\n   24      pattern: pattern,\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\noptify\\node_modules\\nopt\\package.json:\n   26      \"abbrev\": \"1\"\n   27    },\n   28:   \"readme\": \"If you want to write an option parser, and have it be good, there are\\ntwo ways to do it.  The Right Way, and the Wrong Way.\\n\\nThe Wrong Way is to sit down and write an option parser.  We've all done\\nthat.\\n\\nThe Right Way is to write some complex configurable program with so many\\noptions that you go half-insane just trying to manage them all, and put\\nit off with duct-tape solutions until you see exactly to the core of the\\nproblem, and finally snap and write an awesome option parser.\\n\\nIf you want to write an option parser, don't write an option parser.\\nWrite a package manager, or a source control system, or a service\\nrestarter, or an operating system.  You probably won't end up with a\\ngood one of those, but if you don't give up, and you are relentless and\\ndiligent enough in your procrastination, you may just end up with a very\\nnice option parser.\\n\\n## USAGE\\n\\n    // my-program.js\\n    var nopt = require(\\\"nopt\\\")\\n      , Stream = require(\\\"stream\\\").Stream\\n      , path = require(\\\"path\\\")\\n      , knownOpts = { \\\"foo\\\" : [String, null]\\n                    , \\\"bar\\\" : [Stream, Number]\\n                    , \\\"baz\\\" : path\\n                    , \\\"bloo\\\" : [ \\\"big\\\", \\\"medium\\\", \\\"small\\\" ]\\n                    , \\\"flag\\\" : Boolean\\n                    , \\\"pick\\\" : Boolean\\n                    , \\\"many\\\" : [String, Array]\\n                    }\\n      , shortHands = { \\\"foofoo\\\" : [\\\"--foo\\\", \\\"Mr. Foo\\\"]\\n                     , \\\"b7\\\" : [\\\"--bar\\\", \\\"7\\\"]\\n                     , \\\"m\\\" : [\\\"--bloo\\\", \\\"medium\\\"]\\n                     , \\\"p\\\" : [\\\"--pick\\\"]\\n                     , \\\"f\\\" : [\\\"--flag\\\"]\\n                     }\\n                 // everything is optional.\\n                 // knownOpts and shorthands default to {}\\n                 // arg list defaults to process.argv\\n                 // slice defaults to 2\\n      , parsed = nopt(knownOpts, shortHands, process.argv, 2)\\n    console.log(parsed)\\n\\nThis would give you support for any of the following:\\n\\n```bash\\n$ node my-program.js --foo \\\"blerp\\\" --no-flag\\n{ \\\"foo\\\" : \\\"blerp\\\", \\\"flag\\\" : false }\\n\\n$ node my-program.js ---bar 7 --foo \\\"Mr. Hand\\\" --flag\\n{ bar: 7, foo: \\\"Mr. Hand\\\", flag: true }\\n\\n$ node my-program.js --foo \\\"blerp\\\" -f -----p\\n{ foo: \\\"blerp\\\", flag: true, pick: true }\\n\\n$ node my-program.js -fp --foofoo\\n{ foo: \\\"Mr. Foo\\\", flag: true, pick: true }\\n\\n$ node my-program.js --foofoo -- -fp  # -- stops the flag parsing.\\n{ foo: \\\"Mr. Foo\\\", argv: { remain: [\\\"-fp\\\"] } }\\n\\n$ node my-program.js --blatzk 1000 -fp # unknown opts are ok.\\n{ blatzk: 1000, flag: true, pick: true }\\n\\n$ node my-program.js --blatzk true -fp # but they need a value\\n{ blatzk: true, flag: true, pick: true }\\n\\n$ node my-program.js --no-blatzk -fp # unless they start with \\\"no-\\\"\\n{ blatzk: false, flag: true, pick: true }\\n\\n$ node my-program.js --baz b/a/z # known paths are resolved.\\n{ baz: \\\"/Users/isaacs/b/a/z\\\" }\\n\\n# if Array is one of the types, then it can take many\\n# values, and will always be an array.  The other types provided\\n# specify what types are allowed in the list.\\n\\n$ node my-program.js --many 1 --many null --many foo\\n{ many: [\\\"1\\\", \\\"null\\\", \\\"foo\\\"] }\\n\\n$ node my-program.js --many foo\\n{ many: [\\\"foo\\\"] }\\n```\\n\\nRead the tests at the bottom of `lib/nopt.js` for more examples of\\nwhat this puppy can do.\\n\\n## Types\\n\\nThe following types are supported, and defined on `nopt.typeDefs`\\n\\n* String: A normal string.  No parsing is done.\\n* path: A file system path.  Gets resolved against cwd if not absolute.\\n* url: A url.  If it doesn't parse, it isn't accepted.\\n* Number: Must be numeric.\\n* Date: Must parse as a date. If it does, and `Date` is one of the options,\\n  then it will return a Date object, not a string.\\n* Boolean: Must be either `true` or `false`.  If an option is a boolean,\\n  then it does not need a value, and its presence will imply `true` as\\n  the value.  To negate boolean flags, do `--no-whatever` or `--whatever\\n  false`\\n* NaN: Means that the option is strictly not allowed.  Any value will\\n  fail.\\n* Stream: An object matching the \\\"Stream\\\" class in node.  Valuable\\n  for use when validating programmatically.  (npm uses this to let you\\n  supply any WriteStream on the `outfd` and `logfd` config options.)\\n* Array: If `Array` is specified as one of the types, then the value\\n  will be parsed as a list of options.  This means that multiple values\\n  can be specified, and that the value will always be an array.\\n\\nIf a type is an array of values not on this list, then those are\\nconsidered valid values.  For instance, in the example above, the\\n`--bloo` option can only be one of `\\\"big\\\"`, `\\\"medium\\\"`, or `\\\"small\\\"`,\\nand any other value will be rejected.\\n\\nWhen parsing unknown fields, `\\\"true\\\"`, `\\\"false\\\"`, and `\\\"null\\\"` will be\\ninterpreted as their JavaScript equivalents, and numeric values will be\\ninterpreted as a number.\\n\\nYou can also mix types and values, or multiple types, in a list.  For\\ninstance `{ blah: [Number, null] }` would allow a value to be set to\\neither a Number or null.  When types are ordered, this implies a\\npreference, and the first type that can be used to properly interpret\\nthe value will be used.\\n\\nTo define a new type, add it to `nopt.typeDefs`.  Each item in that\\nhash is an object with a `type` member and a `validate` method.  The\\n`type` member is an object that matches what goes in the type list.  The\\n`validate` method is a function that gets called with `validate(data,\\nkey, val)`.  Validate methods should assign `data[key]` to the valid\\nvalue of `val` if it can be handled properly, or return boolean\\n`false` if it cannot.\\n\\nYou can also call `nopt.clean(data, types, typeDefs)` to clean up a\\nconfig object and remove its invalid properties.\\n\\n## Error Handling\\n\\nBy default, nopt outputs a warning to standard error when invalid\\noptions are found.  You can change this behavior by assigning a method\\nto `nopt.invalidHandler`.  This method will be called with\\nthe offending `nopt.invalidHandler(key, val, types)`.\\n\\nIf no `nopt.invalidHandler` is assigned, then it will console.error\\nits whining.  If it is assigned to boolean `false` then the warning is\\nsuppressed.\\n\\n## Abbreviations\\n\\nYes, they are supported.  If you define options like this:\\n\\n```javascript\\n{ \\\"foolhardyelephants\\\" : Boolean\\n, \\\"pileofmonkeys\\\" : Boolean }\\n```\\n\\nThen this will work:\\n\\n```bash\\nnode program.js --foolhar --pil\\nnode program.js --no-f --pileofmon\\n# etc.\\n```\\n\\n## Shorthands\\n\\nShorthands are a hash of shorter option names to a snippet of args that\\nthey expand to.\\n\\nIf multiple one-character shorthands are all combined, and the\\ncombination does not unambiguously match any other option or shorthand,\\nthen they will be broken up into their constituent parts.  For example:\\n\\n```json\\n{ \\\"s\\\" : [\\\"--loglevel\\\", \\\"silent\\\"]\\n, \\\"g\\\" : \\\"--global\\\"\\n, \\\"f\\\" : \\\"--force\\\"\\n, \\\"p\\\" : \\\"--parseable\\\"\\n, \\\"l\\\" : \\\"--long\\\"\\n}\\n```\\n\\n```bash\\nnpm ls -sgflp\\n# just like doing this:\\nnpm ls --loglevel silent --global --force --long --parseable\\n```\\n\\n## The Rest of the args\\n\\nThe config object returned by nopt is given a special member called\\n`argv`, which is an object with the following fields:\\n\\n* `remain`: The remaining args after all the parsing has occurred.\\n* `original`: The args as they originally appeared.\\n* `cooked`: The args after flags and shorthands are expanded.\\n\\n## Slicing\\n\\nNode programs are called with more or less the exact argv as it appears\\nin C land, after the v8 and node-specific options have been plucked off.\\nAs such, `argv[0]` is always `node` and `argv[1]` is always the\\nJavaScript program being run.\\n\\nThat's usually not very useful to you.  So they're sliced off by\\ndefault.  If you want them, then you can pass in `0` as the last\\nargument, or any other number that you'd like to slice off the start of\\nthe list.\\n\",\n   29    \"readmeFilename\": \"README.md\",\n   30    \"bugs\": {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\noptify\\node_modules\\nopt\\README.md:\n  126  the value will be used.\n  127  \n  128: To define a new type, add it to `nopt.typeDefs`.  Each item in that\n  129  hash is an object with a `type` member and a `validate` method.  The\n  130  `type` member is an object that matches what goes in the type list.  The\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\noptify\\node_modules\\nopt\\lib\\nopt.js:\n   82          } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {\n   83            debug(\"convert to date\", val)\n   84:           val = new Date(val)\n   85          }\n   86        }\n   ..\n  140    var s = Date.parse(val)\n  141    if (isNaN(s)) return false\n  142:   data[k] = new Date(val)\n  143  }\n  144  \n  ...\n  532     ,[]]\n  533    ,[\"--date 2011-01-25\"\n  534:    ,{date: new Date(\"2011-01-25\")}\n  535     ,[]]\n  536    ].forEach(function (test) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\noptify\\test\\api.js:\n   44      var program = noptify(['', '', '--help'])\n   45      assert.throws(function() {\n   46:       throw new Error('parse() must be called for this to happen');\n   47      });\n   48  \n   49      program.parse();\n   50:     throw new Error('I\\'m sad, I\\'ll never throw :(');\n   51    });\n   52  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\qs\\benchmark.js:\n    3  \n    4  var times = 100000\n    5:   , start = new Date\n    6    , n = times;\n    7  \n    .\n    9  \n   10  while (n--) qs.parse('foo=bar');\n   11: console.log('simple: %dms', new Date - start);\n   12  \n   13: var start = new Date\n   14    , n = times;\n   15  \n   16  while (n--) qs.parse('user[name][first]=tj&user[name][last]=holowaychuk');\n   17: console.log('nested: %dms', new Date - start);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\qs\\index.js:\n  159  \n  160  function stringifyString(str, prefix) {\n  161:   if (!prefix) throw new TypeError('stringify expects an object');\n  162    return prefix + '=' + encodeURIComponent(str);\n  163  }\n  ...\n  174  function stringifyArray(arr, prefix) {\n  175    var ret = [];\n  176:   if (!prefix) throw new TypeError('stringify expects an object');\n  177    for (var i = 0; i < arr.length; i++) {\n  178      ret.push(stringify(arr[i], prefix + '[' + i + ']'));\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\qs\\test\\stringify.js:\n    7  }\n    8  \n    9: var date = new Date(0);\n   10  \n   11  var str_identities = {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\qs\\test\\browser\\expect.js:\n   33  \n   34    function expect (obj) {\n   35:     return new Assertion(obj);\n   36    }\n   37  \n   ..\n   65  \n   66          var name = $flags[i]\n   67:           , assertion = new Assertion(this.obj, name, this)\n   68    \n   69          if ('function' == typeof Assertion.prototype[name]) {\n   ..\n   97  \n   98      if (!ok) {\n   99:       throw new Error(msg);\n  100      }\n  101  \n  102:     this.and = new Assertion(this.obj);\n  103    };\n  104  \n  ...\n  351      if (this.flags.not && undefined !== val) {\n  352        if (undefined === this.obj[name]) {\n  353:         throw new Error(i(this.obj) + ' has no property ' + i(name));\n  354        }\n  355      } else {\n  ...\n  420        : Array.prototype.slice.call(arguments);\n  421  \n  422:     if (!$keys.length) throw new Error('keys required');\n  423  \n  424      var actual = keys(this.obj)\n  ...\n  740      }\n  741  \n  742:     var other= new Array(arr.length);\n  743  \n  744      for (var i= 0, n = arr.length; i<n; i++)\n  ...\n  760  \n  761      if (typeof fun !== \"function\")\n  762:       throw new TypeError();\n  763  \n  764      // no value to return if no initial value and an empty array\n  765      if (len === 0 && arguments.length === 1)\n  766:       throw new TypeError();\n  767  \n  768      var i = 0;\n  ...\n  778          // if array contains no values, no initial value to return\n  779          if (++i >= len)\n  780:           throw new TypeError();\n  781        } while (true);\n  782      }\n  ...\n 1100                  (typeof replacer !== 'object' ||\n 1101                  typeof replacer.length !== 'number')) {\n 1102:             throw new Error('JSON.stringify');\n 1103          }\n 1104  \n ....\n 1153  \n 1154      // In the second stage, we run the text against regular expressions that look\n 1155:     // for non-JSON patterns. We are especially concerned with '()' and 'new'\n 1156      // because they can cause invocation, and '=' because it can cause mutation.\n 1157      // But just to be safe, we want to reject all unexpected forms.\n ....\n 1177              j = eval('(' + text + ')');\n 1178  \n 1179:     // In the optional fourth stage, we recursively walk the new structure, passing\n 1180      // each name/value pair to a reviver function for possible transformation.\n 1181  \n ....\n 1186      // If the text is not JSON parseable, then a SyntaxError is thrown.\n 1187  \n 1188:         throw new SyntaxError('JSON.parse');\n 1189      };\n 1190  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\qs\\test\\browser\\jquery.js:\n   25  var jQuery = function( selector, context ) {\n   26  		// The jQuery object is actually just the init constructor 'enhanced'\n   27: 		return new jQuery.fn.init( selector, context, rootjQuery );\n   28  	},\n   29  \n   ..\n  240  \n  241  	// Take an array of elements and push it onto the stack\n  242: 	// (returning the new matched element set)\n  243  	pushStack: function( elems, name, selector ) {\n  244: 		// Build a new jQuery matched element set\n  245  		var ret = this.constructor();\n  246  \n  ...\n  263  		}\n  264  \n  265: 		// Return the newly-formed element set\n  266  		return ret;\n  267  	},\n  ...\n  568  			.replace( rvalidbraces, \"\")) ) {\n  569  \n  570: 			return (new Function( \"return \" + data ))();\n  571  \n  572  		}\n  ...\n  579  \n  580  		if ( window.DOMParser ) { // Standard\n  581: 			tmp = new DOMParser();\n  582  			xml = tmp.parseFromString( data , \"text/xml\" );\n  583  		} else { // IE\n  584: 			xml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n  585  			xml.async = \"false\";\n  586  			xml.loadXML( data );\n  ...\n  843  \n  844  	now: function() {\n  845: 		return (new Date()).getTime();\n  846  	},\n  847  \n  ...\n  862  	sub: function() {\n  863  		function jQuerySub( selector, context ) {\n  864: 			return new jQuerySub.fn.init( selector, context );\n  865  		}\n  866  		jQuery.extend( true, jQuerySub, this );\n  ...\n 1058  			isRejected: failDeferred.isResolved,\n 1059  			pipe: function( fnDone, fnFail ) {\n 1060: 				return jQuery.Deferred(function( newDefer ) {\n 1061  					jQuery.each( {\n 1062  						done: [ fnDone, \"resolve\" ],\n ....\n 1070  								returned = fn.apply( this, arguments );\n 1071  								if ( returned && jQuery.isFunction( returned.promise ) ) {\n 1072: 									returned.promise().then( newDefer.resolve, newDefer.reject );\n 1073  								} else {\n 1074: 									newDefer[ action ]( returned );\n 1075  								}\n 1076  							});\n 1077  						} else {\n 1078: 							deferred[ handler ]( newDefer[ action ] );\n 1079  						}\n 1080  					});\n ....\n 1458  \n 1459  		if ( !id ) {\n 1460: 			// Only DOM nodes need a new unique ID for each element since their data\n 1461  			// ends up in the global cache\n 1462  			if ( isNode ) {\n ....\n 2727  				type = namespaces.shift();\n 2728  \n 2729: 				namespace = new RegExp(\"(^|\\\\.)\" +\n 2730  					jQuery.map( namespaces.slice(0).sort(), fcleanup ).join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\");\n 2731  			}\n ....\n 2837  			event[ jQuery.expando ] ? event :\n 2838  			// Object literal\n 2839: 			new jQuery.Event( type, event ) :\n 2840  			// Just the event type (string)\n 2841: 			new jQuery.Event( type );\n 2842  \n 2843  		event.type = type;\n 2844  		event.exclusive = exclusive;\n 2845  		event.namespace = namespaces.join(\".\");\n 2846: 		event.namespace_re = new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\");\n 2847  		\n 2848  		// triggerHandler() and global events don't bubble or run the default action\n ....\n 2981  	},\n 2982  \n 2983: 	props: \"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which\".split(\" \"),\n 2984  \n 2985  	fix: function( event ) {\n ....\n 3098  \n 3099  jQuery.Event = function( src, props ) {\n 3100: 	// Allow instantiation without the 'new' keyword\n 3101  	if ( !this.preventDefault ) {\n 3102: 		return new jQuery.Event( src, props );\n 3103  	}\n 3104  \n ....\n 3627  \n 3628  	if ( event.namespace ) {\n 3629: 		namespace = new RegExp(\"(^|\\\\.)\" + event.namespace.split(\".\").join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\");\n 3630  	}\n 3631  \n ....\n 4355  		text: function( elem ) {\n 4356  			var attr = elem.getAttribute( \"type\" ), type = elem.type;\n 4357: 			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc) \n 4358  			// use getAttribute instead to test this case\n 4359  			return elem.nodeName.toLowerCase() === \"input\" && \"text\" === type && ( attr === type || attr === null );\n ....\n 4587  \n 4588  for ( var type in Expr.match ) {\n 4589: 	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\\[]*\\])(?![^\\(]*\\))/.source) );\n 4590: 	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, fescape) );\n 4591  }\n 4592  \n ....\n 4756  	// We're going to inject a fake input element with a specified name\n 4757  	var form = document.createElement(\"div\"),\n 4758: 		id = \"script\" + (new Date()).getTime(),\n 4759  		root = document.documentElement;\n 4760  \n ....\n 5781  			parent = value && value.parentNode;\n 5782  \n 5783: 			// If we're in a fragment, just use that instead of building a new one\n 5784  			if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {\n 5785  				results = { fragment: parent };\n ....\n 6397  		var old = {};\n 6398  \n 6399: 		// Remember the old values, and insert the new ones\n 6400  		for ( var name in options ) {\n 6401  			old[ name ] = elem.style[ name ];\n ....\n 6538  			left = style.left;\n 6539  \n 6540: 			// Put in the new values to get a computed value out\n 6541  			if ( rsLeft ) {\n 6542  				elem.runtimeStyle.left = elem.currentStyle.left;\n ....\n 7254  		s.hasContent = !rnoContent.test( s.type );\n 7255  \n 7256: 		// Watch for a new set of requests\n 7257  		if ( fireGlobals && jQuery.active++ === 0 ) {\n 7258  			jQuery.event.trigger( \"ajaxStart\" );\n ....\n 7778  function createStandardXHR() {\n 7779  	try {\n 7780: 		return new window.XMLHttpRequest();\n 7781  	} catch( e ) {}\n 7782  }\n ....\n 7784  function createActiveXHR() {\n 7785  	try {\n 7786: 		return new window.ActiveXObject( \"Microsoft.XMLHTTP\" );\n 7787  	} catch( e ) {}\n 7788  }\n ....\n 7823  				send: function( headers, complete ) {\n 7824  \n 7825: 					// Get a new xhr\n 7826  					var xhr = s.xhr(),\n 7827  						handle,\n ....\n 8190  \n 8191  			for ( p in prop ) {\n 8192: 				e = new jQuery.fx( this, opt, p );\n 8193  				val = prop[ p ];\n 8194  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\qs\\test\\browser\\mocha.js:\n    7      var path = require.resolve(p)\n    8        , mod = require.modules[path];\n    9:     if (!mod) throw new Error('failed to require \"' + p + '\"');\n   10      if (!mod.exports) {\n   11        mod.exports = {};\n   ..\n  260  \n  261  /**\n  262:  * Initialize a new `Progress` indicator.\n  263   */\n  264  \n  ...\n  400  \n  401  /**\n  402:  * Initialize a new `Context`.\n  403   *\n  404   * @api private\n  ...\n  465  \n  466  /**\n  467:  * Initialize a new `Hook` with the given `title` and callback `fn`.\n  468   *\n  469   * @param {String} title\n  ...\n  481   */\n  482  \n  483: Hook.prototype = new Runnable;\n  484  Hook.prototype.constructor = Hook;\n  485  \n  ...\n  575  \n  576      context.it = function(title, fn){\n  577:       suites[0].addTest(new Test(title, fn));\n  578      };\n  579    });\n  ...\n  632              break;\n  633            default:\n  634:             suites[0].addTest(new Test(key, fn));\n  635          }\n  636        } else {\n  ...\n  742  \n  743      context.test = function(title, fn){\n  744:       suites[0].addTest(new Test(title, fn));\n  745      };\n  746    });\n  ...\n  840  \n  841      context.test = function(title, fn){\n  842:       suites[0].addTest(new Test(title, fn));\n  843      };\n  844    });\n  ...\n  918    options = options || {};\n  919    options.grep = 'string' == typeof options.grep\n  920:     ? new RegExp(options.grep)\n  921      : options.grep;\n  922    this.files = [];\n  923    this.options = options;\n  924:   this.suite = new exports.Suite('', new exports.Context);\n  925    this.ui(options.ui);\n  926    this.reporter(options.reporter);\n  ...\n  950    name = name || 'dot';\n  951    this._reporter = require('./reporters/' + name);\n  952:   if (!this._reporter) throw new Error('invalid reporter \"' + name + '\"');\n  953    return this;\n  954  };\n  ...\n  964    name = name || 'bdd';\n  965    this._ui = exports.interfaces[name];\n  966:   if (!this._ui) throw new Error('invalid interface \"' + name + '\"');\n  967    this._ui = this._ui(this.suite);\n  968    return this;\n  ...\n 1018  Mocha.prototype.grep = function(re){\n 1019    this.options.grep = 'string' == typeof re\n 1020:     ? new RegExp(re)\n 1021      : re;\n 1022    return this;\n ....\n 1035    var suite = this.suite;\n 1036    var options = this.options;\n 1037:   var runner = new exports.Runner(suite);\n 1038:   var reporter = new this._reporter(runner);\n 1039    runner.ignoreLeaks = options.ignoreLeaks;\n 1040    if (options.grep) runner.grep(options.grep);\n ....\n 1239  \n 1240  /**\n 1241:  * Initialize a new `Base` reporter.\n 1242   *\n 1243   * All other reporters generally\n ....\n 1259  \n 1260    runner.on('start', function(){\n 1261:     stats.start = new Date;\n 1262    });\n 1263  \n ....\n 1293  \n 1294    runner.on('end', function(){\n 1295:     stats.end = new Date;\n 1296:     stats.duration = new Date - stats.start;\n 1297    });\n 1298  \n ....\n 1381  function errorDiff(err, type) {\n 1382    return diff['diff' + type](err.actual, err.expected).map(function(str){\n 1383:     if (/^(\\n+)$/.test(str.value)) str.value = Array(++RegExp.$1.length).join('<newline>');\n 1384      if (str.added) return colorLines('diff added', str.value);\n 1385      if (str.removed) return colorLines('diff removed', str.value);\n ....\n 1421  \n 1422  /**\n 1423:  * Initialize a new `Doc` reporter.\n 1424   *\n 1425   * @param {Runner} runner\n ....\n 1474  \n 1475    var spaces = str.match(/^\\n?( *)/)[1].length\n 1476:     , re = new RegExp('^ {' + spaces + '}', 'gm');\n 1477  \n 1478    str = str.replace(re, '');\n ....\n 1498  \n 1499  /**\n 1500:  * Initialize a new `Dot` matrix test reporter.\n 1501   *\n 1502   * @param {Runner} runner\n ....\n 1544   */\n 1545  \n 1546: Dot.prototype = new Base;\n 1547  Dot.prototype.constructor = Dot;\n 1548  \n ....\n 1565  \n 1566  /**\n 1567:  * Initialize a new `JsCoverage` reporter.\n 1568   *\n 1569   * @param {Runner} runner\n ....\n 1635  \n 1636  /**\n 1637:  * Initialize a new `Doc` reporter.\n 1638   *\n 1639   * @param {Runner} runner\n ....\n 1660    if (canvas.getContext) {\n 1661      ctx = canvas.getContext('2d');\n 1662:     progress = new Progress;\n 1663    }\n 1664  \n ....\n 1696  \n 1697      // update stats\n 1698:     var ms = new Date - stats.start;\n 1699      text(passes, stats.passes);\n 1700      text(failures, stats.failures);\n ....\n 1810  \n 1811    var spaces = str.match(/^\\n?( *)/)[1].length\n 1812:     , re = new RegExp('^ {' + spaces + '}', 'gm');\n 1813  \n 1814    str = str\n ....\n 1857  \n 1858  /**\n 1859:  * Initialize a new `JsCoverage` reporter.\n 1860   *\n 1861   * @param {Runner} runner\n ....\n 2011  \n 2012  /**\n 2013:  * Initialize a new `List` test reporter.\n 2014   *\n 2015   * @param {Runner} runner\n ....\n 2076  \n 2077  /**\n 2078:  * Initialize a new `JSON` reporter.\n 2079   *\n 2080   * @param {Runner} runner\n ....\n 2167  \n 2168  /**\n 2169:  * Initialize a new `Landing` reporter.\n 2170   *\n 2171   * @param {Runner} runner\n ....\n 2229   */\n 2230  \n 2231: Landing.prototype = new Base;\n 2232  Landing.prototype.constructor = Landing;\n 2233  \n ....\n 2251  \n 2252  /**\n 2253:  * Initialize a new `List` test reporter.\n 2254   *\n 2255   * @param {Runner} runner\n ....\n 2298   */\n 2299  \n 2300: List.prototype = new Base;\n 2301  List.prototype.constructor = List;\n 2302  \n ....\n 2320  \n 2321  /**\n 2322:  * Initialize a new `Markdown` reporter.\n 2323   *\n 2324   * @param {Runner} runner\n ....\n 2410  \n 2411    var spaces = str.match(/^\\n?( *)/)[1].length\n 2412:     , re = new RegExp('^ {' + spaces + '}', 'gm');\n 2413  \n 2414    str = str.replace(re, '');\n ....\n 2432  \n 2433  /**\n 2434:  * Initialize a new `Min` minimal test reporter (best used with --watch).\n 2435   *\n 2436   * @param {Runner} runner\n ....\n 2455   */\n 2456  \n 2457: Min.prototype = new Base;\n 2458  Min.prototype.constructor = Min;\n 2459  \n ....\n 2483  \n 2484  /**\n 2485:  * Initialize a new `Progress` bar test reporter.\n 2486   *\n 2487   * @param {Runner} runner\n ....\n 2546   */\n 2547  \n 2548: Progress.prototype = new Base;\n 2549  Progress.prototype.constructor = Progress;\n 2550  \n ....\n 2569  \n 2570  /**\n 2571:  * Initialize a new `Spec` test reporter.\n 2572   *\n 2573   * @param {Runner} runner\n ....\n 2639   */\n 2640  \n 2641: Spec.prototype = new Base;\n 2642  Spec.prototype.constructor = Spec;\n 2643  \n ....\n 2662  \n 2663  /**\n 2664:  * Initialize a new `TAP` reporter.\n 2665   *\n 2666   * @param {Runner} runner\n ....\n 2727  \n 2728  /**\n 2729:  * Initialize a new `Teamcity` reporter.\n 2730   *\n 2731   * @param {Runner} runner\n ....\n 2798  \n 2799  /**\n 2800:  * Initialize a new `XUnit` reporter.\n 2801   *\n 2802   * @param {Runner} runner\n ....\n 2821        , errors: stats.failures\n 2822        , skip: stats.tests - stats.failures - stats.passes\n 2823:       , timestamp: (new Date).toUTCString()\n 2824        , time: stats.duration / 1000\n 2825      }, false));\n ....\n 2834   */\n 2835  \n 2836: XUnit.prototype = new Base;\n 2837  XUnit.prototype.constructor = XUnit;\n 2838  \n ....\n 2914  \n 2915  /**\n 2916:  * Initialize a new `Runnable` with the given `title` and callback `fn`.\n 2917   *\n 2918   * @param {String} title\n ....\n 2934   */\n 2935  \n 2936: Runnable.prototype = new EventEmitter;\n 2937  Runnable.prototype.constructor = Runnable;\n 2938  \n ....\n 2989    if (ms) {\n 2990      this.timer = setTimeout(function(){\n 2991:       self.callback(new Error('timeout of ' + ms + 'ms exceeded'));\n 2992        self.timedOut = true;\n 2993      }, ms);\n ....\n 3005    var self = this\n 3006      , ms = this.timeout()\n 3007:     , start = new Date\n 3008      , ctx = this.ctx\n 3009      , finished\n ....\n 3016      if (ms) {\n 3017        this.timer = setTimeout(function(){\n 3018:         done(new Error('timeout of ' + ms + 'ms exceeded'));\n 3019          self.timedOut = true;\n 3020        }, ms);\n ....\n 3026      if (emitted) return;\n 3027      emitted = true;\n 3028:     self.emit('error', new Error('done() called multiple times'));\n 3029    }\n 3030  \n ....\n 3034      if (finished) return multiple();\n 3035      self.clearTimeout();\n 3036:     self.duration = new Date - start;\n 3037      finished = true;\n 3038      fn(err);\n ....\n 3047        this.fn.call(ctx, function(err){\n 3048          if (err instanceof Error) return done(err);\n 3049:         if (null != err) return done(new Error('done() invoked with non-Error: ' + err));\n 3050          done();\n 3051        });\n ....\n 3059    try {\n 3060      if (!this.pending) this.fn.call(ctx);\n 3061:     this.duration = new Date - start;\n 3062      fn();\n 3063    } catch (err) {\n ....\n 3121   */\n 3122  \n 3123: Runner.prototype = new EventEmitter;\n 3124  Runner.prototype.constructor = Runner;\n 3125  \n ....\n 3194  \n 3195    if (leaks.length > 1) {\n 3196:     this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));\n 3197    } else if (leaks.length) {\n 3198:     this.fail(test, new Error('global leak detected: ' + leaks[0]));\n 3199    }\n 3200  };\n ....\n 3212    test.state = 'failed';\n 3213    if ('string' == typeof err) {\n 3214:     err = new Error('the string \"' + err + '\" was thrown, throw an Error :)');\n 3215    }\n 3216    this.emit('fail', test, err);\n ....\n 3552  \n 3553  /**\n 3554:  * Create a new `Suite` with the given `title`\n 3555   * and parent `Suite`. When a suite with the\n 3556   * same title is already present, that suite\n ....\n 3565  \n 3566  exports.create = function(parent, title){\n 3567:   var suite = new Suite(title, parent.ctx);\n 3568    suite.parent = parent;\n 3569    title = suite.fullTitle();\n ....\n 3573  \n 3574  /**\n 3575:  * Initialize a new `Suite` with the given\n 3576   * `title` and `ctx`.\n 3577   *\n ....\n 3599   */\n 3600  \n 3601: Suite.prototype = new EventEmitter;\n 3602  Suite.prototype.constructor = Suite;\n 3603  \n ....\n 3611  \n 3612  Suite.prototype.clone = function(){\n 3613:   var suite = new Suite(this.title);\n 3614    debug('clone');\n 3615    suite.ctx = this.ctx;\n ....\n 3659  \n 3660  Suite.prototype.beforeAll = function(fn){\n 3661:   var hook = new Hook('\"before all\" hook', fn);\n 3662    hook.parent = this;\n 3663    hook.timeout(this.timeout());\n ....\n 3677  \n 3678  Suite.prototype.afterAll = function(fn){\n 3679:   var hook = new Hook('\"after all\" hook', fn);\n 3680    hook.parent = this;\n 3681    hook.timeout(this.timeout());\n ....\n 3695  \n 3696  Suite.prototype.beforeEach = function(fn){\n 3697:   var hook = new Hook('\"before each\" hook', fn);\n 3698    hook.parent = this;\n 3699    hook.timeout(this.timeout());\n ....\n 3713  \n 3714  Suite.prototype.afterEach = function(fn){\n 3715:   var hook = new Hook('\"after each\" hook', fn);\n 3716    hook.parent = this;\n 3717    hook.timeout(this.timeout());\n ....\n 3820  \n 3821  /**\n 3822:  * Initialize a new `Test` with the given `title` and callback `fn`.\n 3823   *\n 3824   * @param {String} title\n ....\n 3837   */\n 3838  \n 3839: Test.prototype = new Runnable;\n 3840  Test.prototype.constructor = Test;\n 3841  \n ....\n 4120  // boot\n 4121  ;(function(){\n 4122:   var suite = new mocha.Suite('', new mocha.Context)\n 4123      , utils = mocha.utils\n 4124      , options = {}\n ....\n 4136        .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n 4137        .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n 4138:       .replace(/\\bnew *(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n 4139:       .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>')\n 4140    }\n 4141  \n ....\n 4175  \n 4176      ui = mocha.interfaces[options.ui];\n 4177:     if (!ui) throw new Error('invalid mocha interface \"' + ui + '\"');\n 4178      if (options.timeout) suite.timeout(options.timeout);\n 4179      ui(suite);\n ....\n 4187    mocha.run = function(fn){\n 4188      suite.emit('run');\n 4189:     var runner = new mocha.Runner(suite);\n 4190      var Reporter = options.reporter || mocha.reporters.HTML;\n 4191:     var reporter = new Reporter(runner);\n 4192      var query = parse(window.location.search || \"\");\n 4193:     if (query.grep) runner.grep(new RegExp(query.grep));\n 4194      if (options.ignoreLeaks) runner.ignoreLeaks = true;\n 4195      if (options.globals) runner.globals(options.globals);\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\node_modules\\qs\\test\\browser\\qs.js:\n   11    var path = require.resolve(p)\n   12      , mod = require.modules[path];\n   13:   if (!mod) throw new Error('failed to require \"' + p + '\" in ' + parent);\n   14    if (!mod.exports) {\n   15      mod.exports = {};\n   ..\n  261  \n  262  function stringifyString(str, prefix) {\n  263:   if (!prefix) throw new TypeError('stringify expects an object');\n  264    return prefix + '=' + encodeURIComponent(str);\n  265  }\n  ...\n  276  function stringifyArray(arr, prefix) {\n  277    var ret = [];\n  278:   if (!prefix) throw new TypeError('stringify expects an object');\n  279    for (var i = 0; i < arr.length; i++) {\n  280      ret.push(stringify(arr[i], prefix + '['+i+']'));\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\tasks\\tiny-lr.js:\n   24    var server;\n   25  \n   26:   // Task to start up a new tiny-lr Server, with the provided port.\n   27    //\n   28    // - options - Hash of options in Gruntfile `tiny-lr` prop with the following\n   ..\n   39  \n   40      var done = this.async();\n   41:     server = new Server();\n   42      grunt.log.writeln('... Starting server on ' + options.port + ' ...');\n   43      server.listen(options.port, this.async());\n   ..\n   76    // Otherwise, go through each watch config with `reload` as part of their\n   77    // `tasks`, concat all the files, and maintain a list of mtime. A changed\n   78:   // files is simply a file with a \"newer\" mtime.\n   79    function changed() {\n   80      if(grunt.file.watchFiles) return grunt.file.watchFiles.changed;\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\test\\client.js:\n   10  \n   11    before(function(done) {\n   12:     this.app = new Server;\n   13      this.server = this.app.server;\n   14      this.request = request(this.server)\n   ..\n   22      var server = this.app;\n   23  \n   24:     var ws = this.ws = new WebSocket('ws://' + url.host + '/livereload');\n   25  \n   26      ws.onopen = function(event) {\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\test\\middleware.js:\n   20    before(function() {\n   21      this.app = app;\n   22:     this.lr = new Server();\n   23  \n   24      this.app\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\node_modules\\tiny-lr\\test\\server.js:\n    8  \n    9    beforeEach(function() {\n   10:     this.app = new Server;\n   11      this.server = this.app.server;\n   12    });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\tasks\\watch.js:\n   24        time.toFixed(3) +\n   25        's at ' +\n   26:       (new Date()).toString()\n   27      ).cyan + ' - ' + waiting);\n   28    };\n   ..\n   98  \n   99        // Create watcher per target\n  100:       watchers.push(new Gaze(patterns, target.options, function(err) {\n  101          if (err) {\n  102:           if (typeof err === 'string') { err = new Error(err); }\n  103            grunt.log.writeln('ERROR'.red);\n  104            grunt.fatal(err);\n  ...\n  164          // On watcher error\n  165          this.on('error', function(err) {\n  166:           if (typeof err === 'string') { err = new Error(err); }\n  167            grunt.log.error(err.message);\n  168          });\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\tasks\\lib\\livereload.js:\n   53  \n   54    return function(options) {\n   55:     return new LR(options);\n   56    };\n   57  };\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\tasks\\lib\\taskrunner.js:\n  213    Runner.prototype.add = function add(target) {\n  214      if (!this.targets[target.name || 0]) {\n  215:       var tr = new TaskRun(target);\n  216  \n  217        // Add livereload to task runs\n  ...\n  333    };\n  334  \n  335:   return new Runner();\n  336  };\n  337  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\test\\tasks\\helper.js:\n   62        // If our trigger has been found\n   63        if (trigger !== false) {\n   64:         shouldRun = (new RegExp(trigger, 'gm')).test(data);\n   65        }\n   66  \n   ..\n   76      // Throw errors for better testing\n   77      spawnGrunt.stderr.on('data', function(data) {\n   78:       throw new Error(data);\n   79      });\n   80  \n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\test\\tasks\\nospawn_test.js:\n   36      }, function(result) {\n   37        helper.verboseLog(result);\n   38:       var count = result.match((new RegExp('Running \"watch\" task', 'g'))).length;\n   39        test.equal(count, 2, 'Watch should have fired twice.');\n   40        test.ok(result.indexOf('Server is listening...') !== -1, 'server should have been started.');\n   ..\n   57      }], function(result) {\n   58        helper.verboseLog(result);\n   59:       var count = result.match((new RegExp('Running \"long\" task', 'g'))).length;\n   60        test.equal(count, 4, 'long task should have been ran only 4 times.');\n   61        test.ok(result.indexOf('have been interrupted') !== -1, 'tasks should have been interrupted.');\n\nD:\\d\\s\\github\\jshint-test\\node_modules\\grunt-contrib-watch\\test\\tasks\\reloadgruntfile_test.js:\n   46      }], function(result) {\n   47        helper.verboseLog(result);\n   48:       var count = result.match((new RegExp('Running \"watch\" task', 'g'))).length;\n   49        test.equal(count, 2, 'Watch should have fired twice.');\n   50        test.ok(result.indexOf('one has changed') !== -1, 'task one should have been triggered.');\n\n2778 matches across 372 files\n",
			"settings":
			{
				"buffer_size": 940563,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "lib/relax/supernew.js",
			"settings":
			{
				"buffer_size": 425,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/sublime-grunt-build/grunt.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Package Control: Install Package"
			],
			[
				"pakage",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 230.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/d/s/github/jshint-test/lib/relax/noyeild.js",
		"/D/d/s/github/jshint-test/lib/relax/noyield.js",
		"/D/d/s/github/jshint-test/lib/relax/validthis.js",
		"/D/d/s/github/jshint-test/lib/relax/supernew.js",
		"/D/d/s/github/jshint-test/lib/relax/sub.js",
		"/D/d/s/github/jshint-test/lib/relax/shadow.js",
		"/D/d/s/github/jshint-test/lib/relax/smarttabs.js",
		"/D/d/s/github/jshint-test/lib/relax/scripturl.js",
		"/D/d/s/github/jshint-test/lib/relax/proto.js",
		"/D/d/s/github/jshint-test/lib/relax/lastsemic.js",
		"/D/d/s/github/jshint-test/lib/relax/funcscope.js",
		"/D/d/s/github/jshint-test/lib/relax/laxbreak.js",
		"/D/d/s/github/jshint-test/lib/relax/laxcomma.js",
		"/D/d/s/github/jshint-test/lib/relax/notypeof.js",
		"/D/d/s/github/jshint-test/lib/relax/multistr.js",
		"/D/d/s/github/jshint-test/lib/relax/loopfunc.js",
		"/D/d/s/github/jshint-test/lib/relax/TODO_moz.js",
		"/D/d/s/github/jshint-test/lib/relax/iterator.js",
		"/D/d/s/github/jshint-test/pj-jshint-test.sublime-project",
		"/D/d/s/github/jshint-test/lib/_inline_jshint_opts.js",
		"/D/d/s/github/jshint-test/lib/permissive_inline_jshint_opts.js",
		"/D/d/s/github/jshint-test/lib/pref_inline_jshint_opts.js",
		"/D/d/s/github/jshint-test/lib/relax/expr.js",
		"/D/d/s/github/jshint-test/lib/relax/globalstrict.js",
		"/D/d/s/github/jshint-test/lib/relax/TODO_gcl.js",
		"/D/d/s/github/jshint-test/dist/relax.js",
		"/D/d/s/github/jshint-test/lib/relax/evil.js",
		"/D/d/s/github/jshint-test/lib/relax/TODO_asi.js",
		"/D/d/s/github/jshint-test/lib/relax/TODO_esnext.js",
		"/D/d/s/github/jshint-test/lib/relax/eqnull.js",
		"/D/d/s/github/jshint-test/lib/relax/debug.js",
		"/D/d/s/github/jshint-test/lib/relax/asi.js",
		"/D/d/s/github/jshint-test/lib/relax/boss.js",
		"/D/d/s/js-play/jshint/bin/jshint-inline.pl",
		"/D/d/s/js-play/jshint/Gruntfile.js",
		"/D/d/s/js-play/jshint/lib/empty.js",
		"/D/d/s/js-play/jshint/package.json",
		"/D/d/s/js-play/jshint/lib/relax/asi.js",
		"/D/d/s/js-play/jshint/lib/permissive_inline_jshint_opts.js",
		"/D/d/s/js-play/jshint/lib/_inline_jshint_opts.js",
		"/D/d/s/js-play/jshint/lib/enforce/nonbsp.js",
		"/D/d/s/js-play/jshint/lib/enforce/maxlen.js",
		"/D/d/s/js-play/jshint/lib/ignore/bad.js",
		"/D/d/s/js-play/jshint/lib/header.js",
		"/D/d/s/js-play/jshint/lib/enforce/maxomplexity.js",
		"/D/d/s/js-play/jshint/lib/enforce/maxstatements.js",
		"/D/d/s/js-play/jshint/lib/enforce/maxdepth.js",
		"/D/d/s/js-play/jshint/lib/enforce/maxparams.js",
		"/D/d/s/js-play/jshint/lib/enforce/trailing.js",
		"/D/d/s/js-play/jshint/lib/enforce/undef.js",
		"/D/d/s/js-play/jshint/lib/enforce/FAIL_undef_function_scope.js",
		"/D/d/s/js-play/jshint/lib/enforce/nonew.js",
		"/D/d/s/js-play/jshint/lib/enforce/quotmark_single.js",
		"/D/d/s/js-play/jshint/lib/enforce/quotmark_double.js",
		"/D/d/s/js-play/jshint/lib/enforce/quotmark.js",
		"/D/d/s/js-play/jshint/lib/enforce/plusplus.js",
		"/D/d/s/js-play/jshint/lib/enforce/noarg.js",
		"/D/d/s/js-play/jshint/lib/enforce/indent.js",
		"/D/d/s/js-play/jshint/lib/enforce/immed.js",
		"/D/d/s/js-play/jshint/lib/enforce/freeze.js",
		"/D/d/s/js-play/jshint/lib/enforce/FAIL_noempty.js",
		"/D/d/s/js-play/jshint/dist/enforce.js",
		"/D/d/s/js-play/jshint/lib/enforce/strict.js",
		"/D/d/s/js-play/jshint/lib/enforce/strict_function_scoped.js",
		"/D/d/s/js-play/jshint/lib/jshintopts.txt",
		"/D/d/s/js-play/jshint/lib/enforce/unused_vars.js",
		"/D/d/s/js-play/jshint/lib/enforce/unused_strict.js",
		"/D/d/s/js-play/jshint/lib/enforce/unused.js",
		"/D/d/s/js-play/jshint/lib/enforce/TODO_es3.js",
		"/D/d/s/js-play/jshint/lib/enforce/newcap.js",
		"/D/d/s/js-play/jshint/lib/enforce/latedef_nofurc.js",
		"/D/d/s/js-play/jshint/lib/enforce/latedef.js",
		"/D/d/s/js-play/jshint/lib/enforce/forin.js",
		"/D/d/s/js-play/jshint/lib/enforce/FAIL_camelcase_function_scope.js",
		"/D/d/s/js-play/jshint/lib/enforce/eqeqeq.js",
		"/D/d/s/js-play/jshint/lib/enforce/curly.js",
		"/D/d/s/js-play/jshint/lib/enforce/camelcase.js",
		"/D/d/s/js-play/jshint/lib/enforce/bitwise.js",
		"/D/d/s/js-play/jshint/lib/enforce/FAIL_unused_function_scope.js",
		"/D/d/s/js-play/jshint/lib/enforce/camelcase_function_scope.js",
		"/D/d/s/js-play/jshint/lib/enforce/noempty.js",
		"/D/d/s/js-play/jshint/lib/enforce/TODO_latedef_nofunc.js",
		"/D/d/s/js-play/jshint/lib/enforce/es3.js",
		"/D/d/s/js-play/jshint/.jshintignore",
		"/D/d/s/js-play/jshint/lib/bad-forin.js",
		"/D/d/s/js-play/jshint/lib/bitwise.js",
		"/D/d/s/js-play/jshint/lib/bad.js",
		"/D/d/s/js-play/jshint/utf.pl",
		"/D/d/s/ontology/play/d3/WebContent/package.json",
		"/D/d/s/github/QUnitChainer/dist/qunit.css",
		"/D/d/s/github/QUnitChainer/0-control.html",
		"/D/d/s/github/QUnitChainer/0-monitor.html",
		"/D/d/s/github/QUnitChainer/replace.pl",
		"/D/d/s/github/QUnitChainer/_test_failures/q-test3.html",
		"/D/d/s/github/QUnitChainer/_test_failures/test-plan.js",
		"/D/d/s/github/QUnitChainer/_test_passes/q-test3.html",
		"/D/d/s/github/QUnitChainer/_test_passes/test-plan.js",
		"/D/d/s/github/QUnitChainer/sample/q-test.html",
		"/D/d/s/github/QUnitChainer/sample/q-test2.html",
		"/D/d/s/github/QUnitChainer/sample/q-test3.html",
		"/D/d/s/github/QUnitChainer/sample/q-test4.html",
		"/D/d/s/github/QUnitChainer/sample/test-plan.js",
		"/D/d/s/github/QUnitChainer/Gruntfile.js",
		"/D/d/s/github/QUnitChainer/jasmine/jasmine-html.js",
		"/C/Users/me/AppData/Roaming/Sublime Text 2/Packages/Default/Side Bar.sublime-menu",
		"/C/Users/me/AppData/Roaming/Sublime Text 2/Packages/User/Distraction Free.sublime-settings",
		"/C/Users/me/AppData/Roaming/Sublime Text 2/Packages/User/JSON.sublime-settings",
		"/D/d/s/ontology/play/d3/WebContent/dataflow/resources/dagre-d3.js",
		"/C/Users/me/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/D/d/s/github/BigScreen/pj-BigScreen.sublime-workspace",
		"/C/Users/me/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/D/d/s/github/BigScreen/js/jquery-ui-1.8.16.custom.min.js",
		"/D/d/s/github/BigScreen/js/jquery-ui-1.10.4.custom/js/jquery-ui-1.10.4.custom.min.js",
		"/C/Users/me/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript.sublime-settings"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 126.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"new",
			"jshint",
			"new",
			"yeild",
			"yield",
			"setting",
			"   ",
			"  ",
			"undef",
			"not_at_all",
			"nonew",
			"freeze",
			"forin",
			"border-radius",
			"install_npm_global_from",
			"getendpointnode",
			"forIdx",
			"edge",
			"ExternalEdges",
			"severedEdges",
			"forKeys",
			"forIdx",
			"getEndpointNode",
			"getEndpointNod",
			"assert",
			"testLog",
			".error",
			"idx",
			"forIdx",
			"severedEdge",
			"collapseGroup",
			"addGroupNode",
			"addNode",
			"addGroupNode",
			"addNode",
			"outEdges",
			"function outEdges",
			"outEdges",
			"outEdge",
			"outEdges",
			"graphlib",
			"nodesFromList",
			"nodes",
			"collapseGroup",
			"console.clear",
			"logVar",
			"renderer",
			"layout",
			"clicked",
			"edges",
			"nodes",
			"dagre",
			"g",
			"logEvent",
			"all",
			"_postLayout",
			"layout",
			"run",
			"render",
			"node",
			"rect",
			"20800731",
			"FB84C0",
			"layout",
			"nodes_d",
			"layout",
			"dataflow",
			"transform",
			"BSAC",
			"console.logVar",
			"logVar",
			"d3bug.log",
			"console.",
			"log",
			"logVar",
			"clear",
			"render",
			"; g",
			";",
			"dagre",
			"find",
			"dark",
			"menu",
			"tab_label",
			"color",
			"dark_content",
			"color",
			"clicktozoom",
			"OP",
			"URLs",
			"log",
			"checkFor",
			"chooseRandom",
			"debugging",
			"Effects",
			"Effect",
			"bounce",
			"TheEffect",
			"freeze",
			"console",
			"fixedEffect",
			"loadedURL",
			"setFloatURL"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"yield",
			"yeild",
			"noyield",
			"validthis",
			"supernew",
			"sub",
			"shadow",
			"smarttabs",
			"scripturl",
			"proto",
			"notypeof",
			"multistr",
			"moz",
			"loopfunc",
			"laxcomma",
			"laxbreak",
			"lastsemic",
			"iterator",
			"globalstrict",
			"funcscope",
			"expr",
			"evil",
			"eqnull",
			"debug",
			"\\t",
			"logZoom",
			"Renderer",
			"Layout",
			"Clicked",
			"svgEdges",
			"svgNodes",
			"svgDagre",
			"DAGRenderer",
			"Graph",
			"activeView",
			"dataflow",
			"console.logVar",
			";\\ng",
			";\\n"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "package.json",
					"settings":
					{
						"buffer_size": 684,
						"regions":
						{
						},
						"selection":
						[
							[
								274,
								274
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lib/empty.js",
					"settings":
					{
						"buffer_size": 163,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								163
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/relax/FAIL-noyield.js",
					"settings":
					{
						"buffer_size": 474,
						"regions":
						{
						},
						"selection":
						[
							[
								19,
								25
							],
							[
								88,
								94
							],
							[
								95,
								101
							],
							[
								118,
								124
							],
							[
								289,
								295
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "Gruntfile.js",
					"settings":
					{
						"buffer_size": 2751,
						"regions":
						{
						},
						"selection":
						[
							[
								1175,
								1175
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 564.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/permissive/permissive-errors.js",
					"settings":
					{
						"buffer_size": 5937,
						"regions":
						{
						},
						"selection":
						[
							[
								842,
								842
							]
						],
						"settings":
						{
							"auto_name": "permissive-errors.js",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 199.0,
						"translation.y": 1020.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/permissive-inline-jshint-opts.js",
					"settings":
					{
						"buffer_size": 796,
						"regions":
						{
						},
						"selection":
						[
							[
								326,
								326
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/pref-inline-jshint-opts.js",
					"settings":
					{
						"buffer_size": 543,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 444.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "bin/jshint-inline.pl",
					"settings":
					{
						"buffer_size": 2153,
						"regions":
						{
						},
						"selection":
						[
							[
								1726,
								1726
							]
						],
						"settings":
						{
							"syntax": "Packages/Perl/Perl.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/pref-generated.txt",
					"settings":
					{
						"buffer_size": 1002,
						"regions":
						{
						},
						"selection":
						[
							[
								912,
								912
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 257.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"settings":
					{
						"buffer_size": 940563,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										270,
										273
									],
									[
										574,
										577
									],
									[
										877,
										880
									],
									[
										1072,
										1075
									],
									[
										1183,
										1186
									],
									[
										1317,
										1320
									],
									[
										1350,
										1353
									],
									[
										1495,
										1498
									],
									[
										1523,
										1526
									],
									[
										1567,
										1570
									],
									[
										1653,
										1656
									],
									[
										1681,
										1684
									],
									[
										1762,
										1765
									],
									[
										1792,
										1795
									],
									[
										1852,
										1855
									],
									[
										1924,
										1927
									],
									[
										1978,
										1981
									],
									[
										2100,
										2103
									],
									[
										2131,
										2134
									],
									[
										2203,
										2206
									],
									[
										2338,
										2341
									],
									[
										2373,
										2376
									],
									[
										2444,
										2447
									],
									[
										2562,
										2565
									],
									[
										2582,
										2585
									],
									[
										2719,
										2722
									],
									[
										2787,
										2790
									],
									[
										2980,
										2983
									],
									[
										3041,
										3044
									],
									[
										3083,
										3086
									],
									[
										3184,
										3187
									],
									[
										3345,
										3348
									],
									[
										3532,
										3535
									],
									[
										3603,
										3606
									],
									[
										3927,
										3930
									],
									[
										3980,
										3983
									],
									[
										4198,
										4201
									],
									[
										4293,
										4296
									],
									[
										4482,
										4485
									],
									[
										4550,
										4553
									],
									[
										4706,
										4709
									],
									[
										4739,
										4742
									],
									[
										4884,
										4887
									],
									[
										4912,
										4915
									],
									[
										4956,
										4959
									],
									[
										5085,
										5088
									],
									[
										5113,
										5116
									],
									[
										5194,
										5197
									],
									[
										5224,
										5227
									],
									[
										5284,
										5287
									],
									[
										5356,
										5359
									],
									[
										5410,
										5413
									],
									[
										5556,
										5559
									],
									[
										5627,
										5630
									],
									[
										5751,
										5754
									],
									[
										5783,
										5786
									],
									[
										5819,
										5822
									],
									[
										5863,
										5866
									],
									[
										6065,
										6068
									],
									[
										6291,
										6294
									],
									[
										6422,
										6425
									],
									[
										6558,
										6561
									],
									[
										6706,
										6709
									],
									[
										6912,
										6915
									],
									[
										7100,
										7103
									],
									[
										7253,
										7256
									],
									[
										7430,
										7433
									],
									[
										7461,
										7464
									],
									[
										7533,
										7536
									],
									[
										7668,
										7671
									],
									[
										7703,
										7706
									],
									[
										7774,
										7777
									],
									[
										7892,
										7895
									],
									[
										7912,
										7915
									],
									[
										8148,
										8151
									],
									[
										8411,
										8414
									],
									[
										8674,
										8677
									],
									[
										8758,
										8761
									],
									[
										9005,
										9008
									],
									[
										9082,
										9085
									],
									[
										9326,
										9329
									],
									[
										9636,
										9639
									],
									[
										9668,
										9671
									],
									[
										10009,
										10012
									],
									[
										10215,
										10218
									],
									[
										10425,
										10428
									],
									[
										10635,
										10638
									],
									[
										10975,
										10978
									],
									[
										11234,
										11237
									],
									[
										11348,
										11351
									],
									[
										11623,
										11626
									],
									[
										11749,
										11752
									],
									[
										11797,
										11800
									],
									[
										11846,
										11849
									],
									[
										11999,
										12002
									],
									[
										12210,
										12213
									],
									[
										12420,
										12423
									],
									[
										12605,
										12608
									],
									[
										12850,
										12853
									],
									[
										12990,
										12993
									],
									[
										13028,
										13031
									],
									[
										13169,
										13172
									],
									[
										13339,
										13342
									],
									[
										13507,
										13510
									],
									[
										13583,
										13586
									],
									[
										13664,
										13667
									],
									[
										14045,
										14048
									],
									[
										14106,
										14109
									],
									[
										14206,
										14209
									],
									[
										14222,
										14225
									],
									[
										14456,
										14459
									],
									[
										14690,
										14693
									],
									[
										15029,
										15032
									],
									[
										20621,
										20624
									],
									[
										22379,
										22382
									],
									[
										38784,
										38787
									],
									[
										42977,
										42980
									],
									[
										48833,
										48836
									],
									[
										49131,
										49134
									],
									[
										49533,
										49536
									],
									[
										49874,
										49877
									],
									[
										50140,
										50143
									],
									[
										50350,
										50353
									],
									[
										50774,
										50777
									],
									[
										51243,
										51246
									],
									[
										51499,
										51502
									],
									[
										51752,
										51755
									],
									[
										51937,
										51940
									],
									[
										52285,
										52288
									],
									[
										52490,
										52493
									],
									[
										52740,
										52743
									],
									[
										52895,
										52898
									],
									[
										53075,
										53078
									],
									[
										53308,
										53311
									],
									[
										53621,
										53624
									],
									[
										53862,
										53865
									],
									[
										54057,
										54060
									],
									[
										54198,
										54201
									],
									[
										54385,
										54388
									],
									[
										54519,
										54522
									],
									[
										54600,
										54603
									],
									[
										54744,
										54747
									],
									[
										54824,
										54827
									],
									[
										54907,
										54910
									],
									[
										54991,
										54994
									],
									[
										55068,
										55071
									],
									[
										55140,
										55143
									],
									[
										55282,
										55285
									],
									[
										55394,
										55397
									],
									[
										55510,
										55513
									],
									[
										55651,
										55654
									],
									[
										55750,
										55753
									],
									[
										55761,
										55764
									],
									[
										55905,
										55908
									],
									[
										55916,
										55919
									],
									[
										56088,
										56091
									],
									[
										56168,
										56171
									],
									[
										56297,
										56300
									],
									[
										56464,
										56467
									],
									[
										56559,
										56562
									],
									[
										56699,
										56702
									],
									[
										56784,
										56787
									],
									[
										56890,
										56893
									],
									[
										57033,
										57036
									],
									[
										57173,
										57176
									],
									[
										57349,
										57352
									],
									[
										57535,
										57538
									],
									[
										57614,
										57617
									],
									[
										57757,
										57760
									],
									[
										57843,
										57846
									],
									[
										57921,
										57924
									],
									[
										58067,
										58070
									],
									[
										58154,
										58157
									],
									[
										58250,
										58253
									],
									[
										58261,
										58264
									],
									[
										58288,
										58291
									],
									[
										58365,
										58368
									],
									[
										58376,
										58379
									],
									[
										58540,
										58543
									],
									[
										58618,
										58621
									],
									[
										58761,
										58764
									],
									[
										58903,
										58906
									],
									[
										58983,
										58986
									],
									[
										59092,
										59095
									],
									[
										59201,
										59204
									],
									[
										59306,
										59309
									],
									[
										59407,
										59410
									],
									[
										59531,
										59534
									],
									[
										59655,
										59658
									],
									[
										59815,
										59818
									],
									[
										59928,
										59931
									],
									[
										60013,
										60016
									],
									[
										60032,
										60035
									],
									[
										60042,
										60045
									],
									[
										60144,
										60147
									],
									[
										60280,
										60283
									],
									[
										60290,
										60293
									],
									[
										60371,
										60374
									],
									[
										60381,
										60384
									],
									[
										60526,
										60529
									],
									[
										60536,
										60539
									],
									[
										60558,
										60561
									],
									[
										60691,
										60694
									],
									[
										60782,
										60785
									],
									[
										60940,
										60943
									],
									[
										61098,
										61101
									],
									[
										61199,
										61202
									],
									[
										61302,
										61305
									],
									[
										61394,
										61397
									],
									[
										61538,
										61541
									],
									[
										61624,
										61627
									],
									[
										61732,
										61735
									],
									[
										61848,
										61851
									],
									[
										62005,
										62008
									],
									[
										62140,
										62143
									],
									[
										62237,
										62240
									],
									[
										62379,
										62382
									],
									[
										62484,
										62487
									],
									[
										62620,
										62623
									],
									[
										62775,
										62778
									],
									[
										62938,
										62941
									],
									[
										62948,
										62951
									],
									[
										63055,
										63058
									],
									[
										63065,
										63068
									],
									[
										63233,
										63236
									],
									[
										63326,
										63329
									],
									[
										63417,
										63420
									],
									[
										63560,
										63563
									],
									[
										63770,
										63773
									],
									[
										63849,
										63852
									],
									[
										64013,
										64016
									],
									[
										64140,
										64143
									],
									[
										64249,
										64252
									],
									[
										64367,
										64370
									],
									[
										64524,
										64527
									],
									[
										64687,
										64690
									],
									[
										64881,
										64884
									],
									[
										65078,
										65081
									],
									[
										65269,
										65272
									],
									[
										65360,
										65363
									],
									[
										65500,
										65503
									],
									[
										65642,
										65645
									],
									[
										65737,
										65740
									],
									[
										65832,
										65835
									],
									[
										65939,
										65942
									],
									[
										66039,
										66042
									],
									[
										66140,
										66143
									],
									[
										66243,
										66246
									],
									[
										66352,
										66355
									],
									[
										66460,
										66463
									],
									[
										66568,
										66571
									],
									[
										66676,
										66679
									],
									[
										66829,
										66832
									],
									[
										66915,
										66918
									],
									[
										67068,
										67071
									],
									[
										67223,
										67226
									],
									[
										67340,
										67343
									],
									[
										67441,
										67444
									],
									[
										67688,
										67691
									],
									[
										67850,
										67853
									],
									[
										68072,
										68075
									],
									[
										68307,
										68310
									],
									[
										68413,
										68416
									],
									[
										68455,
										68458
									],
									[
										68513,
										68516
									],
									[
										68658,
										68661
									],
									[
										68751,
										68754
									],
									[
										68934,
										68937
									],
									[
										69083,
										69086
									],
									[
										69265,
										69268
									],
									[
										69450,
										69453
									],
									[
										69564,
										69567
									],
									[
										69733,
										69736
									],
									[
										69942,
										69945
									],
									[
										70129,
										70132
									],
									[
										70597,
										70600
									],
									[
										71594,
										71597
									],
									[
										71912,
										71915
									],
									[
										71985,
										71988
									],
									[
										72184,
										72187
									],
									[
										72193,
										72196
									],
									[
										72277,
										72280
									],
									[
										72404,
										72407
									],
									[
										72576,
										72579
									],
									[
										72745,
										72748
									],
									[
										72862,
										72865
									],
									[
										72973,
										72976
									],
									[
										73038,
										73041
									],
									[
										73048,
										73051
									],
									[
										73059,
										73062
									],
									[
										73206,
										73209
									],
									[
										73271,
										73274
									],
									[
										73281,
										73284
									],
									[
										73334,
										73337
									],
									[
										73403,
										73406
									],
									[
										73556,
										73559
									],
									[
										73632,
										73635
									],
									[
										73747,
										73750
									],
									[
										73814,
										73817
									],
									[
										73825,
										73828
									],
									[
										73926,
										73929
									],
									[
										73933,
										73936
									],
									[
										74119,
										74122
									],
									[
										74342,
										74345
									],
									[
										74542,
										74545
									],
									[
										74569,
										74572
									],
									[
										74628,
										74631
									],
									[
										74762,
										74765
									],
									[
										74773,
										74776
									],
									[
										74871,
										74874
									],
									[
										74882,
										74885
									],
									[
										74958,
										74961
									],
									[
										74969,
										74972
									],
									[
										75013,
										75016
									],
									[
										75023,
										75026
									],
									[
										75236,
										75239
									],
									[
										75362,
										75365
									],
									[
										75423,
										75426
									],
									[
										75479,
										75482
									],
									[
										75528,
										75531
									],
									[
										75541,
										75544
									],
									[
										75568,
										75571
									],
									[
										75656,
										75659
									],
									[
										75669,
										75672
									],
									[
										75884,
										75887
									],
									[
										76149,
										76152
									],
									[
										76156,
										76159
									],
									[
										76417,
										76420
									],
									[
										76583,
										76586
									],
									[
										76867,
										76870
									],
									[
										77101,
										77104
									],
									[
										77110,
										77113
									],
									[
										77120,
										77123
									],
									[
										77327,
										77330
									],
									[
										77585,
										77588
									],
									[
										77788,
										77791
									],
									[
										78041,
										78044
									],
									[
										78261,
										78264
									],
									[
										78271,
										78274
									],
									[
										78293,
										78296
									],
									[
										78379,
										78382
									],
									[
										78633,
										78636
									],
									[
										78789,
										78792
									],
									[
										79065,
										79068
									],
									[
										79076,
										79079
									],
									[
										79268,
										79271
									],
									[
										79278,
										79281
									],
									[
										79298,
										79301
									],
									[
										79309,
										79312
									],
									[
										79336,
										79339
									],
									[
										79602,
										79605
									],
									[
										79683,
										79686
									],
									[
										79852,
										79855
									],
									[
										80055,
										80058
									],
									[
										80270,
										80273
									],
									[
										80366,
										80369
									],
									[
										80550,
										80553
									],
									[
										80615,
										80618
									],
									[
										80696,
										80699
									],
									[
										80891,
										80894
									],
									[
										81076,
										81079
									],
									[
										81214,
										81217
									],
									[
										81269,
										81272
									],
									[
										81413,
										81416
									],
									[
										81552,
										81555
									],
									[
										81773,
										81776
									],
									[
										82034,
										82037
									],
									[
										82241,
										82244
									],
									[
										82417,
										82420
									],
									[
										82623,
										82626
									],
									[
										82633,
										82636
									],
									[
										82653,
										82656
									],
									[
										82804,
										82807
									],
									[
										82947,
										82950
									],
									[
										83303,
										83306
									],
									[
										83589,
										83592
									],
									[
										83629,
										83632
									],
									[
										83825,
										83828
									],
									[
										84213,
										84216
									],
									[
										84399,
										84402
									],
									[
										84410,
										84413
									],
									[
										84420,
										84423
									],
									[
										84620,
										84623
									],
									[
										84630,
										84633
									],
									[
										84813,
										84816
									],
									[
										84891,
										84894
									],
									[
										84902,
										84905
									],
									[
										85087,
										85090
									],
									[
										85154,
										85157
									],
									[
										85165,
										85168
									],
									[
										85237,
										85240
									],
									[
										85411,
										85414
									],
									[
										85541,
										85544
									],
									[
										85618,
										85621
									],
									[
										85688,
										85691
									],
									[
										85858,
										85861
									],
									[
										86033,
										86036
									],
									[
										86041,
										86044
									],
									[
										86075,
										86078
									],
									[
										86205,
										86208
									],
									[
										86383,
										86386
									],
									[
										86539,
										86542
									],
									[
										86616,
										86619
									],
									[
										86653,
										86656
									],
									[
										86784,
										86787
									],
									[
										86919,
										86922
									],
									[
										87086,
										87089
									],
									[
										87358,
										87361
									],
									[
										87464,
										87467
									],
									[
										87648,
										87651
									],
									[
										87711,
										87714
									],
									[
										87722,
										87725
									],
									[
										87868,
										87871
									],
									[
										87875,
										87878
									],
									[
										88089,
										88092
									],
									[
										88254,
										88257
									],
									[
										88488,
										88491
									],
									[
										88554,
										88557
									],
									[
										88780,
										88783
									],
									[
										88788,
										88791
									],
									[
										88822,
										88825
									],
									[
										88946,
										88949
									],
									[
										89098,
										89101
									],
									[
										89120,
										89123
									],
									[
										89365,
										89368
									],
									[
										89428,
										89431
									],
									[
										89607,
										89610
									],
									[
										89668,
										89671
									],
									[
										89856,
										89859
									],
									[
										89867,
										89870
									],
									[
										90093,
										90096
									],
									[
										90104,
										90107
									],
									[
										90184,
										90187
									],
									[
										90272,
										90275
									],
									[
										90435,
										90438
									],
									[
										90587,
										90590
									],
									[
										90776,
										90779
									],
									[
										90981,
										90984
									],
									[
										91050,
										91053
									],
									[
										91134,
										91137
									],
									[
										91200,
										91203
									],
									[
										91217,
										91220
									],
									[
										91311,
										91314
									],
									[
										91482,
										91485
									],
									[
										91852,
										91855
									],
									[
										92159,
										92162
									],
									[
										92426,
										92429
									],
									[
										92568,
										92571
									],
									[
										92714,
										92717
									],
									[
										92814,
										92817
									],
									[
										92876,
										92879
									],
									[
										92938,
										92941
									],
									[
										93046,
										93049
									],
									[
										93108,
										93111
									],
									[
										93170,
										93173
									],
									[
										93232,
										93235
									],
									[
										93288,
										93291
									],
									[
										93339,
										93342
									],
									[
										93398,
										93401
									],
									[
										93469,
										93472
									],
									[
										93540,
										93543
									],
									[
										93613,
										93616
									],
									[
										93673,
										93676
									],
									[
										93687,
										93690
									],
									[
										93768,
										93771
									],
									[
										93782,
										93785
									],
									[
										93949,
										93952
									],
									[
										94010,
										94013
									],
									[
										94063,
										94066
									],
									[
										94125,
										94128
									],
									[
										94204,
										94207
									],
									[
										94380,
										94383
									],
									[
										94440,
										94443
									],
									[
										94514,
										94517
									],
									[
										94668,
										94671
									],
									[
										94730,
										94733
									],
									[
										94850,
										94853
									],
									[
										95015,
										95018
									],
									[
										95075,
										95078
									],
									[
										95181,
										95184
									],
									[
										95241,
										95244
									],
									[
										95301,
										95304
									],
									[
										95407,
										95410
									],
									[
										95468,
										95471
									],
									[
										95538,
										95541
									],
									[
										95552,
										95555
									],
									[
										95582,
										95585
									],
									[
										95644,
										95647
									],
									[
										95658,
										95661
									],
									[
										95797,
										95800
									],
									[
										95857,
										95860
									],
									[
										95917,
										95920
									],
									[
										96096,
										96099
									],
									[
										96148,
										96151
									],
									[
										96220,
										96223
									],
									[
										96286,
										96289
									],
									[
										96362,
										96365
									],
									[
										96423,
										96426
									],
									[
										96500,
										96503
									],
									[
										96571,
										96574
									],
									[
										96652,
										96655
									],
									[
										96732,
										96735
									],
									[
										96812,
										96815
									],
									[
										96834,
										96837
									],
									[
										96847,
										96850
									],
									[
										96918,
										96921
									],
									[
										97074,
										97077
									],
									[
										97087,
										97090
									],
									[
										97151,
										97154
									],
									[
										97164,
										97167
									],
									[
										97228,
										97231
									],
									[
										97241,
										97244
									],
									[
										97266,
										97269
									],
									[
										97338,
										97341
									],
									[
										97393,
										97396
									],
									[
										97550,
										97553
									],
									[
										97633,
										97636
									],
									[
										97714,
										97717
									],
									[
										97791,
										97794
									],
									[
										97868,
										97871
									],
									[
										98050,
										98053
									],
									[
										98109,
										98112
									],
									[
										98192,
										98195
									],
									[
										98273,
										98276
									],
									[
										98427,
										98430
									],
									[
										98488,
										98491
									],
									[
										98552,
										98555
									],
									[
										98616,
										98619
									],
									[
										98677,
										98680
									],
									[
										98791,
										98794
									],
									[
										98902,
										98905
									],
									[
										99067,
										99070
									],
									[
										99080,
										99083
									],
									[
										99160,
										99163
									],
									[
										99173,
										99176
									],
									[
										99270,
										99273
									],
									[
										99339,
										99342
									],
									[
										99408,
										99411
									],
									[
										99504,
										99507
									],
									[
										99635,
										99638
									],
									[
										99696,
										99699
									],
									[
										99830,
										99833
									],
									[
										99904,
										99907
									],
									[
										99988,
										99991
									],
									[
										100058,
										100061
									],
									[
										100240,
										100243
									],
									[
										100377,
										100380
									],
									[
										100555,
										100558
									],
									[
										100726,
										100729
									],
									[
										100897,
										100900
									],
									[
										100965,
										100968
									],
									[
										101028,
										101031
									],
									[
										101091,
										101094
									],
									[
										101155,
										101158
									],
									[
										101219,
										101222
									],
									[
										101297,
										101300
									],
									[
										101375,
										101378
									],
									[
										101442,
										101445
									],
									[
										101515,
										101518
									],
									[
										101588,
										101591
									],
									[
										101666,
										101669
									],
									[
										101744,
										101747
									],
									[
										101822,
										101825
									],
									[
										101988,
										101991
									],
									[
										102093,
										102096
									],
									[
										102207,
										102210
									],
									[
										102289,
										102292
									],
									[
										102373,
										102376
									],
									[
										102582,
										102585
									],
									[
										102748,
										102751
									],
									[
										102977,
										102980
									],
									[
										103155,
										103158
									],
									[
										103420,
										103423
									],
									[
										103642,
										103645
									],
									[
										103845,
										103848
									],
									[
										104087,
										104090
									],
									[
										104148,
										104151
									],
									[
										104246,
										104249
									],
									[
										104399,
										104402
									],
									[
										104787,
										104790
									],
									[
										104974,
										104977
									],
									[
										105106,
										105109
									],
									[
										105403,
										105406
									],
									[
										105452,
										105455
									],
									[
										105609,
										105612
									],
									[
										105784,
										105787
									],
									[
										106055,
										106058
									],
									[
										106442,
										106445
									],
									[
										106740,
										106743
									],
									[
										107546,
										107549
									],
									[
										109573,
										109576
									],
									[
										109838,
										109841
									],
									[
										110047,
										110050
									],
									[
										110289,
										110292
									],
									[
										110442,
										110445
									],
									[
										110521,
										110524
									],
									[
										110754,
										110757
									],
									[
										111795,
										111798
									],
									[
										111974,
										111977
									],
									[
										112021,
										112024
									],
									[
										113025,
										113028
									],
									[
										113043,
										113046
									],
									[
										118726,
										118729
									],
									[
										118923,
										118926
									],
									[
										118970,
										118973
									],
									[
										119218,
										119221
									],
									[
										119236,
										119239
									],
									[
										119535,
										119538
									],
									[
										119556,
										119559
									],
									[
										119575,
										119578
									],
									[
										119722,
										119725
									],
									[
										119869,
										119872
									],
									[
										120019,
										120022
									],
									[
										120041,
										120044
									],
									[
										120087,
										120090
									],
									[
										120236,
										120239
									],
									[
										120501,
										120504
									],
									[
										120705,
										120708
									],
									[
										120944,
										120947
									],
									[
										121121,
										121124
									],
									[
										121297,
										121300
									],
									[
										121373,
										121376
									],
									[
										121410,
										121413
									],
									[
										121556,
										121559
									],
									[
										121771,
										121774
									],
									[
										121993,
										121996
									],
									[
										124258,
										124261
									],
									[
										124925,
										124928
									],
									[
										125191,
										125194
									],
									[
										126441,
										126444
									],
									[
										127074,
										127077
									],
									[
										127437,
										127440
									],
									[
										127634,
										127637
									],
									[
										127712,
										127715
									],
									[
										128024,
										128027
									],
									[
										128222,
										128225
									],
									[
										128347,
										128350
									],
									[
										128548,
										128551
									],
									[
										128670,
										128673
									],
									[
										128886,
										128889
									],
									[
										129072,
										129075
									],
									[
										129253,
										129256
									],
									[
										129380,
										129383
									],
									[
										129570,
										129573
									],
									[
										129718,
										129721
									],
									[
										129902,
										129905
									],
									[
										129923,
										129926
									],
									[
										130033,
										130036
									],
									[
										130146,
										130149
									],
									[
										130337,
										130340
									],
									[
										130533,
										130536
									],
									[
										130800,
										130803
									],
									[
										131079,
										131082
									],
									[
										131342,
										131345
									],
									[
										131608,
										131611
									],
									[
										131885,
										131888
									],
									[
										132132,
										132135
									],
									[
										132388,
										132391
									],
									[
										132630,
										132633
									],
									[
										132853,
										132856
									],
									[
										133119,
										133122
									],
									[
										133337,
										133340
									],
									[
										133556,
										133559
									],
									[
										133841,
										133844
									],
									[
										134037,
										134040
									],
									[
										134320,
										134323
									],
									[
										134512,
										134515
									],
									[
										134797,
										134800
									],
									[
										134992,
										134995
									],
									[
										135195,
										135198
									],
									[
										135450,
										135453
									],
									[
										135688,
										135691
									],
									[
										135895,
										135898
									],
									[
										136121,
										136124
									],
									[
										136388,
										136391
									],
									[
										136588,
										136591
									],
									[
										136815,
										136818
									],
									[
										137149,
										137152
									],
									[
										137364,
										137367
									],
									[
										137621,
										137624
									],
									[
										137884,
										137887
									],
									[
										138018,
										138021
									],
									[
										138175,
										138178
									],
									[
										138411,
										138414
									],
									[
										138576,
										138579
									],
									[
										138835,
										138838
									],
									[
										139059,
										139062
									],
									[
										139181,
										139184
									],
									[
										139387,
										139390
									],
									[
										139557,
										139560
									],
									[
										139930,
										139933
									],
									[
										140549,
										140552
									],
									[
										143097,
										143100
									],
									[
										143134,
										143137
									],
									[
										145911,
										145914
									],
									[
										147317,
										147320
									],
									[
										150473,
										150476
									],
									[
										150541,
										150544
									],
									[
										153232,
										153235
									],
									[
										153723,
										153726
									],
									[
										153946,
										153949
									],
									[
										154313,
										154316
									],
									[
										154391,
										154394
									],
									[
										154703,
										154706
									],
									[
										154901,
										154904
									],
									[
										155026,
										155029
									],
									[
										155227,
										155230
									],
									[
										155349,
										155352
									],
									[
										155565,
										155568
									],
									[
										155751,
										155754
									],
									[
										155932,
										155935
									],
									[
										156059,
										156062
									],
									[
										156249,
										156252
									],
									[
										156397,
										156400
									],
									[
										156581,
										156584
									],
									[
										156602,
										156605
									],
									[
										156712,
										156715
									],
									[
										156825,
										156828
									],
									[
										157016,
										157019
									],
									[
										157212,
										157215
									],
									[
										157479,
										157482
									],
									[
										157758,
										157761
									],
									[
										158021,
										158024
									],
									[
										158287,
										158290
									],
									[
										158564,
										158567
									],
									[
										158811,
										158814
									],
									[
										159067,
										159070
									],
									[
										159309,
										159312
									],
									[
										159532,
										159535
									],
									[
										159798,
										159801
									],
									[
										160016,
										160019
									],
									[
										160235,
										160238
									],
									[
										160520,
										160523
									],
									[
										160716,
										160719
									],
									[
										160999,
										161002
									],
									[
										161191,
										161194
									],
									[
										161476,
										161479
									],
									[
										161671,
										161674
									],
									[
										161874,
										161877
									],
									[
										162129,
										162132
									],
									[
										162367,
										162370
									],
									[
										162574,
										162577
									],
									[
										162800,
										162803
									],
									[
										163067,
										163070
									],
									[
										163267,
										163270
									],
									[
										163494,
										163497
									],
									[
										163828,
										163831
									],
									[
										164043,
										164046
									],
									[
										164300,
										164303
									],
									[
										164563,
										164566
									],
									[
										164697,
										164700
									],
									[
										164854,
										164857
									],
									[
										165090,
										165093
									],
									[
										165255,
										165258
									],
									[
										165514,
										165517
									],
									[
										165738,
										165741
									],
									[
										165860,
										165863
									],
									[
										166066,
										166069
									],
									[
										166735,
										166738
									],
									[
										167354,
										167357
									],
									[
										169117,
										169120
									],
									[
										169154,
										169157
									],
									[
										171949,
										171952
									],
									[
										175734,
										175737
									],
									[
										175802,
										175805
									],
									[
										178347,
										178350
									],
									[
										178830,
										178833
									],
									[
										179240,
										179243
									],
									[
										179318,
										179321
									],
									[
										179630,
										179633
									],
									[
										179828,
										179831
									],
									[
										179953,
										179956
									],
									[
										180154,
										180157
									],
									[
										180276,
										180279
									],
									[
										180492,
										180495
									],
									[
										180678,
										180681
									],
									[
										180890,
										180893
									],
									[
										181038,
										181041
									],
									[
										181222,
										181225
									],
									[
										181243,
										181246
									],
									[
										181353,
										181356
									],
									[
										181537,
										181540
									],
									[
										181733,
										181736
									],
									[
										181980,
										181983
									],
									[
										182243,
										182246
									],
									[
										182509,
										182512
									],
									[
										182786,
										182789
									],
									[
										183033,
										183036
									],
									[
										183289,
										183292
									],
									[
										183531,
										183534
									],
									[
										183754,
										183757
									],
									[
										184020,
										184023
									],
									[
										184238,
										184241
									],
									[
										184457,
										184460
									],
									[
										184742,
										184745
									],
									[
										184938,
										184941
									],
									[
										185221,
										185224
									],
									[
										185413,
										185416
									],
									[
										185698,
										185701
									],
									[
										185893,
										185896
									],
									[
										186096,
										186099
									],
									[
										186351,
										186354
									],
									[
										186558,
										186561
									],
									[
										186784,
										186787
									],
									[
										187051,
										187054
									],
									[
										187251,
										187254
									],
									[
										187478,
										187481
									],
									[
										187812,
										187815
									],
									[
										188075,
										188078
									],
									[
										188209,
										188212
									],
									[
										188366,
										188369
									],
									[
										188602,
										188605
									],
									[
										188772,
										188775
									],
									[
										189041,
										189044
									],
									[
										189200,
										189203
									],
									[
										189352,
										189355
									],
									[
										190021,
										190024
									],
									[
										190354,
										190357
									],
									[
										193345,
										193348
									],
									[
										196259,
										196262
									],
									[
										196327,
										196330
									],
									[
										199474,
										199477
									],
									[
										199985,
										199988
									],
									[
										200205,
										200208
									],
									[
										200842,
										200845
									],
									[
										201358,
										201361
									],
									[
										201591,
										201594
									],
									[
										201729,
										201732
									],
									[
										201920,
										201923
									],
									[
										202026,
										202029
									],
									[
										202206,
										202209
									],
									[
										202390,
										202393
									],
									[
										202654,
										202657
									],
									[
										202825,
										202828
									],
									[
										203018,
										203021
									],
									[
										203238,
										203241
									],
									[
										203409,
										203412
									],
									[
										203634,
										203637
									],
									[
										203841,
										203844
									],
									[
										205841,
										205844
									],
									[
										205973,
										205976
									],
									[
										213614,
										213617
									],
									[
										213709,
										213712
									],
									[
										213938,
										213941
									],
									[
										214196,
										214199
									],
									[
										214482,
										214485
									],
									[
										214635,
										214638
									],
									[
										214830,
										214833
									],
									[
										214982,
										214985
									],
									[
										215144,
										215147
									],
									[
										215388,
										215391
									],
									[
										216144,
										216147
									],
									[
										217265,
										217268
									],
									[
										217603,
										217606
									],
									[
										217799,
										217802
									],
									[
										217981,
										217984
									],
									[
										218167,
										218170
									],
									[
										218423,
										218426
									],
									[
										219613,
										219616
									],
									[
										219981,
										219984
									],
									[
										220249,
										220252
									],
									[
										220521,
										220524
									],
									[
										220728,
										220731
									],
									[
										226597,
										226600
									],
									[
										227343,
										227346
									],
									[
										227771,
										227774
									],
									[
										227930,
										227933
									],
									[
										228125,
										228128
									],
									[
										228286,
										228289
									],
									[
										228582,
										228585
									],
									[
										229245,
										229248
									],
									[
										229284,
										229287
									],
									[
										229324,
										229327
									],
									[
										230167,
										230170
									],
									[
										230326,
										230329
									],
									[
										230521,
										230524
									],
									[
										230682,
										230685
									],
									[
										230978,
										230981
									],
									[
										231223,
										231226
									],
									[
										231529,
										231532
									],
									[
										231824,
										231827
									],
									[
										231992,
										231995
									],
									[
										232285,
										232288
									],
									[
										232503,
										232506
									],
									[
										232698,
										232701
									],
									[
										232707,
										232710
									],
									[
										232967,
										232970
									],
									[
										233027,
										233030
									],
									[
										233118,
										233121
									],
									[
										233189,
										233192
									],
									[
										233326,
										233329
									],
									[
										233335,
										233338
									],
									[
										233528,
										233531
									],
									[
										233582,
										233585
									],
									[
										233653,
										233656
									],
									[
										233782,
										233785
									],
									[
										234069,
										234072
									],
									[
										234078,
										234081
									],
									[
										234261,
										234264
									],
									[
										234307,
										234310
									],
									[
										234373,
										234376
									],
									[
										234495,
										234498
									],
									[
										234560,
										234563
									],
									[
										234850,
										234853
									],
									[
										235009,
										235012
									],
									[
										235137,
										235140
									],
									[
										235498,
										235501
									],
									[
										235614,
										235617
									],
									[
										235887,
										235890
									],
									[
										236199,
										236202
									],
									[
										236661,
										236664
									],
									[
										236696,
										236699
									],
									[
										236769,
										236772
									],
									[
										236830,
										236833
									],
									[
										237140,
										237143
									],
									[
										237561,
										237564
									],
									[
										237596,
										237599
									],
									[
										237669,
										237672
									],
									[
										237730,
										237733
									],
									[
										238040,
										238043
									],
									[
										238487,
										238490
									],
									[
										238522,
										238525
									],
									[
										238595,
										238598
									],
									[
										238656,
										238659
									],
									[
										238966,
										238969
									],
									[
										239314,
										239317
									],
									[
										239482,
										239485
									],
									[
										239777,
										239780
									],
									[
										240080,
										240083
									],
									[
										240395,
										240398
									],
									[
										240705,
										240708
									],
									[
										241529,
										241532
									],
									[
										244377,
										244380
									],
									[
										244400,
										244403
									],
									[
										244530,
										244533
									],
									[
										245081,
										245084
									],
									[
										245862,
										245865
									],
									[
										245897,
										245900
									],
									[
										245962,
										245965
									],
									[
										246025,
										246028
									],
									[
										246485,
										246488
									],
									[
										246520,
										246523
									],
									[
										246585,
										246588
									],
									[
										246648,
										246651
									],
									[
										247060,
										247063
									],
									[
										247095,
										247098
									],
									[
										247160,
										247163
									],
									[
										247223,
										247226
									],
									[
										247707,
										247710
									],
									[
										247875,
										247878
									],
									[
										248200,
										248203
									],
									[
										248590,
										248593
									],
									[
										248912,
										248915
									],
									[
										249225,
										249228
									],
									[
										249522,
										249525
									],
									[
										249856,
										249859
									],
									[
										250035,
										250038
									],
									[
										250229,
										250232
									],
									[
										250523,
										250526
									],
									[
										250561,
										250564
									],
									[
										250614,
										250617
									],
									[
										250845,
										250848
									],
									[
										250883,
										250886
									],
									[
										250936,
										250939
									],
									[
										251294,
										251297
									],
									[
										251462,
										251465
									],
									[
										251694,
										251697
									],
									[
										252757,
										252760
									],
									[
										259148,
										259151
									],
									[
										259435,
										259438
									],
									[
										259761,
										259764
									],
									[
										259949,
										259952
									],
									[
										260167,
										260170
									],
									[
										260314,
										260317
									],
									[
										260489,
										260492
									],
									[
										260779,
										260782
									],
									[
										261059,
										261062
									],
									[
										261298,
										261301
									],
									[
										261534,
										261537
									],
									[
										261744,
										261747
									],
									[
										261940,
										261943
									],
									[
										262195,
										262198
									],
									[
										262249,
										262252
									],
									[
										262431,
										262434
									],
									[
										262621,
										262624
									],
									[
										262837,
										262840
									],
									[
										263004,
										263007
									],
									[
										263125,
										263128
									],
									[
										263458,
										263461
									],
									[
										263667,
										263670
									],
									[
										263879,
										263882
									],
									[
										264106,
										264109
									],
									[
										264246,
										264249
									],
									[
										264489,
										264492
									],
									[
										264673,
										264676
									],
									[
										264784,
										264787
									],
									[
										264935,
										264938
									],
									[
										265131,
										265134
									],
									[
										265375,
										265378
									],
									[
										265575,
										265578
									],
									[
										265779,
										265782
									],
									[
										265998,
										266001
									],
									[
										266088,
										266091
									],
									[
										266306,
										266309
									],
									[
										266531,
										266534
									],
									[
										266701,
										266704
									],
									[
										266927,
										266930
									],
									[
										267045,
										267048
									],
									[
										267259,
										267262
									],
									[
										267474,
										267477
									],
									[
										267691,
										267694
									],
									[
										267907,
										267910
									],
									[
										268157,
										268160
									],
									[
										268316,
										268319
									],
									[
										268531,
										268534
									],
									[
										268743,
										268746
									],
									[
										268957,
										268960
									],
									[
										269187,
										269190
									],
									[
										269385,
										269388
									],
									[
										269483,
										269486
									],
									[
										269629,
										269632
									],
									[
										269972,
										269975
									],
									[
										270124,
										270127
									],
									[
										270353,
										270356
									],
									[
										270480,
										270483
									],
									[
										270709,
										270712
									],
									[
										271622,
										271625
									],
									[
										272465,
										272468
									],
									[
										272521,
										272524
									],
									[
										277736,
										277739
									],
									[
										279157,
										279160
									],
									[
										279260,
										279263
									],
									[
										279334,
										279337
									],
									[
										279503,
										279506
									],
									[
										279785,
										279788
									],
									[
										280065,
										280068
									],
									[
										280348,
										280351
									],
									[
										280626,
										280629
									],
									[
										280905,
										280908
									],
									[
										281139,
										281142
									],
									[
										281330,
										281333
									],
									[
										281483,
										281486
									],
									[
										281786,
										281789
									],
									[
										282072,
										282075
									],
									[
										282350,
										282353
									],
									[
										282631,
										282634
									],
									[
										282837,
										282840
									],
									[
										282994,
										282997
									],
									[
										283140,
										283143
									],
									[
										283333,
										283336
									],
									[
										283566,
										283569
									],
									[
										283710,
										283713
									],
									[
										283887,
										283890
									],
									[
										284045,
										284048
									],
									[
										284187,
										284190
									],
									[
										284406,
										284409
									],
									[
										284668,
										284671
									],
									[
										284937,
										284940
									],
									[
										285114,
										285117
									],
									[
										285390,
										285393
									],
									[
										285494,
										285497
									],
									[
										285645,
										285648
									],
									[
										285880,
										285883
									],
									[
										286133,
										286136
									],
									[
										286222,
										286225
									],
									[
										286460,
										286463
									],
									[
										286688,
										286691
									],
									[
										286721,
										286724
									],
									[
										286848,
										286851
									],
									[
										287027,
										287030
									],
									[
										287170,
										287173
									],
									[
										287413,
										287416
									],
									[
										287715,
										287718
									],
									[
										287934,
										287937
									],
									[
										288177,
										288180
									],
									[
										288412,
										288415
									],
									[
										288655,
										288658
									],
									[
										288852,
										288855
									],
									[
										289113,
										289116
									],
									[
										289313,
										289316
									],
									[
										289370,
										289373
									],
									[
										289530,
										289533
									],
									[
										289708,
										289711
									],
									[
										289946,
										289949
									],
									[
										290169,
										290172
									],
									[
										290355,
										290358
									],
									[
										290588,
										290591
									],
									[
										290867,
										290870
									],
									[
										291042,
										291045
									],
									[
										291228,
										291231
									],
									[
										291454,
										291457
									],
									[
										291681,
										291684
									],
									[
										291706,
										291709
									],
									[
										291860,
										291863
									],
									[
										291999,
										292002
									],
									[
										292178,
										292181
									],
									[
										292344,
										292347
									],
									[
										292612,
										292615
									],
									[
										292755,
										292758
									],
									[
										292926,
										292929
									],
									[
										293155,
										293158
									],
									[
										293380,
										293383
									],
									[
										293462,
										293465
									],
									[
										293630,
										293633
									],
									[
										293914,
										293917
									],
									[
										294161,
										294164
									],
									[
										294242,
										294245
									],
									[
										294415,
										294418
									],
									[
										294495,
										294498
									],
									[
										294669,
										294672
									],
									[
										294750,
										294753
									],
									[
										294867,
										294870
									],
									[
										295162,
										295165
									],
									[
										295414,
										295417
									],
									[
										295548,
										295551
									],
									[
										295634,
										295637
									],
									[
										295833,
										295836
									],
									[
										295942,
										295945
									],
									[
										296120,
										296123
									],
									[
										296353,
										296356
									],
									[
										296436,
										296439
									],
									[
										296620,
										296623
									],
									[
										296710,
										296713
									],
									[
										296836,
										296839
									],
									[
										297098,
										297101
									],
									[
										297187,
										297190
									],
									[
										297313,
										297316
									],
									[
										297571,
										297574
									],
									[
										297660,
										297663
									],
									[
										297839,
										297842
									],
									[
										297924,
										297927
									],
									[
										298098,
										298101
									],
									[
										298321,
										298324
									],
									[
										298597,
										298600
									],
									[
										298819,
										298822
									],
									[
										299104,
										299107
									],
									[
										299155,
										299158
									],
									[
										299357,
										299360
									],
									[
										299408,
										299411
									],
									[
										299612,
										299615
									],
									[
										299656,
										299659
									],
									[
										299972,
										299975
									],
									[
										300153,
										300156
									],
									[
										300301,
										300304
									],
									[
										300441,
										300444
									],
									[
										300554,
										300557
									],
									[
										300613,
										300616
									],
									[
										300770,
										300773
									],
									[
										300907,
										300910
									],
									[
										301092,
										301095
									],
									[
										301339,
										301342
									],
									[
										301428,
										301431
									],
									[
										301505,
										301508
									],
									[
										301636,
										301639
									],
									[
										301940,
										301943
									],
									[
										302109,
										302112
									],
									[
										302339,
										302342
									],
									[
										302516,
										302519
									],
									[
										302776,
										302779
									],
									[
										303330,
										303333
									],
									[
										303588,
										303591
									],
									[
										303919,
										303922
									],
									[
										303934,
										303937
									],
									[
										303979,
										303982
									],
									[
										303994,
										303997
									],
									[
										304333,
										304336
									],
									[
										304685,
										304688
									],
									[
										304925,
										304928
									],
									[
										305042,
										305045
									],
									[
										305427,
										305430
									],
									[
										305716,
										305719
									],
									[
										305985,
										305988
									],
									[
										306701,
										306704
									],
									[
										307507,
										307510
									],
									[
										307844,
										307847
									],
									[
										313455,
										313458
									],
									[
										313511,
										313514
									],
									[
										314294,
										314297
									],
									[
										320023,
										320026
									],
									[
										320146,
										320149
									],
									[
										320277,
										320280
									],
									[
										320473,
										320476
									],
									[
										320708,
										320711
									],
									[
										320857,
										320860
									],
									[
										321013,
										321016
									],
									[
										321267,
										321270
									],
									[
										321580,
										321583
									],
									[
										321808,
										321811
									],
									[
										321893,
										321896
									],
									[
										322096,
										322099
									],
									[
										322267,
										322270
									],
									[
										340423,
										340426
									],
									[
										342460,
										342463
									],
									[
										343708,
										343711
									],
									[
										343856,
										343859
									],
									[
										344767,
										344770
									],
									[
										344882,
										344885
									],
									[
										345069,
										345072
									],
									[
										345144,
										345147
									],
									[
										345585,
										345588
									],
									[
										347888,
										347891
									],
									[
										348003,
										348006
									],
									[
										348106,
										348109
									],
									[
										350304,
										350307
									],
									[
										352441,
										352444
									],
									[
										352702,
										352705
									],
									[
										352930,
										352933
									],
									[
										353083,
										353086
									],
									[
										353267,
										353270
									],
									[
										353479,
										353482
									],
									[
										353689,
										353692
									],
									[
										353936,
										353939
									],
									[
										354212,
										354215
									],
									[
										354463,
										354466
									],
									[
										354686,
										354689
									],
									[
										355030,
										355033
									],
									[
										355110,
										355113
									],
									[
										355495,
										355498
									],
									[
										355807,
										355810
									],
									[
										355930,
										355933
									],
									[
										356095,
										356098
									],
									[
										356325,
										356328
									],
									[
										356560,
										356563
									],
									[
										356802,
										356805
									],
									[
										357077,
										357080
									],
									[
										357321,
										357324
									],
									[
										357477,
										357480
									],
									[
										357731,
										357734
									],
									[
										358044,
										358047
									],
									[
										358272,
										358275
									],
									[
										358357,
										358360
									],
									[
										358560,
										358563
									],
									[
										358735,
										358738
									],
									[
										359107,
										359110
									],
									[
										359151,
										359154
									],
									[
										359273,
										359276
									],
									[
										359289,
										359292
									],
									[
										359318,
										359321
									],
									[
										359334,
										359337
									],
									[
										359363,
										359366
									],
									[
										359379,
										359382
									],
									[
										359408,
										359411
									],
									[
										359424,
										359427
									],
									[
										359453,
										359456
									],
									[
										359469,
										359472
									],
									[
										359498,
										359501
									],
									[
										359514,
										359517
									],
									[
										359543,
										359546
									],
									[
										359567,
										359570
									],
									[
										359604,
										359607
									],
									[
										359628,
										359631
									],
									[
										359665,
										359668
									],
									[
										359689,
										359692
									],
									[
										360012,
										360015
									],
									[
										360191,
										360194
									],
									[
										360532,
										360535
									],
									[
										360746,
										360749
									],
									[
										360948,
										360951
									],
									[
										361186,
										361189
									],
									[
										361415,
										361418
									],
									[
										361436,
										361439
									],
									[
										361543,
										361546
									],
									[
										361679,
										361682
									],
									[
										361910,
										361913
									],
									[
										361931,
										361934
									],
									[
										362043,
										362046
									],
									[
										362347,
										362350
									],
									[
										362363,
										362366
									],
									[
										362469,
										362472
									],
									[
										362582,
										362585
									],
									[
										362702,
										362705
									],
									[
										362724,
										362727
									],
									[
										362793,
										362796
									],
									[
										362852,
										362855
									],
									[
										362912,
										362915
									],
									[
										362928,
										362931
									],
									[
										363035,
										363038
									],
									[
										363377,
										363380
									],
									[
										363687,
										363690
									],
									[
										363700,
										363703
									],
									[
										363806,
										363809
									],
									[
										363923,
										363926
									],
									[
										364027,
										364030
									],
									[
										364046,
										364049
									],
									[
										364202,
										364205
									],
									[
										364414,
										364417
									],
									[
										364430,
										364433
									],
									[
										364840,
										364843
									],
									[
										364860,
										364863
									],
									[
										364970,
										364973
									],
									[
										365097,
										365100
									],
									[
										365247,
										365250
									],
									[
										365270,
										365273
									],
									[
										365374,
										365377
									],
									[
										365397,
										365400
									],
									[
										365506,
										365509
									],
									[
										365722,
										365725
									],
									[
										365741,
										365744
									],
									[
										366040,
										366043
									],
									[
										366075,
										366078
									],
									[
										366220,
										366223
									],
									[
										366259,
										366262
									],
									[
										366305,
										366308
									],
									[
										366363,
										366366
									],
									[
										366402,
										366405
									],
									[
										366448,
										366451
									],
									[
										366812,
										366815
									],
									[
										366854,
										366857
									],
									[
										367286,
										367289
									],
									[
										367330,
										367333
									],
									[
										367501,
										367504
									],
									[
										367547,
										367550
									],
									[
										367614,
										367617
									],
									[
										367779,
										367782
									],
									[
										367823,
										367826
									],
									[
										367994,
										367997
									],
									[
										368040,
										368043
									],
									[
										368107,
										368110
									],
									[
										368228,
										368231
									],
									[
										368239,
										368242
									],
									[
										368307,
										368310
									],
									[
										368318,
										368321
									],
									[
										368451,
										368454
									],
									[
										368577,
										368580
									],
									[
										368823,
										368826
									],
									[
										368863,
										368866
									],
									[
										369180,
										369183
									],
									[
										369215,
										369218
									],
									[
										369508,
										369511
									],
									[
										369551,
										369554
									],
									[
										369819,
										369822
									],
									[
										370145,
										370148
									],
									[
										370200,
										370203
									],
									[
										370301,
										370304
									],
									[
										370466,
										370469
									],
									[
										370705,
										370708
									],
									[
										370733,
										370736
									],
									[
										370910,
										370913
									],
									[
										371167,
										371170
									],
									[
										371421,
										371424
									],
									[
										371603,
										371606
									],
									[
										371960,
										371963
									],
									[
										372136,
										372139
									],
									[
										372227,
										372230
									],
									[
										372669,
										372672
									],
									[
										372845,
										372848
									],
									[
										372945,
										372948
									],
									[
										373071,
										373074
									],
									[
										373190,
										373193
									],
									[
										373303,
										373306
									],
									[
										373446,
										373449
									],
									[
										373564,
										373567
									],
									[
										373727,
										373730
									],
									[
										373870,
										373873
									],
									[
										374097,
										374100
									],
									[
										374360,
										374363
									],
									[
										374378,
										374381
									],
									[
										374395,
										374398
									],
									[
										374456,
										374459
									],
									[
										374505,
										374508
									],
									[
										374634,
										374637
									],
									[
										374764,
										374767
									],
									[
										374909,
										374912
									],
									[
										375130,
										375133
									],
									[
										375353,
										375356
									],
									[
										375571,
										375574
									],
									[
										375778,
										375781
									],
									[
										376005,
										376008
									],
									[
										376091,
										376094
									],
									[
										376295,
										376298
									],
									[
										376569,
										376572
									],
									[
										376735,
										376738
									],
									[
										376813,
										376816
									],
									[
										376931,
										376934
									],
									[
										377175,
										377178
									],
									[
										377459,
										377462
									],
									[
										377571,
										377574
									],
									[
										377861,
										377864
									],
									[
										378069,
										378072
									],
									[
										378348,
										378351
									],
									[
										378648,
										378651
									],
									[
										378879,
										378882
									],
									[
										379069,
										379072
									],
									[
										379248,
										379251
									],
									[
										379452,
										379455
									],
									[
										379648,
										379651
									],
									[
										379782,
										379785
									],
									[
										379948,
										379951
									],
									[
										380067,
										380070
									],
									[
										380424,
										380427
									],
									[
										380518,
										380521
									],
									[
										380681,
										380684
									],
									[
										380999,
										381002
									],
									[
										381124,
										381127
									],
									[
										381368,
										381371
									],
									[
										381447,
										381450
									],
									[
										381580,
										381583
									],
									[
										381776,
										381779
									],
									[
										381988,
										381991
									],
									[
										382231,
										382234
									],
									[
										382386,
										382389
									],
									[
										382510,
										382513
									],
									[
										382635,
										382638
									],
									[
										382887,
										382890
									],
									[
										383044,
										383047
									],
									[
										383242,
										383245
									],
									[
										383500,
										383503
									],
									[
										383694,
										383697
									],
									[
										383879,
										383882
									],
									[
										384091,
										384094
									],
									[
										384307,
										384310
									],
									[
										384493,
										384496
									],
									[
										384640,
										384643
									],
									[
										384857,
										384860
									],
									[
										385033,
										385036
									],
									[
										385147,
										385150
									],
									[
										385204,
										385207
									],
									[
										385294,
										385297
									],
									[
										385380,
										385383
									],
									[
										385658,
										385661
									],
									[
										385760,
										385763
									],
									[
										385912,
										385915
									],
									[
										386081,
										386084
									],
									[
										386221,
										386224
									],
									[
										386547,
										386550
									],
									[
										386563,
										386566
									],
									[
										386810,
										386813
									],
									[
										386839,
										386842
									],
									[
										387121,
										387124
									],
									[
										391374,
										391377
									],
									[
										396562,
										396565
									],
									[
										396754,
										396757
									],
									[
										396890,
										396893
									],
									[
										397106,
										397109
									],
									[
										397380,
										397383
									],
									[
										397568,
										397571
									],
									[
										397649,
										397652
									],
									[
										397720,
										397723
									],
									[
										397903,
										397906
									],
									[
										397916,
										397919
									],
									[
										398107,
										398110
									],
									[
										398120,
										398123
									],
									[
										398322,
										398325
									],
									[
										398465,
										398468
									],
									[
										398478,
										398481
									],
									[
										398678,
										398681
									],
									[
										398691,
										398694
									],
									[
										399009,
										399012
									],
									[
										399030,
										399033
									],
									[
										399415,
										399418
									],
									[
										399455,
										399458
									],
									[
										399841,
										399844
									],
									[
										399868,
										399871
									],
									[
										401609,
										401612
									],
									[
										405050,
										405053
									],
									[
										405339,
										405342
									],
									[
										405444,
										405447
									],
									[
										405620,
										405623
									],
									[
										405738,
										405741
									],
									[
										406210,
										406213
									],
									[
										406258,
										406261
									],
									[
										406583,
										406586
									],
									[
										406892,
										406895
									],
									[
										406906,
										406909
									],
									[
										406957,
										406960
									],
									[
										406973,
										406976
									],
									[
										407024,
										407027
									],
									[
										407042,
										407045
									],
									[
										407100,
										407103
									],
									[
										407121,
										407124
									],
									[
										407491,
										407494
									],
									[
										407672,
										407675
									],
									[
										407760,
										407763
									],
									[
										407878,
										407881
									],
									[
										408048,
										408051
									],
									[
										408166,
										408169
									],
									[
										408322,
										408325
									],
									[
										408480,
										408483
									],
									[
										408665,
										408668
									],
									[
										408783,
										408786
									],
									[
										408958,
										408961
									],
									[
										409147,
										409150
									],
									[
										409306,
										409309
									],
									[
										409445,
										409448
									],
									[
										409775,
										409778
									],
									[
										409975,
										409978
									],
									[
										410101,
										410104
									],
									[
										410245,
										410248
									],
									[
										410373,
										410376
									],
									[
										410517,
										410520
									],
									[
										410521,
										410524
									],
									[
										410644,
										410647
									],
									[
										410727,
										410730
									],
									[
										410879,
										410882
									],
									[
										410883,
										410886
									],
									[
										411008,
										411011
									],
									[
										411091,
										411094
									],
									[
										411243,
										411246
									],
									[
										411469,
										411472
									],
									[
										411629,
										411632
									],
									[
										411757,
										411760
									],
									[
										411907,
										411910
									],
									[
										412036,
										412039
									],
									[
										412188,
										412191
									],
									[
										412413,
										412416
									],
									[
										412650,
										412653
									],
									[
										412751,
										412754
									],
									[
										412890,
										412893
									],
									[
										412976,
										412979
									],
									[
										413126,
										413129
									],
									[
										413208,
										413211
									],
									[
										413354,
										413357
									],
									[
										413439,
										413442
									],
									[
										413687,
										413690
									],
									[
										413703,
										413706
									],
									[
										414033,
										414036
									],
									[
										414290,
										414293
									],
									[
										414494,
										414497
									],
									[
										414690,
										414693
									],
									[
										414768,
										414771
									],
									[
										415040,
										415043
									],
									[
										415262,
										415265
									],
									[
										415355,
										415358
									],
									[
										415486,
										415489
									],
									[
										415693,
										415696
									],
									[
										415858,
										415861
									],
									[
										415968,
										415971
									],
									[
										416157,
										416160
									],
									[
										416305,
										416308
									],
									[
										416489,
										416492
									],
									[
										416510,
										416513
									],
									[
										416620,
										416623
									],
									[
										416733,
										416736
									],
									[
										416926,
										416929
									],
									[
										417119,
										417122
									],
									[
										417315,
										417318
									],
									[
										417579,
										417582
									],
									[
										417842,
										417845
									],
									[
										418125,
										418128
									],
									[
										418402,
										418405
									],
									[
										418666,
										418669
									],
									[
										418922,
										418925
									],
									[
										419138,
										419141
									],
									[
										419361,
										419364
									],
									[
										419627,
										419630
									],
									[
										419848,
										419851
									],
									[
										420067,
										420070
									],
									[
										420352,
										420355
									],
									[
										420548,
										420551
									],
									[
										420842,
										420845
									],
									[
										421034,
										421037
									],
									[
										421319,
										421322
									],
									[
										421514,
										421517
									],
									[
										421717,
										421720
									],
									[
										421972,
										421975
									],
									[
										422179,
										422182
									],
									[
										422405,
										422408
									],
									[
										422648,
										422651
									],
									[
										422911,
										422914
									],
									[
										423111,
										423114
									],
									[
										423338,
										423341
									],
									[
										423670,
										423673
									],
									[
										423933,
										423936
									],
									[
										424067,
										424070
									],
									[
										424224,
										424227
									],
									[
										424460,
										424463
									],
									[
										424630,
										424633
									],
									[
										424899,
										424902
									],
									[
										425058,
										425061
									],
									[
										425216,
										425219
									],
									[
										425362,
										425365
									],
									[
										425690,
										425693
									],
									[
										426259,
										426262
									],
									[
										428292,
										428295
									],
									[
										428325,
										428328
									],
									[
										431148,
										431151
									],
									[
										431311,
										431314
									],
									[
										431400,
										431403
									],
									[
										432545,
										432548
									],
									[
										434253,
										434256
									],
									[
										437171,
										437174
									],
									[
										437239,
										437242
									],
									[
										438736,
										438739
									],
									[
										438911,
										438914
									],
									[
										439368,
										439371
									],
									[
										439535,
										439538
									],
									[
										439613,
										439616
									],
									[
										439885,
										439888
									],
									[
										440107,
										440110
									],
									[
										440200,
										440203
									],
									[
										440331,
										440334
									],
									[
										440538,
										440541
									],
									[
										440750,
										440753
									],
									[
										440898,
										440901
									],
									[
										441082,
										441085
									],
									[
										441103,
										441106
									],
									[
										441213,
										441216
									],
									[
										441399,
										441402
									],
									[
										441592,
										441595
									],
									[
										441788,
										441791
									],
									[
										442052,
										442055
									],
									[
										442315,
										442318
									],
									[
										442598,
										442601
									],
									[
										442875,
										442878
									],
									[
										443139,
										443142
									],
									[
										443395,
										443398
									],
									[
										443611,
										443614
									],
									[
										443834,
										443837
									],
									[
										444100,
										444103
									],
									[
										444321,
										444324
									],
									[
										444540,
										444543
									],
									[
										444825,
										444828
									],
									[
										445021,
										445024
									],
									[
										445315,
										445318
									],
									[
										445507,
										445510
									],
									[
										445792,
										445795
									],
									[
										445987,
										445990
									],
									[
										446190,
										446193
									],
									[
										446445,
										446448
									],
									[
										446652,
										446655
									],
									[
										446878,
										446881
									],
									[
										447145,
										447148
									],
									[
										447345,
										447348
									],
									[
										447601,
										447604
									],
									[
										447735,
										447738
									],
									[
										447892,
										447895
									],
									[
										448128,
										448131
									],
									[
										448298,
										448301
									],
									[
										448567,
										448570
									],
									[
										448726,
										448729
									],
									[
										448884,
										448887
									],
									[
										449030,
										449033
									],
									[
										449966,
										449969
									],
									[
										450240,
										450243
									],
									[
										452882,
										452885
									],
									[
										453041,
										453044
									],
									[
										454684,
										454687
									],
									[
										457564,
										457567
									],
									[
										457632,
										457635
									],
									[
										459105,
										459108
									],
									[
										459279,
										459282
									],
									[
										459571,
										459574
									],
									[
										459826,
										459829
									],
									[
										459968,
										459971
									],
									[
										460151,
										460154
									],
									[
										460298,
										460301
									],
									[
										460466,
										460469
									],
									[
										460585,
										460588
									],
									[
										460758,
										460761
									],
									[
										460899,
										460902
									],
									[
										461032,
										461035
									],
									[
										461192,
										461195
									],
									[
										461317,
										461320
									],
									[
										461494,
										461497
									],
									[
										461663,
										461666
									],
									[
										462856,
										462859
									],
									[
										469020,
										469023
									],
									[
										469278,
										469281
									],
									[
										469431,
										469434
									],
									[
										469659,
										469662
									],
									[
										469925,
										469928
									],
									[
										470213,
										470216
									],
									[
										470395,
										470398
									],
									[
										470549,
										470552
									],
									[
										470687,
										470690
									],
									[
										470820,
										470823
									],
									[
										470984,
										470987
									],
									[
										471167,
										471170
									],
									[
										471379,
										471382
									],
									[
										471561,
										471564
									],
									[
										471751,
										471754
									],
									[
										471942,
										471945
									],
									[
										472121,
										472124
									],
									[
										472291,
										472294
									],
									[
										472446,
										472449
									],
									[
										472636,
										472639
									],
									[
										472769,
										472772
									],
									[
										472890,
										472893
									],
									[
										473038,
										473041
									],
									[
										473196,
										473199
									],
									[
										473403,
										473406
									],
									[
										473582,
										473585
									],
									[
										473878,
										473881
									],
									[
										474038,
										474041
									],
									[
										474222,
										474225
									],
									[
										474449,
										474452
									],
									[
										474711,
										474714
									],
									[
										474942,
										474945
									],
									[
										474982,
										474985
									],
									[
										475166,
										475169
									],
									[
										475213,
										475216
									],
									[
										475511,
										475514
									],
									[
										475780,
										475783
									],
									[
										481090,
										481093
									],
									[
										483970,
										483973
									],
									[
										484405,
										484408
									],
									[
										484545,
										484548
									],
									[
										484646,
										484649
									],
									[
										484864,
										484867
									],
									[
										485123,
										485126
									],
									[
										485360,
										485363
									],
									[
										499707,
										499710
									],
									[
										502119,
										502122
									],
									[
										503200,
										503203
									],
									[
										503351,
										503354
									],
									[
										504279,
										504282
									],
									[
										504394,
										504397
									],
									[
										504582,
										504585
									],
									[
										504657,
										504660
									],
									[
										507041,
										507044
									],
									[
										507148,
										507151
									],
									[
										507243,
										507246
									],
									[
										508910,
										508913
									],
									[
										509873,
										509876
									],
									[
										510134,
										510137
									],
									[
										510362,
										510365
									],
									[
										510515,
										510518
									],
									[
										510699,
										510702
									],
									[
										510911,
										510914
									],
									[
										511188,
										511191
									],
									[
										511390,
										511393
									],
									[
										511565,
										511568
									],
									[
										511774,
										511777
									],
									[
										512045,
										512048
									],
									[
										512125,
										512128
									],
									[
										512268,
										512271
									],
									[
										512558,
										512561
									],
									[
										512717,
										512720
									],
									[
										512947,
										512950
									],
									[
										513194,
										513197
									],
									[
										513436,
										513439
									],
									[
										513711,
										513714
									],
									[
										514021,
										514024
									],
									[
										514334,
										514337
									],
									[
										514540,
										514543
									],
									[
										514885,
										514888
									],
									[
										515064,
										515067
									],
									[
										515363,
										515366
									],
									[
										515620,
										515623
									],
									[
										515849,
										515852
									],
									[
										515870,
										515873
									],
									[
										515977,
										515980
									],
									[
										516113,
										516116
									],
									[
										516344,
										516347
									],
									[
										516365,
										516368
									],
									[
										516477,
										516480
									],
									[
										516781,
										516784
									],
									[
										516797,
										516800
									],
									[
										516903,
										516906
									],
									[
										517016,
										517019
									],
									[
										517136,
										517139
									],
									[
										517158,
										517161
									],
									[
										517227,
										517230
									],
									[
										517286,
										517289
									],
									[
										517346,
										517349
									],
									[
										517362,
										517365
									],
									[
										517469,
										517472
									],
									[
										517811,
										517814
									],
									[
										518121,
										518124
									],
									[
										518134,
										518137
									],
									[
										518240,
										518243
									],
									[
										518357,
										518360
									],
									[
										518461,
										518464
									],
									[
										518480,
										518483
									],
									[
										518636,
										518639
									],
									[
										518848,
										518851
									],
									[
										518864,
										518867
									],
									[
										519274,
										519277
									],
									[
										519294,
										519297
									],
									[
										519404,
										519407
									],
									[
										519531,
										519534
									],
									[
										519681,
										519684
									],
									[
										519704,
										519707
									],
									[
										519808,
										519811
									],
									[
										519831,
										519834
									],
									[
										519940,
										519943
									],
									[
										520156,
										520159
									],
									[
										520175,
										520178
									],
									[
										520472,
										520475
									],
									[
										520505,
										520508
									],
									[
										520650,
										520653
									],
									[
										520689,
										520692
									],
									[
										520735,
										520738
									],
									[
										520793,
										520796
									],
									[
										520832,
										520835
									],
									[
										520878,
										520881
									],
									[
										521242,
										521245
									],
									[
										521284,
										521287
									],
									[
										521716,
										521719
									],
									[
										521760,
										521763
									],
									[
										521931,
										521934
									],
									[
										521977,
										521980
									],
									[
										522044,
										522047
									],
									[
										522209,
										522212
									],
									[
										522253,
										522256
									],
									[
										522424,
										522427
									],
									[
										522470,
										522473
									],
									[
										522537,
										522540
									],
									[
										522658,
										522661
									],
									[
										522669,
										522672
									],
									[
										522737,
										522740
									],
									[
										522748,
										522751
									],
									[
										522881,
										522884
									],
									[
										523007,
										523010
									],
									[
										523253,
										523256
									],
									[
										523293,
										523296
									],
									[
										523610,
										523613
									],
									[
										523645,
										523648
									],
									[
										523938,
										523941
									],
									[
										523981,
										523984
									],
									[
										524205,
										524208
									],
									[
										524250,
										524253
									],
									[
										524295,
										524298
									],
									[
										524600,
										524603
									],
									[
										524807,
										524810
									],
									[
										525133,
										525136
									],
									[
										525188,
										525191
									],
									[
										525289,
										525292
									],
									[
										525454,
										525457
									],
									[
										525676,
										525679
									],
									[
										525704,
										525707
									],
									[
										525881,
										525884
									],
									[
										526107,
										526110
									],
									[
										526392,
										526395
									],
									[
										526515,
										526518
									],
									[
										526562,
										526565
									],
									[
										526654,
										526657
									],
									[
										526706,
										526709
									],
									[
										526973,
										526976
									],
									[
										527065,
										527068
									],
									[
										527438,
										527441
									],
									[
										533815,
										533818
									],
									[
										553903,
										553906
									],
									[
										560953,
										560956
									],
									[
										562371,
										562374
									],
									[
										566456,
										566459
									],
									[
										569762,
										569765
									],
									[
										569801,
										569804
									],
									[
										576191,
										576194
									],
									[
										584553,
										584556
									],
									[
										584647,
										584650
									],
									[
										584810,
										584813
									],
									[
										585128,
										585131
									],
									[
										585253,
										585256
									],
									[
										585497,
										585500
									],
									[
										585576,
										585579
									],
									[
										585709,
										585712
									],
									[
										585905,
										585908
									],
									[
										586117,
										586120
									],
									[
										586360,
										586363
									],
									[
										586515,
										586518
									],
									[
										586639,
										586642
									],
									[
										586764,
										586767
									],
									[
										587038,
										587041
									],
									[
										587193,
										587196
									],
									[
										587483,
										587486
									],
									[
										587540,
										587543
									],
									[
										587622,
										587625
									],
									[
										587728,
										587731
									],
									[
										587930,
										587933
									],
									[
										588227,
										588230
									],
									[
										588341,
										588344
									],
									[
										588467,
										588470
									],
									[
										588745,
										588748
									],
									[
										588902,
										588905
									],
									[
										589253,
										589256
									],
									[
										589382,
										589385
									],
									[
										589516,
										589519
									],
									[
										589672,
										589675
									],
									[
										589729,
										589732
									],
									[
										589811,
										589814
									],
									[
										589925,
										589928
									],
									[
										590237,
										590240
									],
									[
										590351,
										590354
									],
									[
										590519,
										590522
									],
									[
										590551,
										590554
									],
									[
										590693,
										590696
									],
									[
										590820,
										590823
									],
									[
										591052,
										591055
									],
									[
										591211,
										591214
									],
									[
										591389,
										591392
									],
									[
										591583,
										591586
									],
									[
										595687,
										595690
									],
									[
										601951,
										601954
									],
									[
										602591,
										602594
									],
									[
										603111,
										603114
									],
									[
										603352,
										603355
									],
									[
										603675,
										603678
									],
									[
										603759,
										603762
									],
									[
										604137,
										604140
									],
									[
										605639,
										605642
									],
									[
										605793,
										605796
									],
									[
										605851,
										605854
									],
									[
										606129,
										606132
									],
									[
										607009,
										607012
									],
									[
										607177,
										607180
									],
									[
										607235,
										607238
									],
									[
										607547,
										607550
									],
									[
										607825,
										607828
									],
									[
										608143,
										608146
									],
									[
										609317,
										609320
									],
									[
										609363,
										609366
									],
									[
										609676,
										609679
									],
									[
										609857,
										609860
									],
									[
										611124,
										611127
									],
									[
										611350,
										611353
									],
									[
										611593,
										611596
									],
									[
										611654,
										611657
									],
									[
										615171,
										615174
									],
									[
										615223,
										615226
									],
									[
										615368,
										615371
									],
									[
										615579,
										615582
									],
									[
										615694,
										615697
									],
									[
										615941,
										615944
									],
									[
										616047,
										616050
									],
									[
										616120,
										616123
									],
									[
										616449,
										616452
									],
									[
										616670,
										616673
									],
									[
										616715,
										616718
									],
									[
										616939,
										616942
									],
									[
										617172,
										617175
									],
									[
										617383,
										617386
									],
									[
										617566,
										617569
									],
									[
										617704,
										617707
									],
									[
										617895,
										617898
									],
									[
										618001,
										618004
									],
									[
										618181,
										618184
									],
									[
										618365,
										618368
									],
									[
										618629,
										618632
									],
									[
										618800,
										618803
									],
									[
										618993,
										618996
									],
									[
										619170,
										619173
									],
									[
										619341,
										619344
									],
									[
										619525,
										619528
									],
									[
										619732,
										619735
									],
									[
										621857,
										621860
									],
									[
										621989,
										621992
									],
									[
										630302,
										630305
									],
									[
										630397,
										630400
									],
									[
										630678,
										630681
									],
									[
										630988,
										630991
									],
									[
										631376,
										631379
									],
									[
										633156,
										633159
									],
									[
										633234,
										633237
									],
									[
										633573,
										633576
									],
									[
										633663,
										633666
									],
									[
										633972,
										633975
									],
									[
										634233,
										634236
									],
									[
										634528,
										634531
									],
									[
										634894,
										634897
									],
									[
										635206,
										635209
									],
									[
										635266,
										635269
									],
									[
										635638,
										635641
									],
									[
										635906,
										635909
									],
									[
										636232,
										636235
									],
									[
										636351,
										636354
									],
									[
										636654,
										636657
									],
									[
										636909,
										636912
									],
									[
										637051,
										637054
									],
									[
										637234,
										637237
									],
									[
										637381,
										637384
									],
									[
										637549,
										637552
									],
									[
										637668,
										637671
									],
									[
										637841,
										637844
									],
									[
										637982,
										637985
									],
									[
										638115,
										638118
									],
									[
										638275,
										638278
									],
									[
										638400,
										638403
									],
									[
										638577,
										638580
									],
									[
										638746,
										638749
									],
									[
										639974,
										639977
									],
									[
										646173,
										646176
									],
									[
										646466,
										646469
									],
									[
										646619,
										646622
									],
									[
										646847,
										646850
									],
									[
										647113,
										647116
									],
									[
										647436,
										647439
									],
									[
										647618,
										647621
									],
									[
										647772,
										647775
									],
									[
										647910,
										647913
									],
									[
										648043,
										648046
									],
									[
										648207,
										648210
									],
									[
										648390,
										648393
									],
									[
										648602,
										648605
									],
									[
										648784,
										648787
									],
									[
										648974,
										648977
									],
									[
										649165,
										649168
									],
									[
										649344,
										649347
									],
									[
										649514,
										649517
									],
									[
										649669,
										649672
									],
									[
										649859,
										649862
									],
									[
										649992,
										649995
									],
									[
										650113,
										650116
									],
									[
										650261,
										650264
									],
									[
										650419,
										650422
									],
									[
										650661,
										650664
									],
									[
										650840,
										650843
									],
									[
										651171,
										651174
									],
									[
										651331,
										651334
									],
									[
										651515,
										651518
									],
									[
										651777,
										651780
									],
									[
										652039,
										652042
									],
									[
										652305,
										652308
									],
									[
										652345,
										652348
									],
									[
										652529,
										652532
									],
									[
										652576,
										652579
									],
									[
										652909,
										652912
									],
									[
										653178,
										653181
									],
									[
										653429,
										653432
									],
									[
										661357,
										661360
									],
									[
										662191,
										662194
									],
									[
										665456,
										665459
									],
									[
										669014,
										669017
									],
									[
										669283,
										669286
									],
									[
										669514,
										669517
									],
									[
										669975,
										669978
									],
									[
										670225,
										670228
									],
									[
										670371,
										670374
									],
									[
										670559,
										670562
									],
									[
										670809,
										670812
									],
									[
										671124,
										671127
									],
									[
										671398,
										671401
									],
									[
										671732,
										671735
									],
									[
										671894,
										671897
									],
									[
										671998,
										672001
									],
									[
										672103,
										672106
									],
									[
										672350,
										672353
									],
									[
										672545,
										672548
									],
									[
										672625,
										672628
									],
									[
										672740,
										672743
									],
									[
										672822,
										672825
									],
									[
										672949,
										672952
									],
									[
										673171,
										673174
									],
									[
										673277,
										673280
									],
									[
										673382,
										673385
									],
									[
										673878,
										673881
									],
									[
										674128,
										674131
									],
									[
										674459,
										674462
									],
									[
										674474,
										674477
									],
									[
										674519,
										674522
									],
									[
										674534,
										674537
									],
									[
										674873,
										674876
									],
									[
										675225,
										675228
									],
									[
										675465,
										675468
									],
									[
										675582,
										675585
									],
									[
										675967,
										675970
									],
									[
										676256,
										676259
									],
									[
										676525,
										676528
									],
									[
										677233,
										677236
									],
									[
										678039,
										678042
									],
									[
										678376,
										678379
									],
									[
										683987,
										683990
									],
									[
										684043,
										684046
									],
									[
										684826,
										684829
									],
									[
										690547,
										690550
									],
									[
										690670,
										690673
									],
									[
										690801,
										690804
									],
									[
										690997,
										691000
									],
									[
										691232,
										691235
									],
									[
										691381,
										691384
									],
									[
										691537,
										691540
									],
									[
										691791,
										691794
									],
									[
										692104,
										692107
									],
									[
										692332,
										692335
									],
									[
										692417,
										692420
									],
									[
										692620,
										692623
									],
									[
										692791,
										692794
									],
									[
										693086,
										693089
									],
									[
										693210,
										693213
									],
									[
										693606,
										693609
									],
									[
										693930,
										693933
									],
									[
										693961,
										693964
									],
									[
										694305,
										694308
									],
									[
										694327,
										694330
									],
									[
										694358,
										694361
									],
									[
										694560,
										694563
									],
									[
										694689,
										694692
									],
									[
										694817,
										694820
									],
									[
										694864,
										694867
									],
									[
										694984,
										694987
									],
									[
										695200,
										695203
									],
									[
										695230,
										695233
									],
									[
										695495,
										695498
									],
									[
										695586,
										695589
									],
									[
										695632,
										695635
									],
									[
										695681,
										695684
									],
									[
										695950,
										695953
									],
									[
										696199,
										696202
									],
									[
										696252,
										696255
									],
									[
										696416,
										696419
									],
									[
										696453,
										696456
									],
									[
										696580,
										696583
									],
									[
										696772,
										696775
									],
									[
										696966,
										696969
									],
									[
										697108,
										697111
									],
									[
										697292,
										697295
									],
									[
										697487,
										697490
									],
									[
										697658,
										697661
									],
									[
										697809,
										697812
									],
									[
										697994,
										697997
									],
									[
										698167,
										698170
									],
									[
										698367,
										698370
									],
									[
										698533,
										698536
									],
									[
										698667,
										698670
									],
									[
										698699,
										698702
									],
									[
										698872,
										698875
									],
									[
										698950,
										698953
									],
									[
										699041,
										699044
									],
									[
										699093,
										699096
									],
									[
										699116,
										699119
									],
									[
										699199,
										699202
									],
									[
										699345,
										699348
									],
									[
										699384,
										699387
									],
									[
										699587,
										699590
									],
									[
										699701,
										699704
									],
									[
										699837,
										699840
									],
									[
										699908,
										699911
									],
									[
										700011,
										700014
									],
									[
										700214,
										700217
									],
									[
										700362,
										700365
									],
									[
										700592,
										700595
									],
									[
										700794,
										700797
									],
									[
										701037,
										701040
									],
									[
										701223,
										701226
									],
									[
										701358,
										701361
									],
									[
										701496,
										701499
									],
									[
										701673,
										701676
									],
									[
										701770,
										701773
									],
									[
										702117,
										702120
									],
									[
										702372,
										702375
									],
									[
										702625,
										702628
									],
									[
										703003,
										703006
									],
									[
										703272,
										703275
									],
									[
										703534,
										703537
									],
									[
										703756,
										703759
									],
									[
										703902,
										703905
									],
									[
										704167,
										704170
									],
									[
										706598,
										706601
									],
									[
										706748,
										706751
									],
									[
										708844,
										708847
									],
									[
										717022,
										717025
									],
									[
										722261,
										722264
									],
									[
										723132,
										723135
									],
									[
										723282,
										723285
									],
									[
										723476,
										723479
									],
									[
										723840,
										723843
									],
									[
										724561,
										724564
									],
									[
										725255,
										725258
									],
									[
										725764,
										725767
									],
									[
										725914,
										725917
									],
									[
										726108,
										726111
									],
									[
										726385,
										726388
									],
									[
										726571,
										726574
									],
									[
										728297,
										728300
									],
									[
										729167,
										729170
									],
									[
										729789,
										729792
									],
									[
										731367,
										731370
									],
									[
										731507,
										731510
									],
									[
										731655,
										731658
									],
									[
										731843,
										731846
									],
									[
										732092,
										732095
									],
									[
										733473,
										733476
									],
									[
										733626,
										733629
									],
									[
										733825,
										733828
									],
									[
										734192,
										734195
									],
									[
										734356,
										734359
									],
									[
										734528,
										734531
									],
									[
										734722,
										734725
									],
									[
										734983,
										734986
									],
									[
										735472,
										735475
									],
									[
										735881,
										735884
									],
									[
										736005,
										736008
									],
									[
										736216,
										736219
									],
									[
										736497,
										736500
									],
									[
										736765,
										736768
									],
									[
										742205,
										742208
									],
									[
										742753,
										742756
									],
									[
										743092,
										743095
									],
									[
										743341,
										743344
									],
									[
										743479,
										743482
									],
									[
										743670,
										743673
									],
									[
										743776,
										743779
									],
									[
										743956,
										743959
									],
									[
										744140,
										744143
									],
									[
										744404,
										744407
									],
									[
										744575,
										744578
									],
									[
										744768,
										744771
									],
									[
										744988,
										744991
									],
									[
										745159,
										745162
									],
									[
										745384,
										745387
									],
									[
										745591,
										745594
									],
									[
										747644,
										747647
									],
									[
										747776,
										747779
									],
									[
										755470,
										755473
									],
									[
										755565,
										755568
									],
									[
										755847,
										755850
									],
									[
										756158,
										756161
									],
									[
										756497,
										756500
									],
									[
										756650,
										756653
									],
									[
										756845,
										756848
									],
									[
										756997,
										757000
									],
									[
										757159,
										757162
									],
									[
										757403,
										757406
									],
									[
										758212,
										758215
									],
									[
										759386,
										759389
									],
									[
										759777,
										759780
									],
									[
										759973,
										759976
									],
									[
										760155,
										760158
									],
									[
										760341,
										760344
									],
									[
										760650,
										760653
									],
									[
										761893,
										761896
									],
									[
										762314,
										762317
									],
									[
										762635,
										762638
									],
									[
										762960,
										762963
									],
									[
										763291,
										763294
									],
									[
										763488,
										763491
									],
									[
										763566,
										763569
									],
									[
										763878,
										763881
									],
									[
										764076,
										764079
									],
									[
										764201,
										764204
									],
									[
										764402,
										764405
									],
									[
										764524,
										764527
									],
									[
										764740,
										764743
									],
									[
										764926,
										764929
									],
									[
										765107,
										765110
									],
									[
										765234,
										765237
									],
									[
										765424,
										765427
									],
									[
										765572,
										765575
									],
									[
										765756,
										765759
									],
									[
										765777,
										765780
									],
									[
										765887,
										765890
									],
									[
										766000,
										766003
									],
									[
										766191,
										766194
									],
									[
										766387,
										766390
									],
									[
										766654,
										766657
									],
									[
										766933,
										766936
									],
									[
										767196,
										767199
									],
									[
										767462,
										767465
									],
									[
										767739,
										767742
									],
									[
										767986,
										767989
									],
									[
										768242,
										768245
									],
									[
										768484,
										768487
									],
									[
										768707,
										768710
									],
									[
										768973,
										768976
									],
									[
										769191,
										769194
									],
									[
										769410,
										769413
									],
									[
										769695,
										769698
									],
									[
										769891,
										769894
									],
									[
										770174,
										770177
									],
									[
										770366,
										770369
									],
									[
										770651,
										770654
									],
									[
										770846,
										770849
									],
									[
										771049,
										771052
									],
									[
										771304,
										771307
									],
									[
										771542,
										771545
									],
									[
										771749,
										771752
									],
									[
										771975,
										771978
									],
									[
										772242,
										772245
									],
									[
										772442,
										772445
									],
									[
										772669,
										772672
									],
									[
										773003,
										773006
									],
									[
										773218,
										773221
									],
									[
										773475,
										773478
									],
									[
										773738,
										773741
									],
									[
										773872,
										773875
									],
									[
										774029,
										774032
									],
									[
										774265,
										774268
									],
									[
										774430,
										774433
									],
									[
										774689,
										774692
									],
									[
										774913,
										774916
									],
									[
										775035,
										775038
									],
									[
										775241,
										775244
									],
									[
										775411,
										775414
									],
									[
										775812,
										775815
									],
									[
										776431,
										776434
									],
									[
										778979,
										778982
									],
									[
										779016,
										779019
									],
									[
										781793,
										781796
									],
									[
										783199,
										783202
									],
									[
										786355,
										786358
									],
									[
										786423,
										786426
									],
									[
										789114,
										789117
									],
									[
										789605,
										789608
									],
									[
										789828,
										789831
									],
									[
										790223,
										790226
									],
									[
										790301,
										790304
									],
									[
										790613,
										790616
									],
									[
										790811,
										790814
									],
									[
										790936,
										790939
									],
									[
										791137,
										791140
									],
									[
										791259,
										791262
									],
									[
										791475,
										791478
									],
									[
										791661,
										791664
									],
									[
										791842,
										791845
									],
									[
										791969,
										791972
									],
									[
										792159,
										792162
									],
									[
										792307,
										792310
									],
									[
										792491,
										792494
									],
									[
										792512,
										792515
									],
									[
										792622,
										792625
									],
									[
										792735,
										792738
									],
									[
										792926,
										792929
									],
									[
										793122,
										793125
									],
									[
										793389,
										793392
									],
									[
										793668,
										793671
									],
									[
										793931,
										793934
									],
									[
										794197,
										794200
									],
									[
										794474,
										794477
									],
									[
										794721,
										794724
									],
									[
										794977,
										794980
									],
									[
										795219,
										795222
									],
									[
										795442,
										795445
									],
									[
										795708,
										795711
									],
									[
										795926,
										795929
									],
									[
										796145,
										796148
									],
									[
										796430,
										796433
									],
									[
										796626,
										796629
									],
									[
										796909,
										796912
									],
									[
										797101,
										797104
									],
									[
										797386,
										797389
									],
									[
										797581,
										797584
									],
									[
										797784,
										797787
									],
									[
										798039,
										798042
									],
									[
										798277,
										798280
									],
									[
										798484,
										798487
									],
									[
										798710,
										798713
									],
									[
										798977,
										798980
									],
									[
										799177,
										799180
									],
									[
										799404,
										799407
									],
									[
										799738,
										799741
									],
									[
										799953,
										799956
									],
									[
										800210,
										800213
									],
									[
										800473,
										800476
									],
									[
										800607,
										800610
									],
									[
										800764,
										800767
									],
									[
										801000,
										801003
									],
									[
										801165,
										801168
									],
									[
										801424,
										801427
									],
									[
										801648,
										801651
									],
									[
										801770,
										801773
									],
									[
										801976,
										801979
									],
									[
										802673,
										802676
									],
									[
										803292,
										803295
									],
									[
										805055,
										805058
									],
									[
										805092,
										805095
									],
									[
										807887,
										807890
									],
									[
										811672,
										811675
									],
									[
										811740,
										811743
									],
									[
										814285,
										814288
									],
									[
										814768,
										814771
									],
									[
										815206,
										815209
									],
									[
										815284,
										815287
									],
									[
										815596,
										815599
									],
									[
										815794,
										815797
									],
									[
										815919,
										815922
									],
									[
										816120,
										816123
									],
									[
										816242,
										816245
									],
									[
										816458,
										816461
									],
									[
										816644,
										816647
									],
									[
										816856,
										816859
									],
									[
										817004,
										817007
									],
									[
										817188,
										817191
									],
									[
										817209,
										817212
									],
									[
										817319,
										817322
									],
									[
										817503,
										817506
									],
									[
										817699,
										817702
									],
									[
										817946,
										817949
									],
									[
										818209,
										818212
									],
									[
										818475,
										818478
									],
									[
										818752,
										818755
									],
									[
										818999,
										819002
									],
									[
										819255,
										819258
									],
									[
										819497,
										819500
									],
									[
										819720,
										819723
									],
									[
										819986,
										819989
									],
									[
										820204,
										820207
									],
									[
										820423,
										820426
									],
									[
										820708,
										820711
									],
									[
										820904,
										820907
									],
									[
										821187,
										821190
									],
									[
										821379,
										821382
									],
									[
										821664,
										821667
									],
									[
										821859,
										821862
									],
									[
										822062,
										822065
									],
									[
										822317,
										822320
									],
									[
										822524,
										822527
									],
									[
										822750,
										822753
									],
									[
										823017,
										823020
									],
									[
										823217,
										823220
									],
									[
										823444,
										823447
									],
									[
										823778,
										823781
									],
									[
										824041,
										824044
									],
									[
										824175,
										824178
									],
									[
										824332,
										824335
									],
									[
										824568,
										824571
									],
									[
										824738,
										824741
									],
									[
										825007,
										825010
									],
									[
										825166,
										825169
									],
									[
										825318,
										825321
									],
									[
										826015,
										826018
									],
									[
										826348,
										826351
									],
									[
										829339,
										829342
									],
									[
										832253,
										832256
									],
									[
										832321,
										832324
									],
									[
										835468,
										835471
									],
									[
										835979,
										835982
									],
									[
										836278,
										836281
									],
									[
										836533,
										836536
									],
									[
										836675,
										836678
									],
									[
										836858,
										836861
									],
									[
										837005,
										837008
									],
									[
										837173,
										837176
									],
									[
										837292,
										837295
									],
									[
										837465,
										837468
									],
									[
										837606,
										837609
									],
									[
										837739,
										837742
									],
									[
										837899,
										837902
									],
									[
										838024,
										838027
									],
									[
										838201,
										838204
									],
									[
										838370,
										838373
									],
									[
										839616,
										839619
									],
									[
										845833,
										845836
									],
									[
										846144,
										846147
									],
									[
										846297,
										846300
									],
									[
										846525,
										846528
									],
									[
										846791,
										846794
									],
									[
										847132,
										847135
									],
									[
										847314,
										847317
									],
									[
										847468,
										847471
									],
									[
										847606,
										847609
									],
									[
										847739,
										847742
									],
									[
										847903,
										847906
									],
									[
										848086,
										848089
									],
									[
										848298,
										848301
									],
									[
										848480,
										848483
									],
									[
										848670,
										848673
									],
									[
										848861,
										848864
									],
									[
										849040,
										849043
									],
									[
										849210,
										849213
									],
									[
										849365,
										849368
									],
									[
										849555,
										849558
									],
									[
										849688,
										849691
									],
									[
										849809,
										849812
									],
									[
										849957,
										849960
									],
									[
										850115,
										850118
									],
									[
										850375,
										850378
									],
									[
										850554,
										850557
									],
									[
										850903,
										850906
									],
									[
										851063,
										851066
									],
									[
										851247,
										851250
									],
									[
										851527,
										851530
									],
									[
										851789,
										851792
									],
									[
										852073,
										852076
									],
									[
										852113,
										852116
									],
									[
										852297,
										852300
									],
									[
										852344,
										852347
									],
									[
										852695,
										852698
									],
									[
										852964,
										852967
									],
									[
										853185,
										853188
									],
									[
										853385,
										853388
									],
									[
										853634,
										853637
									],
									[
										853908,
										853911
									],
									[
										853972,
										853975
									],
									[
										854239,
										854242
									],
									[
										854545,
										854548
									],
									[
										854759,
										854762
									],
									[
										854907,
										854910
									],
									[
										855044,
										855047
									],
									[
										855231,
										855234
									],
									[
										855482,
										855485
									],
									[
										855872,
										855875
									],
									[
										856090,
										856093
									],
									[
										856136,
										856139
									],
									[
										856145,
										856148
									],
									[
										856313,
										856316
									],
									[
										856571,
										856574
									],
									[
										856954,
										856957
									],
									[
										857094,
										857097
									],
									[
										857355,
										857358
									],
									[
										857536,
										857539
									],
									[
										857560,
										857563
									],
									[
										857690,
										857693
									],
									[
										857824,
										857827
									],
									[
										857935,
										857938
									],
									[
										858064,
										858067
									],
									[
										858247,
										858250
									],
									[
										858271,
										858274
									],
									[
										858302,
										858305
									],
									[
										858432,
										858435
									],
									[
										858566,
										858569
									],
									[
										858677,
										858680
									],
									[
										858819,
										858822
									],
									[
										861811,
										861814
									],
									[
										863530,
										863533
									],
									[
										866096,
										866099
									],
									[
										869337,
										869340
									],
									[
										869484,
										869487
									],
									[
										869695,
										869698
									],
									[
										869918,
										869921
									],
									[
										870147,
										870150
									],
									[
										870435,
										870438
									],
									[
										870538,
										870541
									],
									[
										870872,
										870875
									],
									[
										870970,
										870973
									],
									[
										871293,
										871296
									],
									[
										871479,
										871482
									],
									[
										871758,
										871761
									],
									[
										872039,
										872042
									],
									[
										872236,
										872239
									],
									[
										872436,
										872439
									],
									[
										872639,
										872642
									],
									[
										872750,
										872753
									],
									[
										872914,
										872917
									],
									[
										873199,
										873202
									],
									[
										873371,
										873374
									],
									[
										873562,
										873565
									],
									[
										873764,
										873767
									],
									[
										874045,
										874048
									],
									[
										874285,
										874288
									],
									[
										874535,
										874538
									],
									[
										874823,
										874826
									],
									[
										874883,
										874886
									],
									[
										875056,
										875059
									],
									[
										875342,
										875345
									],
									[
										875431,
										875434
									],
									[
										875670,
										875673
									],
									[
										875765,
										875768
									],
									[
										875906,
										875909
									],
									[
										876043,
										876046
									],
									[
										876144,
										876147
									],
									[
										876301,
										876304
									],
									[
										876377,
										876380
									],
									[
										876670,
										876673
									],
									[
										876896,
										876899
									],
									[
										877177,
										877180
									],
									[
										877386,
										877389
									],
									[
										877488,
										877491
									],
									[
										877759,
										877762
									],
									[
										877844,
										877847
									],
									[
										877967,
										877970
									],
									[
										878117,
										878120
									],
									[
										880076,
										880079
									],
									[
										880456,
										880459
									],
									[
										880879,
										880882
									],
									[
										882061,
										882064
									],
									[
										882688,
										882691
									],
									[
										882906,
										882909
									],
									[
										885027,
										885030
									],
									[
										885717,
										885720
									],
									[
										886192,
										886195
									],
									[
										886843,
										886846
									],
									[
										888557,
										888560
									],
									[
										888849,
										888852
									],
									[
										889127,
										889130
									],
									[
										889455,
										889458
									],
									[
										889590,
										889593
									],
									[
										889716,
										889719
									],
									[
										889934,
										889937
									],
									[
										890090,
										890093
									],
									[
										890288,
										890291
									],
									[
										890456,
										890459
									],
									[
										890723,
										890726
									],
									[
										890862,
										890865
									],
									[
										891052,
										891055
									],
									[
										891449,
										891452
									],
									[
										891782,
										891785
									],
									[
										892005,
										892008
									],
									[
										892377,
										892380
									],
									[
										892717,
										892720
									],
									[
										893029,
										893032
									],
									[
										893344,
										893347
									],
									[
										893638,
										893641
									],
									[
										893868,
										893871
									],
									[
										894050,
										894053
									],
									[
										894281,
										894284
									],
									[
										894699,
										894702
									],
									[
										894943,
										894946
									],
									[
										895158,
										895161
									],
									[
										895515,
										895518
									],
									[
										895786,
										895789
									],
									[
										896028,
										896031
									],
									[
										896078,
										896081
									],
									[
										896411,
										896414
									],
									[
										896564,
										896567
									],
									[
										896856,
										896859
									],
									[
										897058,
										897061
									],
									[
										897290,
										897293
									],
									[
										897627,
										897630
									],
									[
										897771,
										897774
									],
									[
										897921,
										897924
									],
									[
										898145,
										898148
									],
									[
										898407,
										898410
									],
									[
										898689,
										898692
									],
									[
										898893,
										898896
									],
									[
										899246,
										899249
									],
									[
										899493,
										899496
									],
									[
										899720,
										899723
									],
									[
										900096,
										900099
									],
									[
										900254,
										900257
									],
									[
										900565,
										900568
									],
									[
										900965,
										900968
									],
									[
										901119,
										901122
									],
									[
										901508,
										901511
									],
									[
										901836,
										901839
									],
									[
										902198,
										902201
									],
									[
										902403,
										902406
									],
									[
										902654,
										902657
									],
									[
										902804,
										902807
									],
									[
										903100,
										903103
									],
									[
										908644,
										908647
									],
									[
										911579,
										911582
									],
									[
										912070,
										912073
									],
									[
										912210,
										912213
									],
									[
										912311,
										912314
									],
									[
										912612,
										912615
									],
									[
										912736,
										912739
									],
									[
										912966,
										912969
									],
									[
										913094,
										913097
									],
									[
										913140,
										913143
									],
									[
										913296,
										913299
									],
									[
										913505,
										913508
									],
									[
										913719,
										913722
									],
									[
										914028,
										914031
									],
									[
										914259,
										914262
									],
									[
										914379,
										914382
									],
									[
										914549,
										914552
									],
									[
										914608,
										914611
									],
									[
										914783,
										914786
									],
									[
										914978,
										914981
									],
									[
										915102,
										915105
									],
									[
										915260,
										915263
									],
									[
										915428,
										915431
									],
									[
										915609,
										915612
									],
									[
										915818,
										915821
									],
									[
										916055,
										916058
									],
									[
										916352,
										916355
									],
									[
										916583,
										916586
									],
									[
										916904,
										916907
									],
									[
										917080,
										917083
									],
									[
										917180,
										917183
									],
									[
										917306,
										917309
									],
									[
										917438,
										917441
									],
									[
										917571,
										917574
									],
									[
										917686,
										917689
									],
									[
										917846,
										917849
									],
									[
										917988,
										917991
									],
									[
										918234,
										918237
									],
									[
										918492,
										918495
									],
									[
										918510,
										918513
									],
									[
										918569,
										918572
									],
									[
										918693,
										918696
									],
									[
										918817,
										918820
									],
									[
										919007,
										919010
									],
									[
										919229,
										919232
									],
									[
										919315,
										919318
									],
									[
										919494,
										919497
									],
									[
										919874,
										919877
									],
									[
										920181,
										920184
									],
									[
										920248,
										920251
									],
									[
										920366,
										920369
									],
									[
										920634,
										920637
									],
									[
										920919,
										920922
									],
									[
										921031,
										921034
									],
									[
										921304,
										921307
									],
									[
										921510,
										921513
									],
									[
										921775,
										921778
									],
									[
										921934,
										921937
									],
									[
										922149,
										922152
									],
									[
										922345,
										922348
									],
									[
										922479,
										922482
									],
									[
										922645,
										922648
									],
									[
										922764,
										922767
									],
									[
										923063,
										923066
									],
									[
										923217,
										923220
									],
									[
										923310,
										923313
									],
									[
										923406,
										923409
									],
									[
										923550,
										923553
									],
									[
										923704,
										923707
									],
									[
										923848,
										923851
									],
									[
										923999,
										924002
									],
									[
										924140,
										924143
									],
									[
										924298,
										924301
									],
									[
										924431,
										924434
									],
									[
										924453,
										924456
									],
									[
										924678,
										924681
									],
									[
										924869,
										924872
									],
									[
										925094,
										925097
									],
									[
										925246,
										925249
									],
									[
										925297,
										925300
									],
									[
										925478,
										925481
									],
									[
										925628,
										925631
									],
									[
										925734,
										925737
									],
									[
										925772,
										925775
									],
									[
										926030,
										926033
									],
									[
										926234,
										926237
									],
									[
										926383,
										926386
									],
									[
										926515,
										926518
									],
									[
										926638,
										926641
									],
									[
										926744,
										926747
									],
									[
										926862,
										926865
									],
									[
										927029,
										927032
									],
									[
										927123,
										927126
									],
									[
										927315,
										927318
									],
									[
										927430,
										927433
									],
									[
										927548,
										927551
									],
									[
										927665,
										927668
									],
									[
										927777,
										927780
									],
									[
										927896,
										927899
									],
									[
										928010,
										928013
									],
									[
										928128,
										928131
									],
									[
										928236,
										928239
									],
									[
										928390,
										928393
									],
									[
										928522,
										928525
									],
									[
										928671,
										928674
									],
									[
										928777,
										928780
									],
									[
										928907,
										928910
									],
									[
										929023,
										929026
									],
									[
										929141,
										929144
									],
									[
										929249,
										929252
									],
									[
										929360,
										929363
									],
									[
										929476,
										929479
									],
									[
										929677,
										929680
									],
									[
										929817,
										929820
									],
									[
										929927,
										929930
									],
									[
										930079,
										930082
									],
									[
										930254,
										930257
									],
									[
										930441,
										930444
									],
									[
										930596,
										930599
									],
									[
										930797,
										930800
									],
									[
										930969,
										930972
									],
									[
										931190,
										931193
									],
									[
										931380,
										931383
									],
									[
										931491,
										931494
									],
									[
										931637,
										931640
									],
									[
										931763,
										931766
									],
									[
										931927,
										931930
									],
									[
										932090,
										932093
									],
									[
										932313,
										932316
									],
									[
										932459,
										932462
									],
									[
										932575,
										932578
									],
									[
										932723,
										932726
									],
									[
										932885,
										932888
									],
									[
										933070,
										933073
									],
									[
										933256,
										933259
									],
									[
										933443,
										933446
									],
									[
										933594,
										933597
									],
									[
										933738,
										933741
									],
									[
										933865,
										933868
									],
									[
										933885,
										933888
									],
									[
										934133,
										934136
									],
									[
										934171,
										934174
									],
									[
										934248,
										934251
									],
									[
										934424,
										934427
									],
									[
										934656,
										934659
									],
									[
										934775,
										934778
									],
									[
										934896,
										934899
									],
									[
										935272,
										935275
									],
									[
										935476,
										935479
									],
									[
										935690,
										935693
									],
									[
										936003,
										936006
									],
									[
										936216,
										936219
									],
									[
										936580,
										936583
									],
									[
										936859,
										936862
									],
									[
										937038,
										937041
									],
									[
										937316,
										937319
									],
									[
										937518,
										937521
									],
									[
										937729,
										937732
									],
									[
										937885,
										937888
									],
									[
										938016,
										938019
									],
									[
										938261,
										938264
									],
									[
										938492,
										938495
									],
									[
										938743,
										938746
									],
									[
										938858,
										938861
									],
									[
										939084,
										939087
									],
									[
										939274,
										939277
									],
									[
										939514,
										939517
									],
									[
										939859,
										939862
									],
									[
										940309,
										940312
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/relax/supernew.js",
					"settings":
					{
						"buffer_size": 425,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 42.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.448404415318,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 381.0
	},
	"replace":
	{
		"height": 86.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"dagre",
				"play/d3/WebContent/dagre-d3.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 296.0,
	"status_bar_visible": true
}
